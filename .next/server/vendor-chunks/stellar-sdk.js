"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stellar-sdk";
exports.ids = ["vendor-chunks/stellar-sdk"];
exports.modules = {

/***/ "(ssr)/./node_modules/stellar-sdk/lib/config.js":
/*!************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/config.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Config = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar defaultConfig = {\n  allowHttp: false,\n  timeout: 0\n};\nvar config = _objectSpread({}, defaultConfig);\nvar Config = exports.Config = function () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n  return _createClass(Config, null, [{\n    key: \"setAllowHttp\",\n    value: function setAllowHttp(value) {\n      config.allowHttp = value;\n    }\n  }, {\n    key: \"setTimeout\",\n    value: function setTimeout(value) {\n      config.timeout = value;\n    }\n  }, {\n    key: \"isAllowHttp\",\n    value: function isAllowHttp() {\n      return config.allowHttp;\n    }\n  }, {\n    key: \"getTimeout\",\n    value: function getTimeout() {\n      return config.timeout;\n    }\n  }, {\n    key: \"setDefault\",\n    value: function setDefault() {\n      config = _objectSpread({}, defaultConfig);\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixjQUFjO0FBQ2Qsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLHlCQUF5Qix3QkFBd0Isb0NBQW9DLHlDQUF5QyxrQ0FBa0MsMERBQTBELDBCQUEwQjtBQUNwUCw0QkFBNEIsZ0JBQWdCLHNCQUFzQixPQUFPLGtEQUFrRCxzREFBc0QsOEJBQThCLG1KQUFtSixxRUFBcUUsS0FBSztBQUM1YSxvQ0FBb0Msb0VBQW9FLDBEQUEwRDtBQUNsSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3UTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbmZpZy5qcz84NmRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Db25maWcgPSB2b2lkIDA7XG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsIHIsIHQpIHsgcmV0dXJuIChyID0gX3RvUHJvcGVydHlLZXkocikpIGluIGUgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgeyB2YWx1ZTogdCwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCB9KSA6IGVbcl0gPSB0LCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxudmFyIGRlZmF1bHRDb25maWcgPSB7XG4gIGFsbG93SHR0cDogZmFsc2UsXG4gIHRpbWVvdXQ6IDBcbn07XG52YXIgY29uZmlnID0gX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdENvbmZpZyk7XG52YXIgQ29uZmlnID0gZXhwb3J0cy5Db25maWcgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENvbmZpZygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29uZmlnKTtcbiAgfVxuICByZXR1cm4gX2NyZWF0ZUNsYXNzKENvbmZpZywgbnVsbCwgW3tcbiAgICBrZXk6IFwic2V0QWxsb3dIdHRwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldEFsbG93SHR0cCh2YWx1ZSkge1xuICAgICAgY29uZmlnLmFsbG93SHR0cCA9IHZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXRUaW1lb3V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFRpbWVvdXQodmFsdWUpIHtcbiAgICAgIGNvbmZpZy50aW1lb3V0ID0gdmFsdWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzQWxsb3dIdHRwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzQWxsb3dIdHRwKCkge1xuICAgICAgcmV0dXJuIGNvbmZpZy5hbGxvd0h0dHA7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFRpbWVvdXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VGltZW91dCgpIHtcbiAgICAgIHJldHVybiBjb25maWcudGltZW91dDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0RGVmYXVsdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWZhdWx0KCkge1xuICAgICAgY29uZmlnID0gX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdENvbmZpZyk7XG4gICAgfVxuICB9XSk7XG59KCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/assembled_transaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AssembledTransaction = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _server = __webpack_require__(/*! ../rpc/server */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\");\nvar _api = __webpack_require__(/*! ../rpc/api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _transaction = __webpack_require__(/*! ../rpc/transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nvar _sent_transaction = __webpack_require__(/*! ./sent_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\");\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar AssembledTransaction = exports.AssembledTransaction = function () {\n  function AssembledTransaction(options) {\n    var _this = this,\n      _this$options$simulat,\n      _this$options$allowHt;\n    _classCallCheck(this, AssembledTransaction);\n    _defineProperty(this, \"simulate\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n      var _restore;\n      var _ref2,\n        restore,\n        account,\n        result,\n        _this$options$fee,\n        _this$options$args,\n        _this$options$timeout,\n        contract,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, restore = _ref2.restore;\n            if (_this.built) {\n              _context.next = 5;\n              break;\n            }\n            if (_this.raw) {\n              _context.next = 4;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been assembled; \" + \"call `AssembledTransaction.build` first.\");\n          case 4:\n            _this.built = _this.raw.build();\n          case 5:\n            restore = (_restore = restore) !== null && _restore !== void 0 ? _restore : _this.options.restore;\n            delete _this.simulationResult;\n            delete _this.simulationTransactionData;\n            _context.next = 10;\n            return _this.server.simulateTransaction(_this.built);\n          case 10:\n            _this.simulation = _context.sent;\n            if (!(restore && _api.Api.isSimulationRestore(_this.simulation))) {\n              _context.next = 25;\n              break;\n            }\n            _context.next = 14;\n            return (0, _utils.getAccount)(_this.options, _this.server);\n          case 14:\n            account = _context.sent;\n            _context.next = 17;\n            return _this.restoreFootprint(_this.simulation.restorePreamble, account);\n          case 17:\n            result = _context.sent;\n            if (!(result.status === _api.Api.GetTransactionStatus.SUCCESS)) {\n              _context.next = 24;\n              break;\n            }\n            contract = new _stellarBase.Contract(_this.options.contractId);\n            _this.raw = new _stellarBase.TransactionBuilder(account, {\n              fee: (_this$options$fee = _this.options.fee) !== null && _this$options$fee !== void 0 ? _this$options$fee : _stellarBase.BASE_FEE,\n              networkPassphrase: _this.options.networkPassphrase\n            }).addOperation(contract.call.apply(contract, [_this.options.method].concat(_toConsumableArray((_this$options$args = _this.options.args) !== null && _this$options$args !== void 0 ? _this$options$args : [])))).setTimeout((_this$options$timeout = _this.options.timeoutInSeconds) !== null && _this$options$timeout !== void 0 ? _this$options$timeout : _types.DEFAULT_TIMEOUT);\n            _context.next = 23;\n            return _this.simulate();\n          case 23:\n            return _context.abrupt(\"return\", _this);\n          case 24:\n            throw new AssembledTransaction.Errors.RestorationFailure(\"Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:\\n\".concat(JSON.stringify(result)));\n          case 25:\n            if (_api.Api.isSimulationSuccess(_this.simulation)) {\n              _this.built = (0, _transaction.assembleTransaction)(_this.built, _this.simulation).build();\n            }\n            return _context.abrupt(\"return\", _this);\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    _defineProperty(this, \"sign\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n      var _this$options$timeout2;\n      var _ref4,\n        _ref4$force,\n        force,\n        _ref4$signTransaction,\n        signTransaction,\n        timeoutInSeconds,\n        signature,\n        _args2 = arguments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref4 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref4$force = _ref4.force, force = _ref4$force === void 0 ? false : _ref4$force, _ref4$signTransaction = _ref4.signTransaction, signTransaction = _ref4$signTransaction === void 0 ? _this.options.signTransaction : _ref4$signTransaction;\n            if (_this.built) {\n              _context2.next = 3;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been simulated\");\n          case 3:\n            if (!(!force && _this.isReadCall)) {\n              _context2.next = 5;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSignatureNeeded(\"This is a read call. It requires no signature or sending. \" + \"Use `force: true` to sign and send anyway.\");\n          case 5:\n            if (signTransaction) {\n              _context2.next = 7;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSigner(\"You must provide a signTransaction function, either when calling \" + \"`signAndSend` or when initializing your Client\");\n          case 7:\n            if (!_this.needsNonInvokerSigningBy().length) {\n              _context2.next = 9;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NeedsMoreSignatures(\"Transaction requires more signatures. \" + \"See `needsNonInvokerSigningBy` for details.\");\n          case 9:\n            timeoutInSeconds = (_this$options$timeout2 = _this.options.timeoutInSeconds) !== null && _this$options$timeout2 !== void 0 ? _this$options$timeout2 : _types.DEFAULT_TIMEOUT;\n            _this.built = _stellarBase.TransactionBuilder.cloneFrom(_this.built, {\n              fee: _this.built.fee,\n              timebounds: undefined,\n              sorobanData: _this.simulationData.transactionData\n            }).setTimeout(timeoutInSeconds).build();\n            _context2.next = 13;\n            return signTransaction(_this.built.toXDR(), {\n              networkPassphrase: _this.options.networkPassphrase\n            });\n          case 13:\n            signature = _context2.sent;\n            _this.signed = _stellarBase.TransactionBuilder.fromXDR(signature, _this.options.networkPassphrase);\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n    _defineProperty(this, \"signAndSend\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {\n      var _ref6,\n        _ref6$force,\n        force,\n        _ref6$signTransaction,\n        signTransaction,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _ref6 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, _ref6$force = _ref6.force, force = _ref6$force === void 0 ? false : _ref6$force, _ref6$signTransaction = _ref6.signTransaction, signTransaction = _ref6$signTransaction === void 0 ? _this.options.signTransaction : _ref6$signTransaction;\n            if (_this.signed) {\n              _context3.next = 4;\n              break;\n            }\n            _context3.next = 4;\n            return _this.sign({\n              force: force,\n              signTransaction: signTransaction\n            });\n          case 4:\n            return _context3.abrupt(\"return\", _this.send());\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n    _defineProperty(this, \"getStorageExpiration\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {\n      var entryRes;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this.server.getLedgerEntries(new _stellarBase.Contract(_this.options.contractId).getFootprint());\n          case 2:\n            entryRes = _context4.sent;\n            if (!(!entryRes.entries || !entryRes.entries.length || !entryRes.entries[0].liveUntilLedgerSeq)) {\n              _context4.next = 5;\n              break;\n            }\n            throw new Error(\"failed to get ledger entry\");\n          case 5:\n            return _context4.abrupt(\"return\", entryRes.entries[0].liveUntilLedgerSeq);\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    })));\n    _defineProperty(this, \"needsNonInvokerSigningBy\", function () {\n      var _rawInvokeHostFunctio;\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref8$includeAlreadyS = _ref8.includeAlreadySigned,\n        includeAlreadySigned = _ref8$includeAlreadyS === void 0 ? false : _ref8$includeAlreadyS;\n      if (!_this.built) {\n        throw new Error(\"Transaction has not yet been simulated\");\n      }\n      if (!(\"operations\" in _this.built)) {\n        throw new Error(\"Unexpected Transaction type; no operations: \".concat(JSON.stringify(_this.built)));\n      }\n      var rawInvokeHostFunctionOp = _this.built.operations[0];\n      return _toConsumableArray(new Set(((_rawInvokeHostFunctio = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio !== void 0 ? _rawInvokeHostFunctio : []).filter(function (entry) {\n        return entry.credentials().switch() === _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (includeAlreadySigned || entry.credentials().address().signature().switch().name === \"scvVoid\");\n      }).map(function (entry) {\n        return _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());\n      })));\n    });\n    _defineProperty(this, \"signAuthEntries\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {\n      var _rawInvokeHostFunctio2;\n      var _ref10,\n        _ref10$expiration,\n        expiration,\n        _ref10$signAuthEntry,\n        signAuthEntry,\n        _ref10$publicKey,\n        publicKey,\n        needsNonInvokerSigningBy,\n        rawInvokeHostFunctionOp,\n        authEntries,\n        _iterator,\n        _step,\n        _step$value,\n        i,\n        entry,\n        pk,\n        _args6 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref10 = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, _ref10$expiration = _ref10.expiration, expiration = _ref10$expiration === void 0 ? _this.getStorageExpiration() : _ref10$expiration, _ref10$signAuthEntry = _ref10.signAuthEntry, signAuthEntry = _ref10$signAuthEntry === void 0 ? _this.options.signAuthEntry : _ref10$signAuthEntry, _ref10$publicKey = _ref10.publicKey, publicKey = _ref10$publicKey === void 0 ? _this.options.publicKey : _ref10$publicKey;\n            if (_this.built) {\n              _context6.next = 3;\n              break;\n            }\n            throw new Error(\"Transaction has not yet been assembled or simulated\");\n          case 3:\n            needsNonInvokerSigningBy = _this.needsNonInvokerSigningBy();\n            if (needsNonInvokerSigningBy) {\n              _context6.next = 6;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoUnsignedNonInvokerAuthEntries(\"No unsigned non-invoker auth entries; maybe you already signed?\");\n          case 6:\n            if (!(needsNonInvokerSigningBy.indexOf(publicKey !== null && publicKey !== void 0 ? publicKey : \"\") === -1)) {\n              _context6.next = 8;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSignatureNeeded(\"No auth entries for public key \\\"\".concat(publicKey, \"\\\"\"));\n          case 8:\n            if (signAuthEntry) {\n              _context6.next = 10;\n              break;\n            }\n            throw new AssembledTransaction.Errors.NoSigner(\"You must provide `signAuthEntry` when calling `signAuthEntries`, \" + \"or when constructing the `Client` or `AssembledTransaction`\");\n          case 10:\n            rawInvokeHostFunctionOp = _this.built.operations[0];\n            authEntries = (_rawInvokeHostFunctio2 = rawInvokeHostFunctionOp.auth) !== null && _rawInvokeHostFunctio2 !== void 0 ? _rawInvokeHostFunctio2 : [];\n            _iterator = _createForOfIteratorHelper(authEntries.entries());\n            _context6.prev = 13;\n            _iterator.s();\n          case 15:\n            if ((_step = _iterator.n()).done) {\n              _context6.next = 34;\n              break;\n            }\n            _step$value = _slicedToArray(_step.value, 2), i = _step$value[0], entry = _step$value[1];\n            if (!(entry.credentials().switch() !== _stellarBase.xdr.SorobanCredentialsType.sorobanCredentialsAddress())) {\n              _context6.next = 19;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 32);\n          case 19:\n            pk = _stellarBase.StrKey.encodeEd25519PublicKey(entry.credentials().address().address().accountId().ed25519());\n            if (!(pk !== publicKey)) {\n              _context6.next = 22;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 32);\n          case 22:\n            _context6.t0 = _stellarBase.authorizeEntry;\n            _context6.t1 = entry;\n            _context6.t2 = function () {\n              var _ref11 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(preimage) {\n                return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.t0 = Buffer;\n                      _context5.next = 3;\n                      return signAuthEntry(preimage.toXDR(\"base64\"));\n                    case 3:\n                      _context5.t1 = _context5.sent;\n                      return _context5.abrupt(\"return\", _context5.t0.from.call(_context5.t0, _context5.t1, \"base64\"));\n                    case 5:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5);\n              }));\n              return function (_x) {\n                return _ref11.apply(this, arguments);\n              };\n            }();\n            _context6.next = 27;\n            return expiration;\n          case 27:\n            _context6.t3 = _context6.sent;\n            _context6.t4 = _this.options.networkPassphrase;\n            _context6.next = 31;\n            return (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t3, _context6.t4);\n          case 31:\n            authEntries[i] = _context6.sent;\n          case 32:\n            _context6.next = 15;\n            break;\n          case 34:\n            _context6.next = 39;\n            break;\n          case 36:\n            _context6.prev = 36;\n            _context6.t5 = _context6[\"catch\"](13);\n            _iterator.e(_context6.t5);\n          case 39:\n            _context6.prev = 39;\n            _iterator.f();\n            return _context6.finish(39);\n          case 42:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[13, 36, 39, 42]]);\n    })));\n    this.options = options;\n    this.options.simulate = (_this$options$simulat = this.options.simulate) !== null && _this$options$simulat !== void 0 ? _this$options$simulat : true;\n    this.server = new _server.Server(this.options.rpcUrl, {\n      allowHttp: (_this$options$allowHt = this.options.allowHttp) !== null && _this$options$allowHt !== void 0 ? _this$options$allowHt : false\n    });\n  }\n  return _createClass(AssembledTransaction, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this$built;\n      return JSON.stringify({\n        method: this.options.method,\n        tx: (_this$built = this.built) === null || _this$built === void 0 ? void 0 : _this$built.toXDR(),\n        simulationResult: {\n          auth: this.simulationData.result.auth.map(function (a) {\n            return a.toXDR(\"base64\");\n          }),\n          retval: this.simulationData.result.retval.toXDR(\"base64\")\n        },\n        simulationTransactionData: this.simulationData.transactionData.toXDR(\"base64\")\n      });\n    }\n  }, {\n    key: \"toXDR\",\n    value: function toXDR() {\n      var _this$built2;\n      if (!this.built) throw new Error(\"Transaction has not yet been simulated; \" + \"call `AssembledTransaction.simulate` first.\");\n      return (_this$built2 = this.built) === null || _this$built2 === void 0 ? void 0 : _this$built2.toEnvelope().toXDR('base64');\n    }\n  }, {\n    key: \"simulationData\",\n    get: function get() {\n      var _simulation$result;\n      if (this.simulationResult && this.simulationTransactionData) {\n        return {\n          result: this.simulationResult,\n          transactionData: this.simulationTransactionData\n        };\n      }\n      var simulation = this.simulation;\n      if (!simulation) {\n        throw new AssembledTransaction.Errors.NotYetSimulated(\"Transaction has not yet been simulated\");\n      }\n      if (_api.Api.isSimulationError(simulation)) {\n        throw new Error(\"Transaction simulation failed: \\\"\".concat(simulation.error, \"\\\"\"));\n      }\n      if (_api.Api.isSimulationRestore(simulation)) {\n        throw new AssembledTransaction.Errors.ExpiredState(\"You need to restore some contract state before you can invoke this method.\\n\" + 'You can set `restore` to true in the method options in order to ' + 'automatically restore the contract state when needed.');\n      }\n      this.simulationResult = (_simulation$result = simulation.result) !== null && _simulation$result !== void 0 ? _simulation$result : {\n        auth: [],\n        retval: _stellarBase.xdr.ScVal.scvVoid()\n      };\n      this.simulationTransactionData = simulation.transactionData.build();\n      return {\n        result: this.simulationResult,\n        transactionData: this.simulationTransactionData\n      };\n    }\n  }, {\n    key: \"result\",\n    get: function get() {\n      try {\n        if (!this.simulationData.result) {\n          throw new Error(\"No simulation result!\");\n        }\n        return this.options.parseResultXdr(this.simulationData.result.retval);\n      } catch (e) {\n        if (!(0, _utils.implementsToString)(e)) throw e;\n        var err = this.parseError(e.toString());\n        if (err) return err;\n        throw e;\n      }\n    }\n  }, {\n    key: \"parseError\",\n    value: function parseError(errorMessage) {\n      if (!this.options.errorTypes) return undefined;\n      var match = errorMessage.match(_utils.contractErrorPattern);\n      if (!match) return undefined;\n      var i = parseInt(match[1], 10);\n      var err = this.options.errorTypes[i];\n      if (!err) return undefined;\n      return new _rust_result.Err(err);\n    }\n  }, {\n    key: \"send\",\n    value: (function () {\n      var _send = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {\n        var sent;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (this.signed) {\n                _context7.next = 2;\n                break;\n              }\n              throw new Error(\"The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.\");\n            case 2:\n              _context7.next = 4;\n              return _sent_transaction.SentTransaction.init(undefined, this);\n            case 4:\n              sent = _context7.sent;\n              return _context7.abrupt(\"return\", sent);\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function send() {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }())\n  }, {\n    key: \"isReadCall\",\n    get: function get() {\n      var authsCount = this.simulationData.result.auth.length;\n      var writeLength = this.simulationData.transactionData.resources().footprint().readWrite().length;\n      return authsCount === 0 && writeLength === 0;\n    }\n  }, {\n    key: \"restoreFootprint\",\n    value: (function () {\n      var _restoreFootprint = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(restorePreamble, account) {\n        var _account;\n        var restoreTx, sentTransaction;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (this.options.signTransaction) {\n                _context8.next = 2;\n                break;\n              }\n              throw new Error(\"For automatic restore to work you must provide a signTransaction function when initializing your Client\");\n            case 2:\n              if (!((_account = account) !== null && _account !== void 0)) {\n                _context8.next = 6;\n                break;\n              }\n              _context8.t0 = _account;\n              _context8.next = 9;\n              break;\n            case 6:\n              _context8.next = 8;\n              return (0, _utils.getAccount)(this.options, this.server);\n            case 8:\n              _context8.t0 = _context8.sent;\n            case 9:\n              account = _context8.t0;\n              _context8.next = 12;\n              return AssembledTransaction.buildFootprintRestoreTransaction(_objectSpread({}, this.options), restorePreamble.transactionData, account, restorePreamble.minResourceFee);\n            case 12:\n              restoreTx = _context8.sent;\n              _context8.next = 15;\n              return restoreTx.signAndSend();\n            case 15:\n              sentTransaction = _context8.sent;\n              if (sentTransaction.getTransactionResponse) {\n                _context8.next = 18;\n                break;\n              }\n              throw new AssembledTransaction.Errors.RestorationFailure(\"The attempt at automatic restore failed. \\n\".concat(JSON.stringify(sentTransaction)));\n            case 18:\n              return _context8.abrupt(\"return\", sentTransaction.getTransactionResponse);\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function restoreFootprint(_x2, _x3) {\n        return _restoreFootprint.apply(this, arguments);\n      }\n      return restoreFootprint;\n    }())\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(options, _ref12) {\n      var tx = _ref12.tx,\n        simulationResult = _ref12.simulationResult,\n        simulationTransactionData = _ref12.simulationTransactionData;\n      var txn = new AssembledTransaction(options);\n      txn.built = _stellarBase.TransactionBuilder.fromXDR(tx, options.networkPassphrase);\n      txn.simulationResult = {\n        auth: simulationResult.auth.map(function (a) {\n          return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(a, \"base64\");\n        }),\n        retval: _stellarBase.xdr.ScVal.fromXDR(simulationResult.retval, \"base64\")\n      };\n      txn.simulationTransactionData = _stellarBase.xdr.SorobanTransactionData.fromXDR(simulationTransactionData, \"base64\");\n      return txn;\n    }\n  }, {\n    key: \"fromXDR\",\n    value: function fromXDR(options, encodedXDR, spec) {\n      var _operation$func;\n      var envelope = _stellarBase.xdr.TransactionEnvelope.fromXDR(encodedXDR, \"base64\");\n      var built = _stellarBase.TransactionBuilder.fromXDR(envelope, options.networkPassphrase);\n      var operation = built.operations[0];\n      if (!(operation !== null && operation !== void 0 && (_operation$func = operation.func) !== null && _operation$func !== void 0 && _operation$func.value) || typeof operation.func.value !== 'function') {\n        throw new Error(\"Could not extract the method from the transaction envelope.\");\n      }\n      var invokeContractArgs = operation.func.value();\n      if (!(invokeContractArgs !== null && invokeContractArgs !== void 0 && invokeContractArgs.functionName)) {\n        throw new Error(\"Could not extract the method name from the transaction envelope.\");\n      }\n      var method = invokeContractArgs.functionName().toString('utf-8');\n      var txn = new AssembledTransaction(_objectSpread(_objectSpread({}, options), {}, {\n        method: method,\n        parseResultXdr: function parseResultXdr(result) {\n          return spec.funcResToNative(method, result);\n        }\n      }));\n      txn.built = built;\n      return txn;\n    }\n  }, {\n    key: \"build\",\n    value: (function () {\n      var _build = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(options) {\n        var _options$fee, _options$args, _options$timeoutInSec;\n        var tx, contract, account;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              tx = new AssembledTransaction(options);\n              contract = new _stellarBase.Contract(options.contractId);\n              _context9.next = 4;\n              return (0, _utils.getAccount)(options, tx.server);\n            case 4:\n              account = _context9.sent;\n              tx.raw = new _stellarBase.TransactionBuilder(account, {\n                fee: (_options$fee = options.fee) !== null && _options$fee !== void 0 ? _options$fee : _stellarBase.BASE_FEE,\n                networkPassphrase: options.networkPassphrase\n              }).addOperation(contract.call.apply(contract, [options.method].concat(_toConsumableArray((_options$args = options.args) !== null && _options$args !== void 0 ? _options$args : [])))).setTimeout((_options$timeoutInSec = options.timeoutInSeconds) !== null && _options$timeoutInSec !== void 0 ? _options$timeoutInSec : _types.DEFAULT_TIMEOUT);\n              if (!options.simulate) {\n                _context9.next = 9;\n                break;\n              }\n              _context9.next = 9;\n              return tx.simulate();\n            case 9:\n              return _context9.abrupt(\"return\", tx);\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      function build(_x4) {\n        return _build.apply(this, arguments);\n      }\n      return build;\n    }())\n  }, {\n    key: \"buildFootprintRestoreTransaction\",\n    value: function () {\n      var _buildFootprintRestoreTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(options, sorobanData, account, fee) {\n        var _options$timeoutInSec2;\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              tx = new AssembledTransaction(options);\n              tx.raw = new _stellarBase.TransactionBuilder(account, {\n                fee: fee,\n                networkPassphrase: options.networkPassphrase\n              }).setSorobanData(sorobanData instanceof _stellarBase.SorobanDataBuilder ? sorobanData.build() : sorobanData).addOperation(_stellarBase.Operation.restoreFootprint({})).setTimeout((_options$timeoutInSec2 = options.timeoutInSeconds) !== null && _options$timeoutInSec2 !== void 0 ? _options$timeoutInSec2 : _types.DEFAULT_TIMEOUT);\n              _context10.next = 4;\n              return tx.simulate({\n                restore: false\n              });\n            case 4:\n              return _context10.abrupt(\"return\", tx);\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      function buildFootprintRestoreTransaction(_x5, _x6, _x7, _x8) {\n        return _buildFootprintRestoreTransaction.apply(this, arguments);\n      }\n      return buildFootprintRestoreTransaction;\n    }()\n  }]);\n}();\n_defineProperty(AssembledTransaction, \"Errors\", {\n  ExpiredState: function (_Error) {\n    function ExpiredStateError() {\n      _classCallCheck(this, ExpiredStateError);\n      return _callSuper(this, ExpiredStateError, arguments);\n    }\n    _inherits(ExpiredStateError, _Error);\n    return _createClass(ExpiredStateError);\n  }(_wrapNativeSuper(Error)),\n  RestorationFailure: function (_Error2) {\n    function RestoreFailureError() {\n      _classCallCheck(this, RestoreFailureError);\n      return _callSuper(this, RestoreFailureError, arguments);\n    }\n    _inherits(RestoreFailureError, _Error2);\n    return _createClass(RestoreFailureError);\n  }(_wrapNativeSuper(Error)),\n  NeedsMoreSignatures: function (_Error3) {\n    function NeedsMoreSignaturesError() {\n      _classCallCheck(this, NeedsMoreSignaturesError);\n      return _callSuper(this, NeedsMoreSignaturesError, arguments);\n    }\n    _inherits(NeedsMoreSignaturesError, _Error3);\n    return _createClass(NeedsMoreSignaturesError);\n  }(_wrapNativeSuper(Error)),\n  NoSignatureNeeded: function (_Error4) {\n    function NoSignatureNeededError() {\n      _classCallCheck(this, NoSignatureNeededError);\n      return _callSuper(this, NoSignatureNeededError, arguments);\n    }\n    _inherits(NoSignatureNeededError, _Error4);\n    return _createClass(NoSignatureNeededError);\n  }(_wrapNativeSuper(Error)),\n  NoUnsignedNonInvokerAuthEntries: function (_Error5) {\n    function NoUnsignedNonInvokerAuthEntriesError() {\n      _classCallCheck(this, NoUnsignedNonInvokerAuthEntriesError);\n      return _callSuper(this, NoUnsignedNonInvokerAuthEntriesError, arguments);\n    }\n    _inherits(NoUnsignedNonInvokerAuthEntriesError, _Error5);\n    return _createClass(NoUnsignedNonInvokerAuthEntriesError);\n  }(_wrapNativeSuper(Error)),\n  NoSigner: function (_Error6) {\n    function NoSignerError() {\n      _classCallCheck(this, NoSignerError);\n      return _callSuper(this, NoSignerError, arguments);\n    }\n    _inherits(NoSignerError, _Error6);\n    return _createClass(NoSignerError);\n  }(_wrapNativeSuper(Error)),\n  NotYetSimulated: function (_Error7) {\n    function NotYetSimulatedError() {\n      _classCallCheck(this, NotYetSimulatedError);\n      return _callSuper(this, NotYetSimulatedError, arguments);\n    }\n    _inherits(NotYetSimulatedError, _Error7);\n    return _createClass(NotYetSimulatedError);\n  }(_wrapNativeSuper(Error)),\n  FakeAccount: function (_Error8) {\n    function FakeAccountError() {\n      _classCallCheck(this, FakeAccountError);\n      return _callSuper(this, FakeAccountError, arguments);\n    }\n    _inherits(FakeAccountError, _Error8);\n    return _createClass(FakeAccountError);\n  }(_wrapNativeSuper(Error))\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js":
/*!********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/basic_node_signer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.basicNodeSigner = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar basicNodeSigner = exports.basicNodeSigner = function basicNodeSigner(keypair, networkPassphrase) {\n  return {\n    signTransaction: function () {\n      var _signTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(tx) {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              t = _stellarBase.TransactionBuilder.fromXDR(tx, networkPassphrase);\n              t.sign(keypair);\n              return _context.abrupt(\"return\", t.toXDR());\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function signTransaction(_x) {\n        return _signTransaction.apply(this, arguments);\n      }\n      return signTransaction;\n    }(),\n    signAuthEntry: function () {\n      var _signAuthEntry = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(entryXdr) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", keypair.sign((0, _stellarBase.hash)(Buffer.from(entryXdr, \"base64\"))).toString(\"base64\"));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function signAuthEntry(_x2) {\n        return _signAuthEntry.apply(this, arguments);\n      }\n      return signAuthEntry;\n    }()\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Client = void 0;\nvar _spec = __webpack_require__(/*! ./spec */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\");\nvar _rpc = __webpack_require__(/*! ../rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\");\nvar _assembled_transaction = __webpack_require__(/*! ./assembled_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _excluded = [\"method\"];\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Client = exports.Client = function () {\n  function Client(spec, options) {\n    var _this = this;\n    _classCallCheck(this, Client);\n    _defineProperty(this, \"txFromJSON\", function (json) {\n      var _JSON$parse = JSON.parse(json),\n        method = _JSON$parse.method,\n        tx = _objectWithoutProperties(_JSON$parse, _excluded);\n      return _assembled_transaction.AssembledTransaction.fromJSON(_objectSpread(_objectSpread({}, _this.options), {}, {\n        method: method,\n        parseResultXdr: function parseResultXdr(result) {\n          return _this.spec.funcResToNative(method, result);\n        }\n      }), tx);\n    });\n    _defineProperty(this, \"txFromXDR\", function (xdrBase64) {\n      return _assembled_transaction.AssembledTransaction.fromXDR(_this.options, xdrBase64, _this.spec);\n    });\n    this.spec = spec;\n    this.options = options;\n    this.spec.funcs().forEach(function (xdrFn) {\n      var method = xdrFn.name().toString();\n      var assembleTransaction = function assembleTransaction(args, methodOptions) {\n        return _assembled_transaction.AssembledTransaction.build(_objectSpread(_objectSpread(_objectSpread({\n          method: method,\n          args: args && spec.funcArgsToScVals(method, args)\n        }, options), methodOptions), {}, {\n          errorTypes: spec.errorCases().reduce(function (acc, curr) {\n            return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr.value(), {\n              message: curr.doc().toString()\n            }));\n          }, {}),\n          parseResultXdr: function parseResultXdr(result) {\n            return spec.funcResToNative(method, result);\n          }\n        }));\n      };\n      _this[method] = spec.getFunc(method).inputs().length === 0 ? function (opts) {\n        return assembleTransaction(undefined, opts);\n      } : assembleTransaction;\n    });\n  }\n  return _createClass(Client, null, [{\n    key: \"fromWasmHash\",\n    value: (function () {\n      var _fromWasmHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(wasmHash, options) {\n        var format,\n          rpcUrl,\n          allowHttp,\n          serverOpts,\n          server,\n          wasm,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              format = _args.length > 2 && _args[2] !== undefined ? _args[2] : \"hex\";\n              if (!(!options || !options.rpcUrl)) {\n                _context.next = 3;\n                break;\n              }\n              throw new TypeError('options must contain rpcUrl');\n            case 3:\n              rpcUrl = options.rpcUrl, allowHttp = options.allowHttp;\n              serverOpts = {\n                allowHttp: allowHttp\n              };\n              server = new _rpc.Server(rpcUrl, serverOpts);\n              _context.next = 8;\n              return server.getContractWasmByHash(wasmHash, format);\n            case 8:\n              wasm = _context.sent;\n              return _context.abrupt(\"return\", Client.fromWasm(wasm, options));\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function fromWasmHash(_x, _x2) {\n        return _fromWasmHash.apply(this, arguments);\n      }\n      return fromWasmHash;\n    }())\n  }, {\n    key: \"fromWasm\",\n    value: (function () {\n      var _fromWasm = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(wasm, options) {\n        var wasmModule, xdrSections, bufferSection, specEntryArray, spec;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return WebAssembly.compile(wasm);\n            case 2:\n              wasmModule = _context2.sent;\n              xdrSections = WebAssembly.Module.customSections(wasmModule, \"contractspecv0\");\n              if (!(xdrSections.length === 0)) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error('Could not obtain contract spec from wasm');\n            case 6:\n              bufferSection = Buffer.from(xdrSections[0]);\n              specEntryArray = (0, _utils.processSpecEntryStream)(bufferSection);\n              spec = new _spec.Spec(specEntryArray);\n              return _context2.abrupt(\"return\", new Client(spec, options));\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function fromWasm(_x3, _x4) {\n        return _fromWasm.apply(this, arguments);\n      }\n      return fromWasm;\n    }())\n  }, {\n    key: \"from\",\n    value: (function () {\n      var _from = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(options) {\n        var rpcUrl, contractId, allowHttp, serverOpts, server, wasm;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!options || !options.rpcUrl || !options.contractId)) {\n                _context3.next = 2;\n                break;\n              }\n              throw new TypeError('options must contain rpcUrl and contractId');\n            case 2:\n              rpcUrl = options.rpcUrl, contractId = options.contractId, allowHttp = options.allowHttp;\n              serverOpts = {\n                allowHttp: allowHttp\n              };\n              server = new _rpc.Server(rpcUrl, serverOpts);\n              _context3.next = 7;\n              return server.getContractWasmByContractId(contractId);\n            case 7:\n              wasm = _context3.sent;\n              return _context3.abrupt(\"return\", Client.fromWasm(wasm, options));\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function from(_x5) {\n        return _from.apply(this, arguments);\n      }\n      return from;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/index.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _assembled_transaction = __webpack_require__(/*! ./assembled_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/assembled_transaction.js\");\nObject.keys(_assembled_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _assembled_transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _assembled_transaction[key];\n    }\n  });\n});\nvar _basic_node_signer = __webpack_require__(/*! ./basic_node_signer */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/basic_node_signer.js\");\nObject.keys(_basic_node_signer).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _basic_node_signer[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _basic_node_signer[key];\n    }\n  });\n});\nvar _client = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/client.js\");\nObject.keys(_client).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _client[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _client[key];\n    }\n  });\n});\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nObject.keys(_rust_result).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _rust_result[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _rust_result[key];\n    }\n  });\n});\nvar _sent_transaction = __webpack_require__(/*! ./sent_transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\");\nObject.keys(_sent_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _sent_transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sent_transaction[key];\n    }\n  });\n});\nvar _spec = __webpack_require__(/*! ./spec */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\");\nObject.keys(_spec).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _spec[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _spec[key];\n    }\n  });\n});\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZCQUE2QixtQkFBTyxDQUFDLHVHQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCx5QkFBeUIsbUJBQU8sQ0FBQywrRkFBcUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHlFQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLG1GQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELHdCQUF3QixtQkFBTyxDQUFDLDZGQUFvQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxZQUFZLG1CQUFPLENBQUMscUVBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsYUFBYSxtQkFBTyxDQUFDLHVFQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvY29udHJhY3QvaW5kZXguanM/N2EzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfYXNzZW1ibGVkX3RyYW5zYWN0aW9uID0gcmVxdWlyZShcIi4vYXNzZW1ibGVkX3RyYW5zYWN0aW9uXCIpO1xuT2JqZWN0LmtleXMoX2Fzc2VtYmxlZF90cmFuc2FjdGlvbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2Fzc2VtYmxlZF90cmFuc2FjdGlvbltrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9hc3NlbWJsZWRfdHJhbnNhY3Rpb25ba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX2Jhc2ljX25vZGVfc2lnbmVyID0gcmVxdWlyZShcIi4vYmFzaWNfbm9kZV9zaWduZXJcIik7XG5PYmplY3Qua2V5cyhfYmFzaWNfbm9kZV9zaWduZXIpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9iYXNpY19ub2RlX3NpZ25lcltrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9iYXNpY19ub2RlX3NpZ25lcltrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfY2xpZW50ID0gcmVxdWlyZShcIi4vY2xpZW50XCIpO1xuT2JqZWN0LmtleXMoX2NsaWVudCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2NsaWVudFtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9jbGllbnRba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX3J1c3RfcmVzdWx0ID0gcmVxdWlyZShcIi4vcnVzdF9yZXN1bHRcIik7XG5PYmplY3Qua2V5cyhfcnVzdF9yZXN1bHQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9ydXN0X3Jlc3VsdFtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9ydXN0X3Jlc3VsdFtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VudF90cmFuc2FjdGlvbiA9IHJlcXVpcmUoXCIuL3NlbnRfdHJhbnNhY3Rpb25cIik7XG5PYmplY3Qua2V5cyhfc2VudF90cmFuc2FjdGlvbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3NlbnRfdHJhbnNhY3Rpb25ba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfc2VudF90cmFuc2FjdGlvbltrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc3BlYyA9IHJlcXVpcmUoXCIuL3NwZWNcIik7XG5PYmplY3Qua2V5cyhfc3BlYykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3NwZWNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfc3BlY1trZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbk9iamVjdC5rZXlzKF90eXBlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3R5cGVzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX3R5cGVzW2tleV07XG4gICAgfVxuICB9KTtcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js":
/*!**************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/rust_result.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Ok = exports.Err = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Ok = exports.Ok = function () {\n  function Ok(value) {\n    _classCallCheck(this, Ok);\n    this.value = value;\n  }\n  return _createClass(Ok, [{\n    key: \"unwrapErr\",\n    value: function unwrapErr() {\n      throw new Error(\"No error\");\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this.value;\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return true;\n    }\n  }, {\n    key: \"isErr\",\n    value: function isErr() {\n      return false;\n    }\n  }]);\n}();\nvar Err = exports.Err = function () {\n  function Err(error) {\n    _classCallCheck(this, Err);\n    this.error = error;\n  }\n  return _createClass(Err, [{\n    key: \"unwrapErr\",\n    value: function unwrapErr() {\n      return this.error;\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      throw new Error(this.error.message);\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return false;\n    }\n  }, {\n    key: \"isErr\",\n    value: function isErr() {\n      return true;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3J1c3RfcmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFVBQVUsR0FBRyxXQUFXO0FBQ3hCLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxTQUFTLFVBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxVQUFVLFdBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3J1c3RfcmVzdWx0LmpzPzM1ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk9rID0gZXhwb3J0cy5FcnIgPSB2b2lkIDA7XG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG52YXIgT2sgPSBleHBvcnRzLk9rID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBPayh2YWx1ZSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPayk7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoT2ssIFt7XG4gICAga2V5OiBcInVud3JhcEVyclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bndyYXBFcnIoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBlcnJvclwiKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidW53cmFwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVud3JhcCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc09rXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzT2soKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNFcnJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNFcnIoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XSk7XG59KCk7XG52YXIgRXJyID0gZXhwb3J0cy5FcnIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEVycihlcnJvcikge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFcnIpO1xuICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgfVxuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEVyciwgW3tcbiAgICBrZXk6IFwidW53cmFwRXJyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVud3JhcEVycigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVycm9yO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1bndyYXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdW53cmFwKCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzT2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNPaygpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNFcnJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNFcnIoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1dKTtcbn0oKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/sent_transaction.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SentTransaction = void 0;\nvar _server = __webpack_require__(/*! ../rpc/server */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\");\nvar _api = __webpack_require__(/*! ../rpc/api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nvar _SentTransaction;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SentTransaction = exports.SentTransaction = function () {\n  function SentTransaction(_, assembled) {\n    var _this = this,\n      _this$assembled$optio2;\n    _classCallCheck(this, SentTransaction);\n    _defineProperty(this, \"send\", _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n      var _this$assembled$optio;\n      var hash, timeoutInSeconds;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.server.sendTransaction(_this.assembled.signed);\n          case 2:\n            _this.sendTransactionResponse = _context.sent;\n            if (!(_this.sendTransactionResponse.status !== \"PENDING\")) {\n              _context.next = 5;\n              break;\n            }\n            throw new SentTransaction.Errors.SendFailed(\"Sending the transaction to the network failed!\\n\".concat(JSON.stringify(_this.sendTransactionResponse, null, 2)));\n          case 5:\n            hash = _this.sendTransactionResponse.hash;\n            timeoutInSeconds = (_this$assembled$optio = _this.assembled.options.timeoutInSeconds) !== null && _this$assembled$optio !== void 0 ? _this$assembled$optio : _types.DEFAULT_TIMEOUT;\n            _context.next = 9;\n            return (0, _utils.withExponentialBackoff)(function () {\n              return _this.server.getTransaction(hash);\n            }, function (resp) {\n              return resp.status === _api.Api.GetTransactionStatus.NOT_FOUND;\n            }, timeoutInSeconds);\n          case 9:\n            _this.getTransactionResponseAll = _context.sent;\n            _this.getTransactionResponse = _this.getTransactionResponseAll[_this.getTransactionResponseAll.length - 1];\n            if (!(_this.getTransactionResponse.status === _api.Api.GetTransactionStatus.NOT_FOUND)) {\n              _context.next = 13;\n              break;\n            }\n            throw new SentTransaction.Errors.TransactionStillPending(\"Waited \".concat(timeoutInSeconds, \" seconds for transaction to complete, but it did not. \") + \"Returning anyway. Check the transaction status manually. \" + \"Sent transaction: \".concat(JSON.stringify(_this.sendTransactionResponse, null, 2), \"\\n\") + \"All attempts to get the result: \".concat(JSON.stringify(_this.getTransactionResponseAll, null, 2)));\n          case 13:\n            return _context.abrupt(\"return\", _this);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    this.assembled = assembled;\n    this.server = new _server.Server(this.assembled.options.rpcUrl, {\n      allowHttp: (_this$assembled$optio2 = this.assembled.options.allowHttp) !== null && _this$assembled$optio2 !== void 0 ? _this$assembled$optio2 : false\n    });\n  }\n  return _createClass(SentTransaction, [{\n    key: \"result\",\n    get: function get() {\n      if (\"getTransactionResponse\" in this && this.getTransactionResponse) {\n        if (\"returnValue\" in this.getTransactionResponse) {\n          return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);\n        }\n        throw new Error(\"Transaction failed! Cannot parse result.\");\n      }\n      if (this.sendTransactionResponse) {\n        var _this$sendTransaction;\n        var errorResult = (_this$sendTransaction = this.sendTransactionResponse.errorResult) === null || _this$sendTransaction === void 0 ? void 0 : _this$sendTransaction.result();\n        if (errorResult) {\n          throw new SentTransaction.Errors.SendFailed(\"Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: \".concat(errorResult));\n        }\n        throw new SentTransaction.Errors.SendResultOnly(\"Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`\");\n      }\n      throw new Error(\"Sending transaction failed: \".concat(JSON.stringify(this.assembled.signed)));\n    }\n  }]);\n}();\n_SentTransaction = SentTransaction;\n_defineProperty(SentTransaction, \"Errors\", {\n  SendFailed: function (_Error) {\n    function SendFailedError() {\n      _classCallCheck(this, SendFailedError);\n      return _callSuper(this, SendFailedError, arguments);\n    }\n    _inherits(SendFailedError, _Error);\n    return _createClass(SendFailedError);\n  }(_wrapNativeSuper(Error)),\n  SendResultOnly: function (_Error2) {\n    function SendResultOnlyError() {\n      _classCallCheck(this, SendResultOnlyError);\n      return _callSuper(this, SendResultOnlyError, arguments);\n    }\n    _inherits(SendResultOnlyError, _Error2);\n    return _createClass(SendResultOnlyError);\n  }(_wrapNativeSuper(Error)),\n  TransactionStillPending: function (_Error3) {\n    function TransactionStillPendingError() {\n      _classCallCheck(this, TransactionStillPendingError);\n      return _callSuper(this, TransactionStillPendingError, arguments);\n    }\n    _inherits(TransactionStillPendingError, _Error3);\n    return _createClass(TransactionStillPendingError);\n  }(_wrapNativeSuper(Error))\n});\n_defineProperty(SentTransaction, \"init\", function () {\n  var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(_, assembled) {\n    var tx, sent;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          tx = new _SentTransaction(undefined, assembled);\n          _context2.next = 3;\n          return tx.send();\n        case 3:\n          sent = _context2.sent;\n          return _context2.abrupt(\"return\", sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/sent_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/spec.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Spec = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _rust_result = __webpack_require__(/*! ./rust_result */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/rust_result.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction enumToJsonSchema(udt) {\n  var description = udt.doc().toString();\n  var cases = udt.cases();\n  var oneOf = [];\n  cases.forEach(function (aCase) {\n    var title = aCase.name().toString();\n    var desc = aCase.doc().toString();\n    oneOf.push({\n      description: desc,\n      title: title,\n      enum: [aCase.value()],\n      type: \"number\"\n    });\n  });\n  var res = {\n    oneOf: oneOf\n  };\n  if (description.length > 0) {\n    res.description = description;\n  }\n  return res;\n}\nfunction isNumeric(field) {\n  return /^\\d+$/.test(field.name().toString());\n}\nfunction readObj(args, input) {\n  var inputName = input.name().toString();\n  var entry = Object.entries(args).find(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n      name = _ref2[0];\n    return name === inputName;\n  });\n  if (!entry) {\n    throw new Error(\"Missing field \".concat(inputName));\n  }\n  return entry[1];\n}\nfunction findCase(name) {\n  return function matches(entry) {\n    switch (entry.switch().value) {\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:\n        {\n          var tuple = entry.tupleCase();\n          return tuple.name().toString() === name;\n        }\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:\n        {\n          var voidCase = entry.voidCase();\n          return voidCase.name().toString() === name;\n        }\n      default:\n        return false;\n    }\n  };\n}\nfunction stringToScVal(str, ty) {\n  switch (ty.value) {\n    case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:\n      return _stellarBase.xdr.ScVal.scvString(str);\n    case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:\n      return _stellarBase.xdr.ScVal.scvSymbol(str);\n    case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:\n      {\n        var addr = _stellarBase.Address.fromString(str);\n        return _stellarBase.xdr.ScVal.scvAddress(addr.toScAddress());\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n      return new _stellarBase.XdrLargeInt(\"u64\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n      return new _stellarBase.XdrLargeInt(\"i64\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n      return new _stellarBase.XdrLargeInt(\"u128\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n      return new _stellarBase.XdrLargeInt(\"i128\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n      return new _stellarBase.XdrLargeInt(\"u256\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n      return new _stellarBase.XdrLargeInt(\"i256\", str).toScVal();\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n      return _stellarBase.xdr.ScVal.scvBytes(Buffer.from(str, \"base64\"));\n    default:\n      throw new TypeError(\"invalid type \".concat(ty.name, \" specified for string value\"));\n  }\n}\nvar PRIMITIVE_DEFINITONS = {\n  U32: {\n    type: \"integer\",\n    minimum: 0,\n    maximum: 4294967295\n  },\n  I32: {\n    type: \"integer\",\n    minimum: -2147483648,\n    maximum: 2147483647\n  },\n  U64: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 20\n  },\n  I64: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 21\n  },\n  U128: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 39\n  },\n  I128: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 40\n  },\n  U256: {\n    type: \"string\",\n    pattern: \"^([1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 78\n  },\n  I256: {\n    type: \"string\",\n    pattern: \"^(-?[1-9][0-9]*|0)$\",\n    minLength: 1,\n    maxLength: 79\n  },\n  Address: {\n    type: \"string\",\n    format: \"address\",\n    description: \"Address can be a public key or contract id\"\n  },\n  ScString: {\n    type: \"string\",\n    description: \"ScString is a string\"\n  },\n  ScSymbol: {\n    type: \"string\",\n    description: \"ScString is a string\"\n  },\n  DataUrl: {\n    type: \"string\",\n    pattern: \"^(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\\\/]{3}=)?$\"\n  }\n};\nfunction typeRef(typeDef) {\n  var t = typeDef.switch();\n  var value = t.value;\n  var ref;\n  switch (value) {\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVal().value:\n      {\n        ref = \"Val\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBool().value:\n      {\n        return {\n          type: \"boolean\"\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n      {\n        return {\n          type: \"null\"\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeError().value:\n      {\n        ref = \"Error\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:\n      {\n        ref = \"U32\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:\n      {\n        ref = \"I32\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n      {\n        ref = \"U64\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n      {\n        ref = \"I64\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeTimepoint().value:\n      {\n        throw new Error(\"Timepoint type not supported\");\n        ref = \"Timepoint\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeDuration().value:\n      {\n        throw new Error(\"Duration not supported\");\n        ref = \"Duration\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n      {\n        ref = \"U128\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n      {\n        ref = \"I128\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n      {\n        ref = \"U256\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n      {\n        ref = \"I256\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n      {\n        ref = \"DataUrl\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeString().value:\n      {\n        ref = \"ScString\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value:\n      {\n        ref = \"ScSymbol\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value:\n      {\n        ref = \"Address\";\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:\n      {\n        var opt = typeDef.option();\n        return typeRef(opt.valueType());\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeResult().value:\n      {\n        break;\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:\n      {\n        var arr = typeDef.vec();\n        var reference = typeRef(arr.elementType());\n        return {\n          type: \"array\",\n          items: reference\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:\n      {\n        var map = typeDef.map();\n        var items = [typeRef(map.keyType()), typeRef(map.valueType())];\n        return {\n          type: \"array\",\n          items: {\n            type: \"array\",\n            items: items,\n            minItems: 2,\n            maxItems: 2\n          }\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:\n      {\n        var tuple = typeDef.tuple();\n        var minItems = tuple.valueTypes().length;\n        var maxItems = minItems;\n        var _items = tuple.valueTypes().map(typeRef);\n        return {\n          type: \"array\",\n          items: _items,\n          minItems: minItems,\n          maxItems: maxItems\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n      {\n        var _arr = typeDef.bytesN();\n        return {\n          $ref: \"#/definitions/DataUrl\",\n          maxLength: _arr.n()\n        };\n      }\n    case _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value:\n      {\n        var udt = typeDef.udt();\n        ref = udt.name().toString();\n        break;\n      }\n  }\n  return {\n    $ref: \"#/definitions/\".concat(ref)\n  };\n}\nfunction isRequired(typeDef) {\n  return typeDef.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeOption().value;\n}\nfunction argsAndRequired(input) {\n  var properties = {};\n  var required = [];\n  input.forEach(function (arg) {\n    var aType = arg.type();\n    var name = arg.name().toString();\n    properties[name] = typeRef(aType);\n    if (isRequired(aType)) {\n      required.push(name);\n    }\n  });\n  var res = {\n    properties: properties\n  };\n  if (required.length > 0) {\n    res.required = required;\n  }\n  return res;\n}\nfunction structToJsonSchema(udt) {\n  var fields = udt.fields();\n  if (fields.some(isNumeric)) {\n    if (!fields.every(isNumeric)) {\n      throw new Error(\"mixed numeric and non-numeric field names are not allowed\");\n    }\n    var items = fields.map(function (_, i) {\n      return typeRef(fields[i].type());\n    });\n    return {\n      type: \"array\",\n      items: items,\n      minItems: fields.length,\n      maxItems: fields.length\n    };\n  }\n  var description = udt.doc().toString();\n  var _argsAndRequired = argsAndRequired(fields),\n    properties = _argsAndRequired.properties,\n    required = _argsAndRequired.required;\n  properties.additionalProperties = false;\n  return {\n    description: description,\n    properties: properties,\n    required: required,\n    type: \"object\"\n  };\n}\nfunction functionToJsonSchema(func) {\n  var _argsAndRequired2 = argsAndRequired(func.inputs()),\n    properties = _argsAndRequired2.properties,\n    required = _argsAndRequired2.required;\n  var args = {\n    additionalProperties: false,\n    properties: properties,\n    type: \"object\"\n  };\n  if ((required === null || required === void 0 ? void 0 : required.length) > 0) {\n    args.required = required;\n  }\n  var input = {\n    properties: {\n      args: args\n    }\n  };\n  var outputs = func.outputs();\n  var output = outputs.length > 0 ? typeRef(outputs[0]) : typeRef(_stellarBase.xdr.ScSpecTypeDef.scSpecTypeVoid());\n  var description = func.doc().toString();\n  if (description.length > 0) {\n    input.description = description;\n  }\n  input.additionalProperties = false;\n  output.additionalProperties = false;\n  return {\n    input: input,\n    output: output\n  };\n}\nfunction unionToJsonSchema(udt) {\n  var description = udt.doc().toString();\n  var cases = udt.cases();\n  var oneOf = [];\n  cases.forEach(function (aCase) {\n    switch (aCase.switch().value) {\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:\n        {\n          var c = aCase.voidCase();\n          var title = c.name().toString();\n          oneOf.push({\n            type: \"object\",\n            title: title,\n            properties: {\n              tag: title\n            },\n            additionalProperties: false,\n            required: [\"tag\"]\n          });\n          break;\n        }\n      case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:\n        {\n          var _c = aCase.tupleCase();\n          var _title = _c.name().toString();\n          oneOf.push({\n            type: \"object\",\n            title: _title,\n            properties: {\n              tag: _title,\n              values: {\n                type: \"array\",\n                items: _c.type().map(typeRef)\n              }\n            },\n            required: [\"tag\", \"values\"],\n            additionalProperties: false\n          });\n        }\n    }\n  });\n  var res = {\n    oneOf: oneOf\n  };\n  if (description.length > 0) {\n    res.description = description;\n  }\n  return res;\n}\nvar Spec = exports.Spec = function () {\n  function Spec(entries) {\n    _classCallCheck(this, Spec);\n    _defineProperty(this, \"entries\", []);\n    if (entries.length === 0) {\n      throw new Error(\"Contract spec must have at least one entry\");\n    }\n    var entry = entries[0];\n    if (typeof entry === \"string\") {\n      this.entries = entries.map(function (s) {\n        return _stellarBase.xdr.ScSpecEntry.fromXDR(s, \"base64\");\n      });\n    } else {\n      this.entries = entries;\n    }\n  }\n  return _createClass(Spec, [{\n    key: \"funcs\",\n    value: function funcs() {\n      return this.entries.filter(function (entry) {\n        return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;\n      }).map(function (entry) {\n        return entry.functionV0();\n      });\n    }\n  }, {\n    key: \"getFunc\",\n    value: function getFunc(name) {\n      var entry = this.findEntry(name);\n      if (entry.switch().value !== _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) {\n        throw new Error(\"\".concat(name, \" is not a function\"));\n      }\n      return entry.functionV0();\n    }\n  }, {\n    key: \"funcArgsToScVals\",\n    value: function funcArgsToScVals(name, args) {\n      var _this = this;\n      var fn = this.getFunc(name);\n      return fn.inputs().map(function (input) {\n        return _this.nativeToScVal(readObj(args, input), input.type());\n      });\n    }\n  }, {\n    key: \"funcResToNative\",\n    value: function funcResToNative(name, val_or_base64) {\n      var val = typeof val_or_base64 === \"string\" ? _stellarBase.xdr.ScVal.fromXDR(val_or_base64, \"base64\") : val_or_base64;\n      var func = this.getFunc(name);\n      var outputs = func.outputs();\n      if (outputs.length === 0) {\n        var type = val.switch();\n        if (type.value !== _stellarBase.xdr.ScValType.scvVoid().value) {\n          throw new Error(\"Expected void, got \".concat(type.name));\n        }\n        return null;\n      }\n      if (outputs.length > 1) {\n        throw new Error(\"Multiple outputs not supported\");\n      }\n      var output = outputs[0];\n      if (output.switch().value === _stellarBase.xdr.ScSpecType.scSpecTypeResult().value) {\n        return new _rust_result.Ok(this.scValToNative(val, output.result().okType()));\n      }\n      return this.scValToNative(val, output);\n    }\n  }, {\n    key: \"findEntry\",\n    value: function findEntry(name) {\n      var entry = this.entries.find(function (e) {\n        return e.value().name().toString() === name;\n      });\n      if (!entry) {\n        throw new Error(\"no such entry: \".concat(name));\n      }\n      return entry;\n    }\n  }, {\n    key: \"nativeToScVal\",\n    value: function nativeToScVal(val, ty) {\n      var _this2 = this;\n      var t = ty.switch();\n      var value = t.value;\n      if (t.value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {\n        var udt = ty.udt();\n        return this.nativeToUdt(val, udt.name().toString());\n      }\n      if (value === _stellarBase.xdr.ScSpecType.scSpecTypeOption().value) {\n        var opt = ty.option();\n        if (val === undefined) {\n          return _stellarBase.xdr.ScVal.scvVoid();\n        }\n        return this.nativeToScVal(val, opt.valueType());\n      }\n      switch (_typeof(val)) {\n        case \"object\":\n          {\n            var _val$constructor$name, _val$constructor;\n            if (val === null) {\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n                  return _stellarBase.xdr.ScVal.scvVoid();\n                default:\n                  throw new TypeError(\"Type \".concat(ty, \" was not void, but value was null\"));\n              }\n            }\n            if (val instanceof _stellarBase.xdr.ScVal) {\n              return val;\n            }\n            if (val instanceof _stellarBase.Address) {\n              if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not address, but value was Address\"));\n              }\n              return val.toScVal();\n            }\n            if (val instanceof _stellarBase.Contract) {\n              if (ty.switch().value !== _stellarBase.xdr.ScSpecType.scSpecTypeAddress().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not address, but value was Address\"));\n              }\n              return val.address().toScVal();\n            }\n            if (val instanceof Uint8Array || Buffer.isBuffer(val)) {\n              var copy = Uint8Array.from(val);\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeBytesN().value:\n                  {\n                    var bytesN = ty.bytesN();\n                    if (copy.length !== bytesN.n()) {\n                      throw new TypeError(\"expected \".concat(bytesN.n(), \" bytes, but got \").concat(copy.length));\n                    }\n                    return _stellarBase.xdr.ScVal.scvBytes(copy);\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeBytes().value:\n                  return _stellarBase.xdr.ScVal.scvBytes(copy);\n                default:\n                  throw new TypeError(\"invalid type (\".concat(ty, \") specified for Bytes and BytesN\"));\n              }\n            }\n            if (Array.isArray(val)) {\n              switch (value) {\n                case _stellarBase.xdr.ScSpecType.scSpecTypeVec().value:\n                  {\n                    var vec = ty.vec();\n                    var elementType = vec.elementType();\n                    return _stellarBase.xdr.ScVal.scvVec(val.map(function (v) {\n                      return _this2.nativeToScVal(v, elementType);\n                    }));\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value:\n                  {\n                    var tup = ty.tuple();\n                    var valTypes = tup.valueTypes();\n                    if (val.length !== valTypes.length) {\n                      throw new TypeError(\"Tuple expects \".concat(valTypes.length, \" values, but \").concat(val.length, \" were provided\"));\n                    }\n                    return _stellarBase.xdr.ScVal.scvVec(val.map(function (v, i) {\n                      return _this2.nativeToScVal(v, valTypes[i]);\n                    }));\n                  }\n                case _stellarBase.xdr.ScSpecType.scSpecTypeMap().value:\n                  {\n                    var map = ty.map();\n                    var keyType = map.keyType();\n                    var valueType = map.valueType();\n                    return _stellarBase.xdr.ScVal.scvMap(val.map(function (entry) {\n                      var key = _this2.nativeToScVal(entry[0], keyType);\n                      var mapVal = _this2.nativeToScVal(entry[1], valueType);\n                      return new _stellarBase.xdr.ScMapEntry({\n                        key: key,\n                        val: mapVal\n                      });\n                    }));\n                  }\n                default:\n                  throw new TypeError(\"Type \".concat(ty, \" was not vec, but value was Array\"));\n              }\n            }\n            if (val.constructor === Map) {\n              if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {\n                throw new TypeError(\"Type \".concat(ty, \" was not map, but value was Map\"));\n              }\n              var scMap = ty.map();\n              var _map = val;\n              var entries = [];\n              var values = _map.entries();\n              var res = values.next();\n              while (!res.done) {\n                var _res$value = _slicedToArray(res.value, 2),\n                  k = _res$value[0],\n                  v = _res$value[1];\n                var key = this.nativeToScVal(k, scMap.keyType());\n                var mapval = this.nativeToScVal(v, scMap.valueType());\n                entries.push(new _stellarBase.xdr.ScMapEntry({\n                  key: key,\n                  val: mapval\n                }));\n                res = values.next();\n              }\n              return _stellarBase.xdr.ScVal.scvMap(entries);\n            }\n            if (((_val$constructor$name = (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) !== null && _val$constructor$name !== void 0 ? _val$constructor$name : \"\") !== \"Object\") {\n              var _val$constructor2;\n              throw new TypeError(\"cannot interpret \".concat((_val$constructor2 = val.constructor) === null || _val$constructor2 === void 0 ? void 0 : _val$constructor2.name, \" value as ScVal (\").concat(JSON.stringify(val), \")\"));\n            }\n            throw new TypeError(\"Received object \".concat(val, \"  did not match the provided type \").concat(ty));\n          }\n        case \"number\":\n        case \"bigint\":\n          {\n            switch (value) {\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU32().value:\n                return _stellarBase.xdr.ScVal.scvU32(val);\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI32().value:\n                return _stellarBase.xdr.ScVal.scvI32(val);\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU64().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI64().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU128().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI128().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeU256().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeI256().value:\n                {\n                  var intType = t.name.substring(10).toLowerCase();\n                  return new _stellarBase.XdrLargeInt(intType, val).toScVal();\n                }\n              default:\n                throw new TypeError(\"invalid type (\".concat(ty, \") specified for integer\"));\n            }\n          }\n        case \"string\":\n          return stringToScVal(val, t);\n        case \"boolean\":\n          {\n            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeBool().value) {\n              throw TypeError(\"Type \".concat(ty, \" was not bool, but value was bool\"));\n            }\n            return _stellarBase.xdr.ScVal.scvBool(val);\n          }\n        case \"undefined\":\n          {\n            if (!ty) {\n              return _stellarBase.xdr.ScVal.scvVoid();\n            }\n            switch (value) {\n              case _stellarBase.xdr.ScSpecType.scSpecTypeVoid().value:\n              case _stellarBase.xdr.ScSpecType.scSpecTypeOption().value:\n                return _stellarBase.xdr.ScVal.scvVoid();\n              default:\n                throw new TypeError(\"Type \".concat(ty, \" was not void, but value was undefined\"));\n            }\n          }\n        case \"function\":\n          return this.nativeToScVal(val(), ty);\n        default:\n          throw new TypeError(\"failed to convert typeof \".concat(_typeof(val), \" (\").concat(val, \")\"));\n      }\n    }\n  }, {\n    key: \"nativeToUdt\",\n    value: function nativeToUdt(val, name) {\n      var entry = this.findEntry(name);\n      switch (entry.switch()) {\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():\n          if (typeof val !== \"number\") {\n            throw new TypeError(\"expected number for enum \".concat(name, \", but got \").concat(_typeof(val)));\n          }\n          return this.nativeToEnum(val, entry.udtEnumV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():\n          return this.nativeToStruct(val, entry.udtStructV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():\n          return this.nativeToUnion(val, entry.udtUnionV0());\n        default:\n          throw new Error(\"failed to parse udt \".concat(name));\n      }\n    }\n  }, {\n    key: \"nativeToUnion\",\n    value: function nativeToUnion(val, union_) {\n      var _this3 = this;\n      var entryName = val.tag;\n      var caseFound = union_.cases().find(function (entry) {\n        var caseN = entry.value().name().toString();\n        return caseN === entryName;\n      });\n      if (!caseFound) {\n        throw new TypeError(\"no such enum entry: \".concat(entryName, \" in \").concat(union_));\n      }\n      var key = _stellarBase.xdr.ScVal.scvSymbol(entryName);\n      switch (caseFound.switch()) {\n        case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():\n          {\n            return _stellarBase.xdr.ScVal.scvVec([key]);\n          }\n        case _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():\n          {\n            var types = caseFound.tupleCase().type();\n            if (Array.isArray(val.values)) {\n              if (val.values.length !== types.length) {\n                throw new TypeError(\"union \".concat(union_, \" expects \").concat(types.length, \" values, but got \").concat(val.values.length));\n              }\n              var scvals = val.values.map(function (v, i) {\n                return _this3.nativeToScVal(v, types[i]);\n              });\n              scvals.unshift(key);\n              return _stellarBase.xdr.ScVal.scvVec(scvals);\n            }\n            throw new Error(\"failed to parse union case \".concat(caseFound, \" with \").concat(val));\n          }\n        default:\n          throw new Error(\"failed to parse union \".concat(union_, \" with \").concat(val));\n      }\n    }\n  }, {\n    key: \"nativeToStruct\",\n    value: function nativeToStruct(val, struct) {\n      var _this4 = this;\n      var fields = struct.fields();\n      if (fields.some(isNumeric)) {\n        if (!fields.every(isNumeric)) {\n          throw new Error(\"mixed numeric and non-numeric field names are not allowed\");\n        }\n        return _stellarBase.xdr.ScVal.scvVec(fields.map(function (_, i) {\n          return _this4.nativeToScVal(val[i], fields[i].type());\n        }));\n      }\n      return _stellarBase.xdr.ScVal.scvMap(fields.map(function (field) {\n        var name = field.name().toString();\n        return new _stellarBase.xdr.ScMapEntry({\n          key: _this4.nativeToScVal(name, _stellarBase.xdr.ScSpecTypeDef.scSpecTypeSymbol()),\n          val: _this4.nativeToScVal(val[name], field.type())\n        });\n      }));\n    }\n  }, {\n    key: \"nativeToEnum\",\n    value: function nativeToEnum(val, enum_) {\n      if (enum_.cases().some(function (entry) {\n        return entry.value() === val;\n      })) {\n        return _stellarBase.xdr.ScVal.scvU32(val);\n      }\n      throw new TypeError(\"no such enum entry: \".concat(val, \" in \").concat(enum_));\n    }\n  }, {\n    key: \"scValStrToNative\",\n    value: function scValStrToNative(scv, typeDef) {\n      return this.scValToNative(_stellarBase.xdr.ScVal.fromXDR(scv, \"base64\"), typeDef);\n    }\n  }, {\n    key: \"scValToNative\",\n    value: function scValToNative(scv, typeDef) {\n      var _this5 = this;\n      var t = typeDef.switch();\n      var value = t.value;\n      if (value === _stellarBase.xdr.ScSpecType.scSpecTypeUdt().value) {\n        return this.scValUdtToNative(scv, typeDef.udt());\n      }\n      switch (scv.switch().value) {\n        case _stellarBase.xdr.ScValType.scvVoid().value:\n          return undefined;\n        case _stellarBase.xdr.ScValType.scvU64().value:\n        case _stellarBase.xdr.ScValType.scvI64().value:\n        case _stellarBase.xdr.ScValType.scvU128().value:\n        case _stellarBase.xdr.ScValType.scvI128().value:\n        case _stellarBase.xdr.ScValType.scvU256().value:\n        case _stellarBase.xdr.ScValType.scvI256().value:\n          return (0, _stellarBase.scValToBigInt)(scv);\n        case _stellarBase.xdr.ScValType.scvVec().value:\n          {\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeVec().value) {\n              var _scv$vec;\n              var vec = typeDef.vec();\n              return ((_scv$vec = scv.vec()) !== null && _scv$vec !== void 0 ? _scv$vec : []).map(function (elm) {\n                return _this5.scValToNative(elm, vec.elementType());\n              });\n            }\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeTuple().value) {\n              var _scv$vec2;\n              var tuple = typeDef.tuple();\n              var valTypes = tuple.valueTypes();\n              return ((_scv$vec2 = scv.vec()) !== null && _scv$vec2 !== void 0 ? _scv$vec2 : []).map(function (elm, i) {\n                return _this5.scValToNative(elm, valTypes[i]);\n              });\n            }\n            throw new TypeError(\"Type \".concat(typeDef, \" was not vec, but \").concat(scv, \" is\"));\n          }\n        case _stellarBase.xdr.ScValType.scvAddress().value:\n          return _stellarBase.Address.fromScVal(scv).toString();\n        case _stellarBase.xdr.ScValType.scvMap().value:\n          {\n            var _scv$map;\n            var map = (_scv$map = scv.map()) !== null && _scv$map !== void 0 ? _scv$map : [];\n            if (value === _stellarBase.xdr.ScSpecType.scSpecTypeMap().value) {\n              var typed = typeDef.map();\n              var keyType = typed.keyType();\n              var valueType = typed.valueType();\n              var res = map.map(function (entry) {\n                return [_this5.scValToNative(entry.key(), keyType), _this5.scValToNative(entry.val(), valueType)];\n              });\n              return res;\n            }\n            throw new TypeError(\"ScSpecType \".concat(t.name, \" was not map, but \").concat(JSON.stringify(scv, null, 2), \" is\"));\n          }\n        case _stellarBase.xdr.ScValType.scvBool().value:\n        case _stellarBase.xdr.ScValType.scvU32().value:\n        case _stellarBase.xdr.ScValType.scvI32().value:\n        case _stellarBase.xdr.ScValType.scvBytes().value:\n          return scv.value();\n        case _stellarBase.xdr.ScValType.scvString().value:\n        case _stellarBase.xdr.ScValType.scvSymbol().value:\n          {\n            var _scv$value;\n            if (value !== _stellarBase.xdr.ScSpecType.scSpecTypeString().value && value !== _stellarBase.xdr.ScSpecType.scSpecTypeSymbol().value) {\n              throw new Error(\"ScSpecType \".concat(t.name, \" was not string or symbol, but \").concat(JSON.stringify(scv, null, 2), \" is\"));\n            }\n            return (_scv$value = scv.value()) === null || _scv$value === void 0 ? void 0 : _scv$value.toString();\n          }\n        case _stellarBase.xdr.ScValType.scvTimepoint().value:\n        case _stellarBase.xdr.ScValType.scvDuration().value:\n          return (0, _stellarBase.scValToBigInt)(_stellarBase.xdr.ScVal.scvU64(scv.u64()));\n        default:\n          throw new TypeError(\"failed to convert \".concat(JSON.stringify(scv, null, 2), \" to native type from type \").concat(t.name));\n      }\n    }\n  }, {\n    key: \"scValUdtToNative\",\n    value: function scValUdtToNative(scv, udt) {\n      var entry = this.findEntry(udt.name().toString());\n      switch (entry.switch()) {\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():\n          return this.enumToNative(scv);\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():\n          return this.structToNative(scv, entry.udtStructV0());\n        case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():\n          return this.unionToNative(scv, entry.udtUnionV0());\n        default:\n          throw new Error(\"failed to parse udt \".concat(udt.name().toString(), \": \").concat(entry));\n      }\n    }\n  }, {\n    key: \"unionToNative\",\n    value: function unionToNative(val, udt) {\n      var _this6 = this;\n      var vec = val.vec();\n      if (!vec) {\n        throw new Error(\"\".concat(JSON.stringify(val, null, 2), \" is not a vec\"));\n      }\n      if (vec.length === 0 && udt.cases.length !== 0) {\n        throw new Error(\"\".concat(val, \" has length 0, but the there are at least one case in the union\"));\n      }\n      var name = vec[0].sym().toString();\n      if (vec[0].switch().value !== _stellarBase.xdr.ScValType.scvSymbol().value) {\n        throw new Error(\"{vec[0]} is not a symbol\");\n      }\n      var entry = udt.cases().find(findCase(name));\n      if (!entry) {\n        throw new Error(\"failed to find entry \".concat(name, \" in union {udt.name().toString()}\"));\n      }\n      var res = {\n        tag: name\n      };\n      if (entry.switch().value === _stellarBase.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {\n        var tuple = entry.tupleCase();\n        var ty = tuple.type();\n        var values = ty.map(function (e, i) {\n          return _this6.scValToNative(vec[i + 1], e);\n        });\n        res.values = values;\n      }\n      return res;\n    }\n  }, {\n    key: \"structToNative\",\n    value: function structToNative(val, udt) {\n      var _this7 = this,\n        _val$map;\n      var res = {};\n      var fields = udt.fields();\n      if (fields.some(isNumeric)) {\n        var _val$vec;\n        var r = (_val$vec = val.vec()) === null || _val$vec === void 0 ? void 0 : _val$vec.map(function (entry, i) {\n          return _this7.scValToNative(entry, fields[i].type());\n        });\n        return r;\n      }\n      (_val$map = val.map()) === null || _val$map === void 0 || _val$map.forEach(function (entry, i) {\n        var field = fields[i];\n        res[field.name().toString()] = _this7.scValToNative(entry.val(), field.type());\n      });\n      return res;\n    }\n  }, {\n    key: \"enumToNative\",\n    value: function enumToNative(scv) {\n      if (scv.switch().value !== _stellarBase.xdr.ScValType.scvU32().value) {\n        throw new Error(\"Enum must have a u32 value\");\n      }\n      var num = scv.u32();\n      return num;\n    }\n  }, {\n    key: \"errorCases\",\n    value: function errorCases() {\n      return this.entries.filter(function (entry) {\n        return entry.switch().value === _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;\n      }).flatMap(function (entry) {\n        return entry.value().cases();\n      });\n    }\n  }, {\n    key: \"jsonSchema\",\n    value: function jsonSchema(funcName) {\n      var definitions = {};\n      this.entries.forEach(function (entry) {\n        switch (entry.switch().value) {\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:\n            {\n              var udt = entry.udtEnumV0();\n              definitions[udt.name().toString()] = enumToJsonSchema(udt);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:\n            {\n              var _udt = entry.udtStructV0();\n              definitions[_udt.name().toString()] = structToJsonSchema(_udt);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:\n            {\n              var _udt2 = entry.udtUnionV0();\n              definitions[_udt2.name().toString()] = unionToJsonSchema(_udt2);\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:\n            {\n              var fn = entry.functionV0();\n              var fnName = fn.name().toString();\n              var _functionToJsonSchema = functionToJsonSchema(fn),\n                input = _functionToJsonSchema.input;\n              definitions[fnName] = input;\n              break;\n            }\n          case _stellarBase.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:\n            {}\n        }\n      });\n      var res = {\n        $schema: \"http://json-schema.org/draft-07/schema#\",\n        definitions: _objectSpread(_objectSpread({}, PRIMITIVE_DEFINITONS), definitions)\n      };\n      if (funcName) {\n        res.$ref = \"#/definitions/\".concat(funcName);\n      }\n      return res;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/spec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/types.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/types.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NULL_ACCOUNT = exports.DEFAULT_TIMEOUT = void 0;\nvar DEFAULT_TIMEOUT = exports.DEFAULT_TIMEOUT = 5 * 60;\nvar NULL_ACCOUNT = exports.NULL_ACCOUNT = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QyxzQkFBc0IsdUJBQXVCO0FBQzdDLG1CQUFtQixvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2NvbnRyYWN0L3R5cGVzLmpzPzZkMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk5VTExfQUNDT1VOVCA9IGV4cG9ydHMuREVGQVVMVF9USU1FT1VUID0gdm9pZCAwO1xudmFyIERFRkFVTFRfVElNRU9VVCA9IGV4cG9ydHMuREVGQVVMVF9USU1FT1VUID0gNSAqIDYwO1xudmFyIE5VTExfQUNDT1VOVCA9IGV4cG9ydHMuTlVMTF9BQ0NPVU5UID0gXCJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVdIRlwiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/contract/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.contractErrorPattern = void 0;\nexports.getAccount = getAccount;\nexports.implementsToString = implementsToString;\nexports.processSpecEntryStream = processSpecEntryStream;\nexports.withExponentialBackoff = withExponentialBackoff;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/types.js\");\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction withExponentialBackoff(_x, _x2, _x3) {\n  return _withExponentialBackoff.apply(this, arguments);\n}\nfunction _withExponentialBackoff() {\n  _withExponentialBackoff = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(fn, keepWaitingIf, timeoutInSeconds) {\n    var exponentialFactor,\n      verbose,\n      attempts,\n      count,\n      waitUntil,\n      waitTime,\n      totalWaitTime,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          exponentialFactor = _args.length > 3 && _args[3] !== undefined ? _args[3] : 1.5;\n          verbose = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n          attempts = [];\n          count = 0;\n          _context.t0 = attempts;\n          _context.next = 7;\n          return fn();\n        case 7:\n          _context.t1 = _context.sent;\n          _context.t0.push.call(_context.t0, _context.t1);\n          if (keepWaitingIf(attempts[attempts.length - 1])) {\n            _context.next = 11;\n            break;\n          }\n          return _context.abrupt(\"return\", attempts);\n        case 11:\n          waitUntil = new Date(Date.now() + timeoutInSeconds * 1000).valueOf();\n          waitTime = 1000;\n          totalWaitTime = waitTime;\n        case 14:\n          if (!(Date.now() < waitUntil && keepWaitingIf(attempts[attempts.length - 1]))) {\n            _context.next = 30;\n            break;\n          }\n          count += 1;\n          if (verbose) {\n            console.info(\"Waiting \".concat(waitTime, \"ms before trying again (bringing the total wait time to \").concat(totalWaitTime, \"ms so far, of total \").concat(timeoutInSeconds * 1000, \"ms)\"));\n          }\n          _context.next = 19;\n          return new Promise(function (res) {\n            return setTimeout(res, waitTime);\n          });\n        case 19:\n          waitTime *= exponentialFactor;\n          if (new Date(Date.now() + waitTime).valueOf() > waitUntil) {\n            waitTime = waitUntil - Date.now();\n            if (verbose) {\n              console.info(\"was gonna wait too long; new waitTime: \".concat(waitTime, \"ms\"));\n            }\n          }\n          totalWaitTime = waitTime + totalWaitTime;\n          _context.t2 = attempts;\n          _context.next = 25;\n          return fn(attempts[attempts.length - 1]);\n        case 25:\n          _context.t3 = _context.sent;\n          _context.t2.push.call(_context.t2, _context.t3);\n          if (verbose && keepWaitingIf(attempts[attempts.length - 1])) {\n            console.info(\"\".concat(count, \". Called \").concat(fn, \"; \").concat(attempts.length, \" prev attempts. Most recent: \").concat(JSON.stringify(attempts[attempts.length - 1], null, 2)));\n          }\n          _context.next = 14;\n          break;\n        case 30:\n          return _context.abrupt(\"return\", attempts);\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _withExponentialBackoff.apply(this, arguments);\n}\nvar contractErrorPattern = exports.contractErrorPattern = /Error\\(Contract, #(\\d+)\\)/;\nfunction implementsToString(obj) {\n  return _typeof(obj) === \"object\" && obj !== null && \"toString\" in obj;\n}\nfunction processSpecEntryStream(buffer) {\n  var reader = new _stellarBase.cereal.XdrReader(buffer);\n  var res = [];\n  while (!reader.eof) {\n    res.push(_stellarBase.xdr.ScSpecEntry.read(reader));\n  }\n  return res;\n}\nfunction getAccount(_x4, _x5) {\n  return _getAccount.apply(this, arguments);\n}\nfunction _getAccount() {\n  _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(options, server) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", options.publicKey ? server.getAccount(options.publicKey) : new _stellarBase.Account(_types.NULL_ACCOUNT, \"0\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getAccount.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/contract/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/errors.js":
/*!************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/errors.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NotFoundError = exports.NetworkError = exports.BadResponseError = exports.BadRequestError = exports.AccountRequiresMemoError = void 0;\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nvar NetworkError = exports.NetworkError = function (_Error) {\n  function NetworkError(message, response) {\n    var _this;\n    _classCallCheck(this, NetworkError);\n    var trueProto = (this instanceof NetworkError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, NetworkError, [message]);\n    _this.__proto__ = trueProto;\n    _this.constructor = NetworkError;\n    _this.response = response;\n    return _this;\n  }\n  _inherits(NetworkError, _Error);\n  return _createClass(NetworkError, [{\n    key: \"getResponse\",\n    value: function getResponse() {\n      return this.response;\n    }\n  }]);\n}(_wrapNativeSuper(Error));\nvar NotFoundError = exports.NotFoundError = function (_NetworkError) {\n  function NotFoundError(message, response) {\n    var _this2;\n    _classCallCheck(this, NotFoundError);\n    var trueProto = (this instanceof NotFoundError ? this.constructor : void 0).prototype;\n    _this2 = _callSuper(this, NotFoundError, [message, response]);\n    _this2.__proto__ = trueProto;\n    _this2.constructor = NotFoundError;\n    _this2.name = \"NotFoundError\";\n    return _this2;\n  }\n  _inherits(NotFoundError, _NetworkError);\n  return _createClass(NotFoundError);\n}(NetworkError);\nvar BadRequestError = exports.BadRequestError = function (_NetworkError2) {\n  function BadRequestError(message, response) {\n    var _this3;\n    _classCallCheck(this, BadRequestError);\n    var trueProto = (this instanceof BadRequestError ? this.constructor : void 0).prototype;\n    _this3 = _callSuper(this, BadRequestError, [message, response]);\n    _this3.__proto__ = trueProto;\n    _this3.constructor = BadRequestError;\n    _this3.name = \"BadRequestError\";\n    return _this3;\n  }\n  _inherits(BadRequestError, _NetworkError2);\n  return _createClass(BadRequestError);\n}(NetworkError);\nvar BadResponseError = exports.BadResponseError = function (_NetworkError3) {\n  function BadResponseError(message, response) {\n    var _this4;\n    _classCallCheck(this, BadResponseError);\n    var trueProto = (this instanceof BadResponseError ? this.constructor : void 0).prototype;\n    _this4 = _callSuper(this, BadResponseError, [message, response]);\n    _this4.__proto__ = trueProto;\n    _this4.constructor = BadResponseError;\n    _this4.name = \"BadResponseError\";\n    return _this4;\n  }\n  _inherits(BadResponseError, _NetworkError3);\n  return _createClass(BadResponseError);\n}(NetworkError);\nvar AccountRequiresMemoError = exports.AccountRequiresMemoError = function (_Error2) {\n  function AccountRequiresMemoError(message, accountId, operationIndex) {\n    var _this5;\n    _classCallCheck(this, AccountRequiresMemoError);\n    var trueProto = (this instanceof AccountRequiresMemoError ? this.constructor : void 0).prototype;\n    _this5 = _callSuper(this, AccountRequiresMemoError, [message]);\n    _this5.__proto__ = trueProto;\n    _this5.constructor = AccountRequiresMemoError;\n    _this5.name = \"AccountRequiresMemoError\";\n    _this5.accountId = accountId;\n    _this5.operationIndex = operationIndex;\n    return _this5;\n  }\n  _inherits(AccountRequiresMemoError, _Error2);\n  return _createClass(AccountRequiresMemoError);\n}(_wrapNativeSuper(Error));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/api.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/api.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZlZGVyYXRpb24vYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvZmVkZXJhdGlvbi9hcGkuanM/YTBiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQXBpID0gdm9pZCAwO1xudmFyIEFwaTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nObject.defineProperty(exports, \"FEDERATION_RESPONSE_MAX_SIZE\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.FEDERATION_RESPONSE_MAX_SIZE;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.FederationServer;\n  }\n}));\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/server.js\");\nvar _Api = _interopRequireWildcard(__webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/api.js\"));\nexports.Api = _Api;\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZlZGVyYXRpb24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsV0FBVztBQUNYLGdFQUErRDtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLDBDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLGNBQWMsbUJBQU8sQ0FBQywyRUFBVTtBQUNoQyxtQ0FBbUMsbUJBQU8sQ0FBQyxxRUFBTztBQUNsRCxXQUFXO0FBQ1gsdUNBQXVDLCtDQUErQywwQ0FBMEMsMEVBQTBFLG1CQUFtQjtBQUM3Tix5Q0FBeUMsdUNBQXVDLDZFQUE2RSxjQUFjLHFDQUFxQyxvQ0FBb0MsVUFBVSxpQkFBaUIsZ0VBQWdFLDBDQUEwQyw4QkFBOEIsMERBQTBELHdFQUF3RSIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvZmVkZXJhdGlvbi9pbmRleC5qcz8yMGFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BcGkgPSB2b2lkIDA7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGRURFUkFUSU9OX1JFU1BPTlNFX01BWF9TSVpFXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9zZXJ2ZXIuRkVERVJBVElPTl9SRVNQT05TRV9NQVhfU0laRTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTZXJ2ZXJcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX3NlcnZlci5GZWRlcmF0aW9uU2VydmVyO1xuICB9XG59KTtcbnZhciBfc2VydmVyID0gcmVxdWlyZShcIi4vc2VydmVyXCIpO1xudmFyIF9BcGkgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9hcGlcIikpO1xuZXhwb3J0cy5BcGkgPSBfQXBpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgV2Vha01hcCkgcmV0dXJuIG51bGw7IHZhciByID0gbmV3IFdlYWtNYXAoKSwgdCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKGUpIHsgcmV0dXJuIGUgPyB0IDogcjsgfSkoZSk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKGUsIHIpIHsgaWYgKCFyICYmIGUgJiYgZS5fX2VzTW9kdWxlKSByZXR1cm4gZTsgaWYgKG51bGwgPT09IGUgfHwgXCJvYmplY3RcIiAhPSBfdHlwZW9mKGUpICYmIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSkgcmV0dXJuIHsgZGVmYXVsdDogZSB9OyB2YXIgdCA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShyKTsgaWYgKHQgJiYgdC5oYXMoZSkpIHJldHVybiB0LmdldChlKTsgdmFyIG4gPSB7IF9fcHJvdG9fXzogbnVsbCB9LCBhID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIHUgaW4gZSkgaWYgKFwiZGVmYXVsdFwiICE9PSB1ICYmIHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSwgdSkpIHsgdmFyIGkgPSBhID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCB1KSA6IG51bGw7IGkgJiYgKGkuZ2V0IHx8IGkuc2V0KSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCB1LCBpKSA6IG5bdV0gPSBlW3VdOyB9IHJldHVybiBuLmRlZmF1bHQgPSBlLCB0ICYmIHQuc2V0KGUsIG4pLCBuOyB9Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/federation/server.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/federation/server.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FederationServer = exports.FEDERATION_RESPONSE_MAX_SIZE = void 0;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors.js\");\nvar _stellartoml = __webpack_require__(/*! ../stellartoml */ \"(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar FEDERATION_RESPONSE_MAX_SIZE = exports.FEDERATION_RESPONSE_MAX_SIZE = 100 * 1024;\nvar FederationServer = exports.FederationServer = function () {\n  function FederationServer(serverURL, domain) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, FederationServer);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    this.domain = domain;\n    var allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n    this.timeout = typeof opts.timeout === \"undefined\" ? _config.Config.getTimeout() : opts.timeout;\n    if (this.serverURL.protocol() !== \"https\" && !allowHttp) {\n      throw new Error(\"Cannot connect to insecure federation server\");\n    }\n  }\n  return _createClass(FederationServer, [{\n    key: \"resolveAddress\",\n    value: (function () {\n      var _resolveAddress = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {\n        var stellarAddress, url;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              stellarAddress = address;\n              if (!(address.indexOf(\"*\") < 0)) {\n                _context.next = 5;\n                break;\n              }\n              if (this.domain) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.reject(new Error(\"Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.\")));\n            case 4:\n              stellarAddress = \"\".concat(address, \"*\").concat(this.domain);\n            case 5:\n              url = this.serverURL.query({\n                type: \"name\",\n                q: stellarAddress\n              });\n              return _context.abrupt(\"return\", this._sendRequest(url));\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function resolveAddress(_x) {\n        return _resolveAddress.apply(this, arguments);\n      }\n      return resolveAddress;\n    }())\n  }, {\n    key: \"resolveAccountId\",\n    value: (function () {\n      var _resolveAccountId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(accountId) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              url = this.serverURL.query({\n                type: \"id\",\n                q: accountId\n              });\n              return _context2.abrupt(\"return\", this._sendRequest(url));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function resolveAccountId(_x2) {\n        return _resolveAccountId.apply(this, arguments);\n      }\n      return resolveAccountId;\n    }())\n  }, {\n    key: \"resolveTransactionId\",\n    value: (function () {\n      var _resolveTransactionId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(transactionId) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = this.serverURL.query({\n                type: \"txid\",\n                q: transactionId\n              });\n              return _context3.abrupt(\"return\", this._sendRequest(url));\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function resolveTransactionId(_x3) {\n        return _resolveTransactionId.apply(this, arguments);\n      }\n      return resolveTransactionId;\n    }())\n  }, {\n    key: \"_sendRequest\",\n    value: function () {\n      var _sendRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(url) {\n        var timeout;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              timeout = this.timeout;\n              return _context4.abrupt(\"return\", _axios.default.get(url.toString(), {\n                maxContentLength: FEDERATION_RESPONSE_MAX_SIZE,\n                timeout: timeout\n              }).then(function (response) {\n                if (typeof response.data.memo !== \"undefined\" && typeof response.data.memo !== \"string\") {\n                  throw new Error(\"memo value should be of type string\");\n                }\n                return response.data;\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  if (response.message.match(/^maxContentLength size/)) {\n                    throw new Error(\"federation response exceeds allowed size of \".concat(FEDERATION_RESPONSE_MAX_SIZE));\n                  } else {\n                    return Promise.reject(response);\n                  }\n                } else {\n                  return Promise.reject(new _errors.BadResponseError(\"Server query failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n                }\n              }));\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function _sendRequest(_x4) {\n        return _sendRequest2.apply(this, arguments);\n      }\n      return _sendRequest;\n    }()\n  }], [{\n    key: \"resolve\",\n    value: (function () {\n      var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(value) {\n        var opts,\n          addressParts,\n          _addressParts,\n          domain,\n          federationServer,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n              if (!(value.indexOf(\"*\") < 0)) {\n                _context5.next = 5;\n                break;\n              }\n              if (_stellarBase.StrKey.isValidEd25519PublicKey(value)) {\n                _context5.next = 4;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject(new Error(\"Invalid Account ID\")));\n            case 4:\n              return _context5.abrupt(\"return\", Promise.resolve({\n                account_id: value\n              }));\n            case 5:\n              addressParts = value.split(\"*\");\n              _addressParts = _slicedToArray(addressParts, 2), domain = _addressParts[1];\n              if (!(addressParts.length !== 2 || !domain)) {\n                _context5.next = 9;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject(new Error(\"Invalid Stellar address\")));\n            case 9:\n              _context5.next = 11;\n              return FederationServer.createForDomain(domain, opts);\n            case 11:\n              federationServer = _context5.sent;\n              return _context5.abrupt(\"return\", federationServer.resolveAddress(value));\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function resolve(_x5) {\n        return _resolve.apply(this, arguments);\n      }\n      return resolve;\n    }())\n  }, {\n    key: \"createForDomain\",\n    value: (function () {\n      var _createForDomain = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(domain) {\n        var opts,\n          tomlObject,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              opts = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              _context6.next = 3;\n              return _stellartoml.Resolver.resolve(domain, opts);\n            case 3:\n              tomlObject = _context6.sent;\n              if (tomlObject.FEDERATION_SERVER) {\n                _context6.next = 6;\n                break;\n              }\n              return _context6.abrupt(\"return\", Promise.reject(new Error(\"stellar.toml does not contain FEDERATION_SERVER field\")));\n            case 6:\n              return _context6.abrupt(\"return\", new FederationServer(tomlObject.FEDERATION_SERVER, domain, opts));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function createForDomain(_x6) {\n        return _createForDomain.apply(this, arguments);\n      }\n      return createForDomain;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/federation/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/friendbot/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZyaWVuZGJvdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2ZyaWVuZGJvdC9pbmRleC5qcz81YjdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5BcGkgPSB2b2lkIDA7XG52YXIgQXBpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/account_call_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AccountCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar AccountCallBuilder = exports.AccountCallBuilder = function (_CallBuilder) {\n  function AccountCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, AccountCallBuilder);\n    _this = _callSuper(this, AccountCallBuilder, [serverUrl]);\n    _this.url.segment(\"accounts\");\n    return _this;\n  }\n  _inherits(AccountCallBuilder, _CallBuilder);\n  return _createClass(AccountCallBuilder, [{\n    key: \"accountId\",\n    value: function accountId(id) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([id]);\n      return builder;\n    }\n  }, {\n    key: \"forSigner\",\n    value: function forSigner(id) {\n      this.url.setQuery(\"signer\", id);\n      return this;\n    }\n  }, {\n    key: \"forAsset\",\n    value: function forAsset(asset) {\n      this.url.setQuery(\"asset\", \"\".concat(asset));\n      return this;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(id) {\n      this.url.setQuery(\"sponsor\", id);\n      return this;\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(id) {\n      this.url.setQuery(\"liquidity_pool\", id);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMEJBQTBCO0FBQzFCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9jYWxsX2J1aWxkZXIuanM/MjE0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQWNjb3VudENhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBBY2NvdW50Q2FsbEJ1aWxkZXIgPSBleHBvcnRzLkFjY291bnRDYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gQWNjb3VudENhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNjb3VudENhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgQWNjb3VudENhbGxCdWlsZGVyLCBbc2VydmVyVXJsXSk7XG4gICAgX3RoaXMudXJsLnNlZ21lbnQoXCJhY2NvdW50c1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKEFjY291bnRDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhBY2NvdW50Q2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImFjY291bnRJZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhY2NvdW50SWQoaWQpIHtcbiAgICAgIHZhciBidWlsZGVyID0gbmV3IF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIodGhpcy51cmwuY2xvbmUoKSk7XG4gICAgICBidWlsZGVyLmZpbHRlci5wdXNoKFtpZF0pO1xuICAgICAgcmV0dXJuIGJ1aWxkZXI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvclNpZ25lclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JTaWduZXIoaWQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwic2lnbmVyXCIsIGlkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JBc3NldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBc3NldChhc3NldCkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJhc3NldFwiLCBcIlwiLmNvbmNhdChhc3NldCkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNwb25zb3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3BvbnNvcihpZCkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJzcG9uc29yXCIsIGlkKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMaXF1aWRpdHlQb29sXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxpcXVpZGl0eVBvb2woaWQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwibGlxdWlkaXR5X3Bvb2xcIiwgaWQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js":
/*!******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/account_response.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AccountResponse = void 0;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar AccountResponse = exports.AccountResponse = function () {\n  function AccountResponse(response) {\n    var _this = this;\n    _classCallCheck(this, AccountResponse);\n    this._baseAccount = new _stellarBase.Account(response.account_id, response.sequence);\n    Object.entries(response).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      _this[key] = value;\n    });\n  }\n  return _createClass(AccountResponse, [{\n    key: \"accountId\",\n    value: function accountId() {\n      return this._baseAccount.accountId();\n    }\n  }, {\n    key: \"sequenceNumber\",\n    value: function sequenceNumber() {\n      return this._baseAccount.sequenceNumber();\n    }\n  }, {\n    key: \"incrementSequenceNumber\",\n    value: function incrementSequenceNumber() {\n      this._baseAccount.incrementSequenceNumber();\n      this.sequence = this._baseAccount.sequenceNumber();\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYWNjb3VudF9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix1QkFBdUI7QUFDdkIsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLGdDQUFnQztBQUNoQyw4QkFBOEI7QUFDOUIsNkNBQTZDLFNBQVMsMERBQTBELFVBQVUsZ0NBQWdDO0FBQzFKLG1DQUFtQywrQ0FBK0MsOEJBQThCLE9BQU8sa0JBQWtCO0FBQ3pJLHVDQUF1QyxrR0FBa0csaUJBQWlCLHdDQUF3QyxNQUFNLHlDQUF5Qyw2QkFBNkIsVUFBVSxZQUFZLGtFQUFrRSxXQUFXLFlBQVksaUJBQWlCLFVBQVUsTUFBTSwyRUFBMkUsVUFBVSxvQkFBb0I7QUFDdmdCLDhCQUE4QjtBQUM5QixpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1Esc0JBQXNCLHVCQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9hY2NvdW50X3Jlc3BvbnNlLmpzP2Q5YzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkFjY291bnRSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBfc3RlbGxhckJhc2UgPSByZXF1aXJlKFwiQHN0ZWxsYXIvc3RlbGxhci1iYXNlXCIpO1xuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkociwgZSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKHIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChyLCBlKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkociwgZSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkociwgYSkgeyBpZiAocikgeyBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgcikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpOyB2YXIgdCA9IHt9LnRvU3RyaW5nLmNhbGwocikuc2xpY2UoOCwgLTEpOyByZXR1cm4gXCJPYmplY3RcIiA9PT0gdCAmJiByLmNvbnN0cnVjdG9yICYmICh0ID0gci5jb25zdHJ1Y3Rvci5uYW1lKSwgXCJNYXBcIiA9PT0gdCB8fCBcIlNldFwiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6IFwiQXJndW1lbnRzXCIgPT09IHQgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QodCkgPyBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSA6IHZvaWQgMDsgfSB9XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQociwgbCkgeyB2YXIgdCA9IG51bGwgPT0gciA/IG51bGwgOiBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBTeW1ib2wgJiYgcltTeW1ib2wuaXRlcmF0b3JdIHx8IHJbXCJAQGl0ZXJhdG9yXCJdOyBpZiAobnVsbCAhPSB0KSB7IHZhciBlLCBuLCBpLCB1LCBhID0gW10sIGYgPSAhMCwgbyA9ICExOyB0cnkgeyBpZiAoaSA9ICh0ID0gdC5jYWxsKHIpKS5uZXh0LCAwID09PSBsKSB7IGlmIChPYmplY3QodCkgIT09IHQpIHJldHVybjsgZiA9ICExOyB9IGVsc2UgZm9yICg7ICEoZiA9IChlID0gaS5jYWxsKHQpKS5kb25lKSAmJiAoYS5wdXNoKGUudmFsdWUpLCBhLmxlbmd0aCAhPT0gbCk7IGYgPSAhMCk7IH0gY2F0Y2ggKHIpIHsgbyA9ICEwLCBuID0gcjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFmICYmIG51bGwgIT0gdC5yZXR1cm4gJiYgKHUgPSB0LnJldHVybigpLCBPYmplY3QodSkgIT09IHUpKSByZXR1cm47IH0gZmluYWxseSB7IGlmIChvKSB0aHJvdyBuOyB9IH0gcmV0dXJuIGE7IH0gfVxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKHIpIHsgaWYgKEFycmF5LmlzQXJyYXkocikpIHJldHVybiByOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG52YXIgQWNjb3VudFJlc3BvbnNlID0gZXhwb3J0cy5BY2NvdW50UmVzcG9uc2UgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEFjY291bnRSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFjY291bnRSZXNwb25zZSk7XG4gICAgdGhpcy5fYmFzZUFjY291bnQgPSBuZXcgX3N0ZWxsYXJCYXNlLkFjY291bnQocmVzcG9uc2UuYWNjb3VudF9pZCwgcmVzcG9uc2Uuc2VxdWVuY2UpO1xuICAgIE9iamVjdC5lbnRyaWVzKHJlc3BvbnNlKS5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSxcbiAgICAgICAga2V5ID0gX3JlZjJbMF0sXG4gICAgICAgIHZhbHVlID0gX3JlZjJbMV07XG4gICAgICBfdGhpc1trZXldID0gdmFsdWU7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhBY2NvdW50UmVzcG9uc2UsIFt7XG4gICAga2V5OiBcImFjY291bnRJZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhY2NvdW50SWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYmFzZUFjY291bnQuYWNjb3VudElkKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNlcXVlbmNlTnVtYmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNlcXVlbmNlTnVtYmVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Jhc2VBY2NvdW50LnNlcXVlbmNlTnVtYmVyKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImluY3JlbWVudFNlcXVlbmNlTnVtYmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluY3JlbWVudFNlcXVlbmNlTnVtYmVyKCkge1xuICAgICAgdGhpcy5fYmFzZUFjY291bnQuaW5jcmVtZW50U2VxdWVuY2VOdW1iZXIoKTtcbiAgICAgIHRoaXMuc2VxdWVuY2UgPSB0aGlzLl9iYXNlQWNjb3VudC5zZXF1ZW5jZU51bWJlcigpO1xuICAgIH1cbiAgfV0pO1xufSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AssetsCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar AssetsCallBuilder = exports.AssetsCallBuilder = function (_CallBuilder) {\n  function AssetsCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, AssetsCallBuilder);\n    _this = _callSuper(this, AssetsCallBuilder, [serverUrl]);\n    _this.url.segment(\"assets\");\n    return _this;\n  }\n  _inherits(AssetsCallBuilder, _CallBuilder);\n  return _createClass(AssetsCallBuilder, [{\n    key: \"forCode\",\n    value: function forCode(value) {\n      this.url.setQuery(\"asset_code\", value);\n      return this;\n    }\n  }, {\n    key: \"forIssuer\",\n    value: function forIssuer(value) {\n      this.url.setQuery(\"asset_issuer\", value);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYXNzZXRzX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vYXNzZXRzX2NhbGxfYnVpbGRlci5qcz8wNDdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Bc3NldHNDYWxsQnVpbGRlciA9IHZvaWQgMDtcbnZhciBfY2FsbF9idWlsZGVyID0gcmVxdWlyZShcIi4vY2FsbF9idWlsZGVyXCIpO1xuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NhbGxTdXBlcih0LCBvLCBlKSB7IHJldHVybiBvID0gX2dldFByb3RvdHlwZU9mKG8pLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgPyBSZWZsZWN0LmNvbnN0cnVjdChvLCBlIHx8IFtdLCBfZ2V0UHJvdG90eXBlT2YodCkuY29uc3RydWN0b3IpIDogby5hcHBseSh0LCBlKSk7IH1cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIGUpIHsgaWYgKGUgJiYgKFwib2JqZWN0XCIgPT0gX3R5cGVvZihlKSB8fCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUpKSByZXR1cm4gZTsgaWYgKHZvaWQgMCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZCh0KTsgfVxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7IGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpOyB9LCBfZ2V0UHJvdG90eXBlT2YodCk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyh0LCBlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUgJiYgbnVsbCAhPT0gZSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZSAmJiBlLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogdCwgd3JpdGFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0gfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZSAmJiBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG52YXIgQXNzZXRzQ2FsbEJ1aWxkZXIgPSBleHBvcnRzLkFzc2V0c0NhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBBc3NldHNDYWxsQnVpbGRlcihzZXJ2ZXJVcmwpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFzc2V0c0NhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgQXNzZXRzQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImFzc2V0c1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKEFzc2V0c0NhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKEFzc2V0c0NhbGxCdWlsZGVyLCBbe1xuICAgIGtleTogXCJmb3JDb2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckNvZGUodmFsdWUpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiYXNzZXRfY29kZVwiLCB2YWx1ZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ySXNzdWVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcklzc3Vlcih2YWx1ZSkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJhc3NldF9pc3N1ZXJcIiwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js":
/*!**************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/call_builder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CallBuilder = void 0;\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _URITemplate = _interopRequireDefault(__webpack_require__(/*! urijs/src/URITemplate */ \"(ssr)/./node_modules/urijs/src/URITemplate.js\"));\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors.js\");\nvar _horizon_axios_client = __webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\");\nvar _ref, _anyGlobal$EventSourc, _anyGlobal$window;\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar JOINABLE = [\"transaction\"];\nvar anyGlobal = global;\nvar EventSource = (_ref = (_anyGlobal$EventSourc = anyGlobal.EventSource) !== null && _anyGlobal$EventSourc !== void 0 ? _anyGlobal$EventSourc : (_anyGlobal$window = anyGlobal.window) === null || _anyGlobal$window === void 0 ? void 0 : _anyGlobal$window.EventSource) !== null && _ref !== void 0 ? _ref : __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\");\nvar CallBuilder = exports.CallBuilder = function () {\n  function CallBuilder(serverUrl) {\n    var neighborRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    _classCallCheck(this, CallBuilder);\n    this.url = serverUrl.clone();\n    this.filter = [];\n    this.originalSegments = this.url.segment() || [];\n    this.neighborRoot = neighborRoot;\n  }\n  return _createClass(CallBuilder, [{\n    key: \"call\",\n    value: function call() {\n      var _this = this;\n      this.checkFilter();\n      return this._sendNormalRequest(this.url).then(function (r) {\n        return _this._parseResponse(r);\n      });\n    }\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var _this2 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.checkFilter();\n      this.url.setQuery(\"X-Client-Name\", \"js-stellar-sdk\");\n      this.url.setQuery(\"X-Client-Version\", _horizon_axios_client.version);\n      var es;\n      var timeout;\n      var createTimeout = function createTimeout() {\n        timeout = setTimeout(function () {\n          var _es;\n          (_es = es) === null || _es === void 0 || _es.close();\n          es = createEventSource();\n        }, options.reconnectTimeout || 15 * 1000);\n      };\n      var createEventSource = function createEventSource() {\n        try {\n          es = new EventSource(_this2.url.toString());\n        } catch (err) {\n          if (options.onerror) {\n            options.onerror(err);\n          }\n        }\n        createTimeout();\n        if (!es) {\n          return es;\n        }\n        var closed = false;\n        var onClose = function onClose() {\n          if (closed) {\n            return;\n          }\n          clearTimeout(timeout);\n          es.close();\n          createEventSource();\n          closed = true;\n        };\n        var onMessage = function onMessage(message) {\n          if (message.type === \"close\") {\n            onClose();\n            return;\n          }\n          var result = message.data ? _this2._parseRecord(JSON.parse(message.data)) : message;\n          if (result.paging_token) {\n            _this2.url.setQuery(\"cursor\", result.paging_token);\n          }\n          clearTimeout(timeout);\n          createTimeout();\n          if (typeof options.onmessage !== \"undefined\") {\n            options.onmessage(result);\n          }\n        };\n        var onError = function onError(error) {\n          if (options.onerror) {\n            options.onerror(error);\n          }\n        };\n        if (es.addEventListener) {\n          es.addEventListener(\"message\", onMessage.bind(_this2));\n          es.addEventListener(\"error\", onError.bind(_this2));\n          es.addEventListener(\"close\", onClose.bind(_this2));\n        } else {\n          es.onmessage = onMessage.bind(_this2);\n          es.onerror = onError.bind(_this2);\n        }\n        return es;\n      };\n      createEventSource();\n      return function () {\n        var _es2;\n        clearTimeout(timeout);\n        (_es2 = es) === null || _es2 === void 0 || _es2.close();\n      };\n    }\n  }, {\n    key: \"cursor\",\n    value: function cursor(_cursor) {\n      this.url.setQuery(\"cursor\", _cursor);\n      return this;\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(recordsNumber) {\n      this.url.setQuery(\"limit\", recordsNumber.toString());\n      return this;\n    }\n  }, {\n    key: \"order\",\n    value: function order(direction) {\n      this.url.setQuery(\"order\", direction);\n      return this;\n    }\n  }, {\n    key: \"join\",\n    value: function join(include) {\n      this.url.setQuery(\"join\", include);\n      return this;\n    }\n  }, {\n    key: \"forEndpoint\",\n    value: function forEndpoint(endpoint, param) {\n      if (this.neighborRoot === \"\") {\n        throw new Error(\"Invalid usage: neighborRoot not set in constructor\");\n      }\n      this.filter.push([endpoint, param, this.neighborRoot]);\n      return this;\n    }\n  }, {\n    key: \"checkFilter\",\n    value: function checkFilter() {\n      if (this.filter.length >= 2) {\n        throw new _errors.BadRequestError(\"Too many filters specified\", this.filter);\n      }\n      if (this.filter.length === 1) {\n        var newSegment = this.originalSegments.concat(this.filter[0]);\n        this.url.segment(newSegment);\n      }\n    }\n  }, {\n    key: \"_requestFnForLink\",\n    value: function _requestFnForLink(link) {\n      var _this3 = this;\n      return _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n        var opts,\n          uri,\n          template,\n          r,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              if (link.templated) {\n                template = (0, _URITemplate.default)(link.href);\n                uri = (0, _urijs.default)(template.expand(opts));\n              } else {\n                uri = (0, _urijs.default)(link.href);\n              }\n              _context.next = 4;\n              return _this3._sendNormalRequest(uri);\n            case 4:\n              r = _context.sent;\n              return _context.abrupt(\"return\", _this3._parseResponse(r));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"_parseRecord\",\n    value: function _parseRecord(json) {\n      var _this4 = this;\n      if (!json._links) {\n        return json;\n      }\n      Object.keys(json._links).forEach(function (key) {\n        var n = json._links[key];\n        var included = false;\n        if (typeof json[key] !== \"undefined\") {\n          json[\"\".concat(key, \"_attr\")] = json[key];\n          included = true;\n        }\n        if (included && JOINABLE.indexOf(key) >= 0) {\n          var record = _this4._parseRecord(json[key]);\n          json[key] = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  return _context2.abrupt(\"return\", record);\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n        } else {\n          json[key] = _this4._requestFnForLink(n);\n        }\n      });\n      return json;\n    }\n  }, {\n    key: \"_sendNormalRequest\",\n    value: function () {\n      var _sendNormalRequest2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(initialUrl) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              url = initialUrl;\n              if (url.authority() === \"\") {\n                url = url.authority(this.url.authority());\n              }\n              if (url.protocol() === \"\") {\n                url = url.protocol(this.url.protocol());\n              }\n              return _context3.abrupt(\"return\", _horizon_axios_client.AxiosClient.get(url.toString()).then(function (response) {\n                return response.data;\n              }).catch(this._handleNetworkError));\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _sendNormalRequest(_x) {\n        return _sendNormalRequest2.apply(this, arguments);\n      }\n      return _sendNormalRequest;\n    }()\n  }, {\n    key: \"_parseResponse\",\n    value: function _parseResponse(json) {\n      if (json._embedded && json._embedded.records) {\n        return this._toCollectionPage(json);\n      }\n      return this._parseRecord(json);\n    }\n  }, {\n    key: \"_toCollectionPage\",\n    value: function _toCollectionPage(json) {\n      var _this5 = this;\n      for (var i = 0; i < json._embedded.records.length; i += 1) {\n        json._embedded.records[i] = this._parseRecord(json._embedded.records[i]);\n      }\n      return {\n        records: json._embedded.records,\n        next: function () {\n          var _next2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {\n            var r;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this5._sendNormalRequest((0, _urijs.default)(json._links.next.href));\n                case 2:\n                  r = _context4.sent;\n                  return _context4.abrupt(\"return\", _this5._toCollectionPage(r));\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n          function next() {\n            return _next2.apply(this, arguments);\n          }\n          return next;\n        }(),\n        prev: function () {\n          var _prev = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {\n            var r;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return _this5._sendNormalRequest((0, _urijs.default)(json._links.prev.href));\n                case 2:\n                  r = _context5.sent;\n                  return _context5.abrupt(\"return\", _this5._toCollectionPage(r));\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }));\n          function prev() {\n            return _prev.apply(this, arguments);\n          }\n          return prev;\n        }()\n      };\n    }\n  }, {\n    key: \"_handleNetworkError\",\n    value: (function () {\n      var _handleNetworkError2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(error) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(error.response && error.response.status && error.response.statusText)) {\n                _context6.next = 8;\n                break;\n              }\n              _context6.t0 = error.response.status;\n              _context6.next = _context6.t0 === 404 ? 4 : 5;\n              break;\n            case 4:\n              return _context6.abrupt(\"return\", Promise.reject(new _errors.NotFoundError(error.response.statusText, error.response.data)));\n            case 5:\n              return _context6.abrupt(\"return\", Promise.reject(new _errors.NetworkError(error.response.statusText, error.response.data)));\n            case 6:\n              _context6.next = 9;\n              break;\n            case 8:\n              return _context6.abrupt(\"return\", Promise.reject(new Error(error.message)));\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function _handleNetworkError(_x2) {\n        return _handleNetworkError2.apply(this, arguments);\n      }\n      return _handleNetworkError;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ClaimableBalanceCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar ClaimableBalanceCallBuilder = exports.ClaimableBalanceCallBuilder = function (_CallBuilder) {\n  function ClaimableBalanceCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, ClaimableBalanceCallBuilder);\n    _this = _callSuper(this, ClaimableBalanceCallBuilder, [serverUrl]);\n    _this.url.segment(\"claimable_balances\");\n    return _this;\n  }\n  _inherits(ClaimableBalanceCallBuilder, _CallBuilder);\n  return _createClass(ClaimableBalanceCallBuilder, [{\n    key: \"claimableBalance\",\n    value: function claimableBalance(claimableBalanceId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([claimableBalanceId]);\n      return builder;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(_sponsor) {\n      this.url.setQuery(\"sponsor\", _sponsor);\n      return this;\n    }\n  }, {\n    key: \"claimant\",\n    value: function claimant(_claimant) {\n      this.url.setQuery(\"claimant\", _claimant);\n      return this;\n    }\n  }, {\n    key: \"asset\",\n    value: function asset(_asset) {\n      this.url.setQuery(\"asset\", _asset.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vY2xhaW1hYmxlX2JhbGFuY2VzX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixtQ0FBbUM7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLGtDQUFrQyxtQ0FBbUM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vY2xhaW1hYmxlX2JhbGFuY2VzX2NhbGxfYnVpbGRlci5qcz81NTgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5DbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlciA9IGV4cG9ydHMuQ2xhaW1hYmxlQmFsYW5jZUNhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBDbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBDbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImNsYWltYWJsZV9iYWxhbmNlc1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKENsYWltYWJsZUJhbGFuY2VDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhDbGFpbWFibGVCYWxhbmNlQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImNsYWltYWJsZUJhbGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xhaW1hYmxlQmFsYW5jZShjbGFpbWFibGVCYWxhbmNlSWQpIHtcbiAgICAgIHZhciBidWlsZGVyID0gbmV3IF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIodGhpcy51cmwuY2xvbmUoKSk7XG4gICAgICBidWlsZGVyLmZpbHRlci5wdXNoKFtjbGFpbWFibGVCYWxhbmNlSWRdKTtcbiAgICAgIHJldHVybiBidWlsZGVyO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzcG9uc29yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNwb25zb3IoX3Nwb25zb3IpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwic3BvbnNvclwiLCBfc3BvbnNvcik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2xhaW1hbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xhaW1hbnQoX2NsYWltYW50KSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImNsYWltYW50XCIsIF9jbGFpbWFudCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYXNzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYXNzZXQoX2Fzc2V0KSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImFzc2V0XCIsIF9hc3NldC50b1N0cmluZygpKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EffectCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar EffectCallBuilder = exports.EffectCallBuilder = function (_CallBuilder) {\n  function EffectCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, EffectCallBuilder);\n    _this = _callSuper(this, EffectCallBuilder, [serverUrl, \"effects\"]);\n    _this.url.segment(\"effects\");\n    return _this;\n  }\n  _inherits(EffectCallBuilder, _CallBuilder);\n  return _createClass(EffectCallBuilder, [{\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }, {\n    key: \"forOperation\",\n    value: function forOperation(operationId) {\n      return this.forEndpoint(\"operations\", operationId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZWZmZWN0X2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9lZmZlY3RfY2FsbF9idWlsZGVyLmpzPzZmZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkVmZmVjdENhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBFZmZlY3RDYWxsQnVpbGRlciA9IGV4cG9ydHMuRWZmZWN0Q2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIEVmZmVjdENhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRWZmZWN0Q2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBFZmZlY3RDYWxsQnVpbGRlciwgW3NlcnZlclVybCwgXCJlZmZlY3RzXCJdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImVmZmVjdHNcIik7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhFZmZlY3RDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhFZmZlY3RDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwiZm9yQWNjb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJhY2NvdW50c1wiLCBhY2NvdW50SWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMZWRnZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGVkZ2VyKHNlcXVlbmNlKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxlZGdlcnNcIiwgc2VxdWVuY2UudG9TdHJpbmcoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvclRyYW5zYWN0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvclRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwidHJhbnNhY3Rpb25zXCIsIHRyYW5zYWN0aW9uSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JPcGVyYXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yT3BlcmF0aW9uKG9wZXJhdGlvbklkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcIm9wZXJhdGlvbnNcIiwgb3BlcmF0aW9uSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMaXF1aWRpdHlQb29sXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxpcXVpZGl0eVBvb2wocG9vbElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxpcXVpZGl0eV9wb29sc1wiLCBwb29sSWQpO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FriendbotBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar FriendbotBuilder = exports.FriendbotBuilder = function (_CallBuilder) {\n  function FriendbotBuilder(serverUrl, address) {\n    var _this;\n    _classCallCheck(this, FriendbotBuilder);\n    _this = _callSuper(this, FriendbotBuilder, [serverUrl]);\n    _this.url.segment(\"friendbot\");\n    _this.url.setQuery(\"addr\", address);\n    return _this;\n  }\n  _inherits(FriendbotBuilder, _CallBuilder);\n  return _createClass(FriendbotBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vZnJpZW5kYm90X2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix1QkFBdUIsd0JBQXdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9mcmllbmRib3RfYnVpbGRlci5qcz9jN2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5GcmllbmRib3RCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBGcmllbmRib3RCdWlsZGVyID0gZXhwb3J0cy5GcmllbmRib3RCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBGcmllbmRib3RCdWlsZGVyKHNlcnZlclVybCwgYWRkcmVzcykge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRnJpZW5kYm90QnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIEZyaWVuZGJvdEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImZyaWVuZGJvdFwiKTtcbiAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJhZGRyXCIsIGFkZHJlc3MpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoRnJpZW5kYm90QnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhGcmllbmRib3RCdWlsZGVyKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/horizon_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.HorizonApi = void 0;\nvar HorizonApi;\n(function (_HorizonApi) {\n  var LiquidityPoolType = function (LiquidityPoolType) {\n    LiquidityPoolType[\"constantProduct\"] = \"constant_product\";\n    return LiquidityPoolType;\n  }({});\n  _HorizonApi.LiquidityPoolType = LiquidityPoolType;\n  var OperationResponseType = function (OperationResponseType) {\n    OperationResponseType[\"createAccount\"] = \"create_account\";\n    OperationResponseType[\"payment\"] = \"payment\";\n    OperationResponseType[\"pathPayment\"] = \"path_payment_strict_receive\";\n    OperationResponseType[\"createPassiveOffer\"] = \"create_passive_sell_offer\";\n    OperationResponseType[\"manageOffer\"] = \"manage_sell_offer\";\n    OperationResponseType[\"setOptions\"] = \"set_options\";\n    OperationResponseType[\"changeTrust\"] = \"change_trust\";\n    OperationResponseType[\"allowTrust\"] = \"allow_trust\";\n    OperationResponseType[\"accountMerge\"] = \"account_merge\";\n    OperationResponseType[\"inflation\"] = \"inflation\";\n    OperationResponseType[\"manageData\"] = \"manage_data\";\n    OperationResponseType[\"bumpSequence\"] = \"bump_sequence\";\n    OperationResponseType[\"manageBuyOffer\"] = \"manage_buy_offer\";\n    OperationResponseType[\"pathPaymentStrictSend\"] = \"path_payment_strict_send\";\n    OperationResponseType[\"createClaimableBalance\"] = \"create_claimable_balance\";\n    OperationResponseType[\"claimClaimableBalance\"] = \"claim_claimable_balance\";\n    OperationResponseType[\"beginSponsoringFutureReserves\"] = \"begin_sponsoring_future_reserves\";\n    OperationResponseType[\"endSponsoringFutureReserves\"] = \"end_sponsoring_future_reserves\";\n    OperationResponseType[\"revokeSponsorship\"] = \"revoke_sponsorship\";\n    OperationResponseType[\"clawback\"] = \"clawback\";\n    OperationResponseType[\"clawbackClaimableBalance\"] = \"clawback_claimable_balance\";\n    OperationResponseType[\"setTrustLineFlags\"] = \"set_trust_line_flags\";\n    OperationResponseType[\"liquidityPoolDeposit\"] = \"liquidity_pool_deposit\";\n    OperationResponseType[\"liquidityPoolWithdraw\"] = \"liquidity_pool_withdraw\";\n    OperationResponseType[\"invokeHostFunction\"] = \"invoke_host_function\";\n    OperationResponseType[\"bumpFootprintExpiration\"] = \"bump_footprint_expiration\";\n    OperationResponseType[\"restoreFootprint\"] = \"restore_footprint\";\n    return OperationResponseType;\n  }({});\n  _HorizonApi.OperationResponseType = OperationResponseType;\n  var OperationResponseTypeI = function (OperationResponseTypeI) {\n    OperationResponseTypeI[OperationResponseTypeI[\"createAccount\"] = 0] = \"createAccount\";\n    OperationResponseTypeI[OperationResponseTypeI[\"payment\"] = 1] = \"payment\";\n    OperationResponseTypeI[OperationResponseTypeI[\"pathPayment\"] = 2] = \"pathPayment\";\n    OperationResponseTypeI[OperationResponseTypeI[\"createPassiveOffer\"] = 3] = \"createPassiveOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageOffer\"] = 4] = \"manageOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"setOptions\"] = 5] = \"setOptions\";\n    OperationResponseTypeI[OperationResponseTypeI[\"changeTrust\"] = 6] = \"changeTrust\";\n    OperationResponseTypeI[OperationResponseTypeI[\"allowTrust\"] = 7] = \"allowTrust\";\n    OperationResponseTypeI[OperationResponseTypeI[\"accountMerge\"] = 8] = \"accountMerge\";\n    OperationResponseTypeI[OperationResponseTypeI[\"inflation\"] = 9] = \"inflation\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageData\"] = 10] = \"manageData\";\n    OperationResponseTypeI[OperationResponseTypeI[\"bumpSequence\"] = 11] = \"bumpSequence\";\n    OperationResponseTypeI[OperationResponseTypeI[\"manageBuyOffer\"] = 12] = \"manageBuyOffer\";\n    OperationResponseTypeI[OperationResponseTypeI[\"pathPaymentStrictSend\"] = 13] = \"pathPaymentStrictSend\";\n    OperationResponseTypeI[OperationResponseTypeI[\"createClaimableBalance\"] = 14] = \"createClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"claimClaimableBalance\"] = 15] = \"claimClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"beginSponsoringFutureReserves\"] = 16] = \"beginSponsoringFutureReserves\";\n    OperationResponseTypeI[OperationResponseTypeI[\"endSponsoringFutureReserves\"] = 17] = \"endSponsoringFutureReserves\";\n    OperationResponseTypeI[OperationResponseTypeI[\"revokeSponsorship\"] = 18] = \"revokeSponsorship\";\n    OperationResponseTypeI[OperationResponseTypeI[\"clawback\"] = 19] = \"clawback\";\n    OperationResponseTypeI[OperationResponseTypeI[\"clawbackClaimableBalance\"] = 20] = \"clawbackClaimableBalance\";\n    OperationResponseTypeI[OperationResponseTypeI[\"setTrustLineFlags\"] = 21] = \"setTrustLineFlags\";\n    OperationResponseTypeI[OperationResponseTypeI[\"liquidityPoolDeposit\"] = 22] = \"liquidityPoolDeposit\";\n    OperationResponseTypeI[OperationResponseTypeI[\"liquidityPoolWithdraw\"] = 23] = \"liquidityPoolWithdraw\";\n    OperationResponseTypeI[OperationResponseTypeI[\"invokeHostFunction\"] = 24] = \"invokeHostFunction\";\n    OperationResponseTypeI[OperationResponseTypeI[\"bumpFootprintExpiration\"] = 25] = \"bumpFootprintExpiration\";\n    OperationResponseTypeI[OperationResponseTypeI[\"restoreFootprint\"] = 26] = \"restoreFootprint\";\n    return OperationResponseTypeI;\n  }({});\n  _HorizonApi.OperationResponseTypeI = OperationResponseTypeI;\n  ;\n  var TransactionFailedResultCodes = function (TransactionFailedResultCodes) {\n    TransactionFailedResultCodes[\"TX_FAILED\"] = \"tx_failed\";\n    TransactionFailedResultCodes[\"TX_BAD_SEQ\"] = \"tx_bad_seq\";\n    TransactionFailedResultCodes[\"TX_BAD_AUTH\"] = \"tx_bad_auth\";\n    TransactionFailedResultCodes[\"TX_BAD_AUTH_EXTRA\"] = \"tx_bad_auth_extra\";\n    TransactionFailedResultCodes[\"TX_FEE_BUMP_INNER_SUCCESS\"] = \"tx_fee_bump_inner_success\";\n    TransactionFailedResultCodes[\"TX_FEE_BUMP_INNER_FAILED\"] = \"tx_fee_bump_inner_failed\";\n    TransactionFailedResultCodes[\"TX_NOT_SUPPORTED\"] = \"tx_not_supported\";\n    TransactionFailedResultCodes[\"TX_SUCCESS\"] = \"tx_success\";\n    TransactionFailedResultCodes[\"TX_TOO_EARLY\"] = \"tx_too_early\";\n    TransactionFailedResultCodes[\"TX_TOO_LATE\"] = \"tx_too_late\";\n    TransactionFailedResultCodes[\"TX_MISSING_OPERATION\"] = \"tx_missing_operation\";\n    TransactionFailedResultCodes[\"TX_INSUFFICIENT_BALANCE\"] = \"tx_insufficient_balance\";\n    TransactionFailedResultCodes[\"TX_NO_SOURCE_ACCOUNT\"] = \"tx_no_source_account\";\n    TransactionFailedResultCodes[\"TX_INSUFFICIENT_FEE\"] = \"tx_insufficient_fee\";\n    TransactionFailedResultCodes[\"TX_INTERNAL_ERROR\"] = \"tx_internal_error\";\n    return TransactionFailedResultCodes;\n  }({});\n  _HorizonApi.TransactionFailedResultCodes = TransactionFailedResultCodes;\n})(HorizonApi || (exports.HorizonApi = HorizonApi = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsR0FBRztBQUNOO0FBQ0EsQ0FBQyxpQkFBaUIsa0JBQWtCLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9ob3Jpem9uX2FwaS5qcz83NjFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Ib3Jpem9uQXBpID0gdm9pZCAwO1xudmFyIEhvcml6b25BcGk7XG4oZnVuY3Rpb24gKF9Ib3Jpem9uQXBpKSB7XG4gIHZhciBMaXF1aWRpdHlQb29sVHlwZSA9IGZ1bmN0aW9uIChMaXF1aWRpdHlQb29sVHlwZSkge1xuICAgIExpcXVpZGl0eVBvb2xUeXBlW1wiY29uc3RhbnRQcm9kdWN0XCJdID0gXCJjb25zdGFudF9wcm9kdWN0XCI7XG4gICAgcmV0dXJuIExpcXVpZGl0eVBvb2xUeXBlO1xuICB9KHt9KTtcbiAgX0hvcml6b25BcGkuTGlxdWlkaXR5UG9vbFR5cGUgPSBMaXF1aWRpdHlQb29sVHlwZTtcbiAgdmFyIE9wZXJhdGlvblJlc3BvbnNlVHlwZSA9IGZ1bmN0aW9uIChPcGVyYXRpb25SZXNwb25zZVR5cGUpIHtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJjcmVhdGVBY2NvdW50XCJdID0gXCJjcmVhdGVfYWNjb3VudFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcInBheW1lbnRcIl0gPSBcInBheW1lbnRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJwYXRoUGF5bWVudFwiXSA9IFwicGF0aF9wYXltZW50X3N0cmljdF9yZWNlaXZlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiY3JlYXRlUGFzc2l2ZU9mZmVyXCJdID0gXCJjcmVhdGVfcGFzc2l2ZV9zZWxsX29mZmVyXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wibWFuYWdlT2ZmZXJcIl0gPSBcIm1hbmFnZV9zZWxsX29mZmVyXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wic2V0T3B0aW9uc1wiXSA9IFwic2V0X29wdGlvbnNcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJjaGFuZ2VUcnVzdFwiXSA9IFwiY2hhbmdlX3RydXN0XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiYWxsb3dUcnVzdFwiXSA9IFwiYWxsb3dfdHJ1c3RcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJhY2NvdW50TWVyZ2VcIl0gPSBcImFjY291bnRfbWVyZ2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJpbmZsYXRpb25cIl0gPSBcImluZmxhdGlvblwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcIm1hbmFnZURhdGFcIl0gPSBcIm1hbmFnZV9kYXRhXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiYnVtcFNlcXVlbmNlXCJdID0gXCJidW1wX3NlcXVlbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wibWFuYWdlQnV5T2ZmZXJcIl0gPSBcIm1hbmFnZV9idXlfb2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJwYXRoUGF5bWVudFN0cmljdFNlbmRcIl0gPSBcInBhdGhfcGF5bWVudF9zdHJpY3Rfc2VuZFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNyZWF0ZUNsYWltYWJsZUJhbGFuY2VcIl0gPSBcImNyZWF0ZV9jbGFpbWFibGVfYmFsYW5jZVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImNsYWltQ2xhaW1hYmxlQmFsYW5jZVwiXSA9IFwiY2xhaW1fY2xhaW1hYmxlX2JhbGFuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJiZWdpblNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiXSA9IFwiYmVnaW5fc3BvbnNvcmluZ19mdXR1cmVfcmVzZXJ2ZXNcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJlbmRTcG9uc29yaW5nRnV0dXJlUmVzZXJ2ZXNcIl0gPSBcImVuZF9zcG9uc29yaW5nX2Z1dHVyZV9yZXNlcnZlc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcInJldm9rZVNwb25zb3JzaGlwXCJdID0gXCJyZXZva2Vfc3BvbnNvcnNoaXBcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJjbGF3YmFja1wiXSA9IFwiY2xhd2JhY2tcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJjbGF3YmFja0NsYWltYWJsZUJhbGFuY2VcIl0gPSBcImNsYXdiYWNrX2NsYWltYWJsZV9iYWxhbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wic2V0VHJ1c3RMaW5lRmxhZ3NcIl0gPSBcInNldF90cnVzdF9saW5lX2ZsYWdzXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wibGlxdWlkaXR5UG9vbERlcG9zaXRcIl0gPSBcImxpcXVpZGl0eV9wb29sX2RlcG9zaXRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVbXCJsaXF1aWRpdHlQb29sV2l0aGRyYXdcIl0gPSBcImxpcXVpZGl0eV9wb29sX3dpdGhkcmF3XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wiaW52b2tlSG9zdEZ1bmN0aW9uXCJdID0gXCJpbnZva2VfaG9zdF9mdW5jdGlvblwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZVtcImJ1bXBGb290cHJpbnRFeHBpcmF0aW9uXCJdID0gXCJidW1wX2Zvb3RwcmludF9leHBpcmF0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlW1wicmVzdG9yZUZvb3RwcmludFwiXSA9IFwicmVzdG9yZV9mb290cHJpbnRcIjtcbiAgICByZXR1cm4gT3BlcmF0aW9uUmVzcG9uc2VUeXBlO1xuICB9KHt9KTtcbiAgX0hvcml6b25BcGkuT3BlcmF0aW9uUmVzcG9uc2VUeXBlID0gT3BlcmF0aW9uUmVzcG9uc2VUeXBlO1xuICB2YXIgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSSA9IGZ1bmN0aW9uIChPcGVyYXRpb25SZXNwb25zZVR5cGVJKSB7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiY3JlYXRlQWNjb3VudFwiXSA9IDBdID0gXCJjcmVhdGVBY2NvdW50XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wicGF5bWVudFwiXSA9IDFdID0gXCJwYXltZW50XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wicGF0aFBheW1lbnRcIl0gPSAyXSA9IFwicGF0aFBheW1lbnRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJjcmVhdGVQYXNzaXZlT2ZmZXJcIl0gPSAzXSA9IFwiY3JlYXRlUGFzc2l2ZU9mZmVyXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wibWFuYWdlT2ZmZXJcIl0gPSA0XSA9IFwibWFuYWdlT2ZmZXJcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJzZXRPcHRpb25zXCJdID0gNV0gPSBcInNldE9wdGlvbnNcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJjaGFuZ2VUcnVzdFwiXSA9IDZdID0gXCJjaGFuZ2VUcnVzdFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImFsbG93VHJ1c3RcIl0gPSA3XSA9IFwiYWxsb3dUcnVzdFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImFjY291bnRNZXJnZVwiXSA9IDhdID0gXCJhY2NvdW50TWVyZ2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJpbmZsYXRpb25cIl0gPSA5XSA9IFwiaW5mbGF0aW9uXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wibWFuYWdlRGF0YVwiXSA9IDEwXSA9IFwibWFuYWdlRGF0YVwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImJ1bXBTZXF1ZW5jZVwiXSA9IDExXSA9IFwiYnVtcFNlcXVlbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wibWFuYWdlQnV5T2ZmZXJcIl0gPSAxMl0gPSBcIm1hbmFnZUJ1eU9mZmVyXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wicGF0aFBheW1lbnRTdHJpY3RTZW5kXCJdID0gMTNdID0gXCJwYXRoUGF5bWVudFN0cmljdFNlbmRcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJjcmVhdGVDbGFpbWFibGVCYWxhbmNlXCJdID0gMTRdID0gXCJjcmVhdGVDbGFpbWFibGVCYWxhbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wiY2xhaW1DbGFpbWFibGVCYWxhbmNlXCJdID0gMTVdID0gXCJjbGFpbUNsYWltYWJsZUJhbGFuY2VcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJiZWdpblNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiXSA9IDE2XSA9IFwiYmVnaW5TcG9uc29yaW5nRnV0dXJlUmVzZXJ2ZXNcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJlbmRTcG9uc29yaW5nRnV0dXJlUmVzZXJ2ZXNcIl0gPSAxN10gPSBcImVuZFNwb25zb3JpbmdGdXR1cmVSZXNlcnZlc1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcInJldm9rZVNwb25zb3JzaGlwXCJdID0gMThdID0gXCJyZXZva2VTcG9uc29yc2hpcFwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImNsYXdiYWNrXCJdID0gMTldID0gXCJjbGF3YmFja1wiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImNsYXdiYWNrQ2xhaW1hYmxlQmFsYW5jZVwiXSA9IDIwXSA9IFwiY2xhd2JhY2tDbGFpbWFibGVCYWxhbmNlXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wic2V0VHJ1c3RMaW5lRmxhZ3NcIl0gPSAyMV0gPSBcInNldFRydXN0TGluZUZsYWdzXCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wibGlxdWlkaXR5UG9vbERlcG9zaXRcIl0gPSAyMl0gPSBcImxpcXVpZGl0eVBvb2xEZXBvc2l0XCI7XG4gICAgT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtPcGVyYXRpb25SZXNwb25zZVR5cGVJW1wibGlxdWlkaXR5UG9vbFdpdGhkcmF3XCJdID0gMjNdID0gXCJsaXF1aWRpdHlQb29sV2l0aGRyYXdcIjtcbiAgICBPcGVyYXRpb25SZXNwb25zZVR5cGVJW09wZXJhdGlvblJlc3BvbnNlVHlwZUlbXCJpbnZva2VIb3N0RnVuY3Rpb25cIl0gPSAyNF0gPSBcImludm9rZUhvc3RGdW5jdGlvblwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcImJ1bXBGb290cHJpbnRFeHBpcmF0aW9uXCJdID0gMjVdID0gXCJidW1wRm9vdHByaW50RXhwaXJhdGlvblwiO1xuICAgIE9wZXJhdGlvblJlc3BvbnNlVHlwZUlbT3BlcmF0aW9uUmVzcG9uc2VUeXBlSVtcInJlc3RvcmVGb290cHJpbnRcIl0gPSAyNl0gPSBcInJlc3RvcmVGb290cHJpbnRcIjtcbiAgICByZXR1cm4gT3BlcmF0aW9uUmVzcG9uc2VUeXBlSTtcbiAgfSh7fSk7XG4gIF9Ib3Jpem9uQXBpLk9wZXJhdGlvblJlc3BvbnNlVHlwZUkgPSBPcGVyYXRpb25SZXNwb25zZVR5cGVJO1xuICA7XG4gIHZhciBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzID0gZnVuY3Rpb24gKFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXMpIHtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfRkFJTEVEXCJdID0gXCJ0eF9mYWlsZWRcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfQkFEX1NFUVwiXSA9IFwidHhfYmFkX3NlcVwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9CQURfQVVUSFwiXSA9IFwidHhfYmFkX2F1dGhcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfQkFEX0FVVEhfRVhUUkFcIl0gPSBcInR4X2JhZF9hdXRoX2V4dHJhXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX0ZFRV9CVU1QX0lOTkVSX1NVQ0NFU1NcIl0gPSBcInR4X2ZlZV9idW1wX2lubmVyX3N1Y2Nlc3NcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfRkVFX0JVTVBfSU5ORVJfRkFJTEVEXCJdID0gXCJ0eF9mZWVfYnVtcF9pbm5lcl9mYWlsZWRcIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfTk9UX1NVUFBPUlRFRFwiXSA9IFwidHhfbm90X3N1cHBvcnRlZFwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9TVUNDRVNTXCJdID0gXCJ0eF9zdWNjZXNzXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX1RPT19FQVJMWVwiXSA9IFwidHhfdG9vX2Vhcmx5XCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX1RPT19MQVRFXCJdID0gXCJ0eF90b29fbGF0ZVwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9NSVNTSU5HX09QRVJBVElPTlwiXSA9IFwidHhfbWlzc2luZ19vcGVyYXRpb25cIjtcbiAgICBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzW1wiVFhfSU5TVUZGSUNJRU5UX0JBTEFOQ0VcIl0gPSBcInR4X2luc3VmZmljaWVudF9iYWxhbmNlXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX05PX1NPVVJDRV9BQ0NPVU5UXCJdID0gXCJ0eF9ub19zb3VyY2VfYWNjb3VudFwiO1xuICAgIFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXNbXCJUWF9JTlNVRkZJQ0lFTlRfRkVFXCJdID0gXCJ0eF9pbnN1ZmZpY2llbnRfZmVlXCI7XG4gICAgVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2Rlc1tcIlRYX0lOVEVSTkFMX0VSUk9SXCJdID0gXCJ0eF9pbnRlcm5hbF9lcnJvclwiO1xuICAgIHJldHVybiBUcmFuc2FjdGlvbkZhaWxlZFJlc3VsdENvZGVzO1xuICB9KHt9KTtcbiAgX0hvcml6b25BcGkuVHJhbnNhY3Rpb25GYWlsZWRSZXN1bHRDb2RlcyA9IFRyYW5zYWN0aW9uRmFpbGVkUmVzdWx0Q29kZXM7XG59KShIb3Jpem9uQXBpIHx8IChleHBvcnRzLkhvcml6b25BcGkgPSBIb3Jpem9uQXBpID0ge30pKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = exports.SERVER_TIME_MAP = exports.AxiosClient = void 0;\nexports.getCurrentServerTime = getCurrentServerTime;\nexports.version = void 0;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar version = exports.version = __webpack_require__(/*! ../../package.json */ \"(ssr)/./node_modules/stellar-sdk/package.json\").version;\nvar SERVER_TIME_MAP = exports.SERVER_TIME_MAP = {};\nvar AxiosClient = exports.AxiosClient = _axios.default.create({\n  headers: {\n    \"X-Client-Name\": \"js-stellar-sdk\",\n    \"X-Client-Version\": version\n  }\n});\nfunction toSeconds(ms) {\n  return Math.floor(ms / 1000);\n}\nAxiosClient.interceptors.response.use(function (response) {\n  var hostname = (0, _urijs.default)(response.config.url).hostname();\n  var serverTime = toSeconds(Date.parse(response.headers.date));\n  var localTimeRecorded = toSeconds(new Date().getTime());\n  if (!Number.isNaN(serverTime)) {\n    SERVER_TIME_MAP[hostname] = {\n      serverTime: serverTime,\n      localTimeRecorded: localTimeRecorded\n    };\n  }\n  return response;\n});\nvar _default = exports[\"default\"] = AxiosClient;\nfunction getCurrentServerTime(hostname) {\n  var entry = SERVER_TIME_MAP[hostname];\n  if (!entry || !entry.localTimeRecorded || !entry.serverTime) {\n    return null;\n  }\n  var serverTime = entry.serverTime,\n    localTimeRecorded = entry.localTimeRecorded;\n  var currentTime = toSeconds(new Date().getTime());\n  if (currentTime - localTimeRecorded > 60 * 5) {\n    return null;\n  }\n  return currentTime - localTimeRecorded + serverTime;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9heGlvc19jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWUsR0FBRyx1QkFBdUIsR0FBRyxtQkFBbUI7QUFDL0QsNEJBQTRCO0FBQzVCLGVBQWU7QUFDZixvQ0FBb0MsbUJBQU8sQ0FBQyw2REFBTztBQUNuRCxvQ0FBb0MsbUJBQU8sQ0FBQyxvREFBTztBQUNuRCxxQ0FBcUMsaUNBQWlDO0FBQ3RFLGNBQWMsd0hBQXVEO0FBQ3JFLHNCQUFzQix1QkFBdUI7QUFDN0Msa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWUsa0JBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaG9yaXpvbl9heGlvc19jbGllbnQuanM/OGRhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuU0VSVkVSX1RJTUVfTUFQID0gZXhwb3J0cy5BeGlvc0NsaWVudCA9IHZvaWQgMDtcbmV4cG9ydHMuZ2V0Q3VycmVudFNlcnZlclRpbWUgPSBnZXRDdXJyZW50U2VydmVyVGltZTtcbmV4cG9ydHMudmVyc2lvbiA9IHZvaWQgMDtcbnZhciBfYXhpb3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJheGlvc1wiKSk7XG52YXIgX3VyaWpzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwidXJpanNcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxudmFyIHZlcnNpb24gPSBleHBvcnRzLnZlcnNpb24gPSByZXF1aXJlKFwiLi4vLi4vcGFja2FnZS5qc29uXCIpLnZlcnNpb247XG52YXIgU0VSVkVSX1RJTUVfTUFQID0gZXhwb3J0cy5TRVJWRVJfVElNRV9NQVAgPSB7fTtcbnZhciBBeGlvc0NsaWVudCA9IGV4cG9ydHMuQXhpb3NDbGllbnQgPSBfYXhpb3MuZGVmYXVsdC5jcmVhdGUoe1xuICBoZWFkZXJzOiB7XG4gICAgXCJYLUNsaWVudC1OYW1lXCI6IFwianMtc3RlbGxhci1zZGtcIixcbiAgICBcIlgtQ2xpZW50LVZlcnNpb25cIjogdmVyc2lvblxuICB9XG59KTtcbmZ1bmN0aW9uIHRvU2Vjb25kcyhtcykge1xuICByZXR1cm4gTWF0aC5mbG9vcihtcyAvIDEwMDApO1xufVxuQXhpb3NDbGllbnQuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgdmFyIGhvc3RuYW1lID0gKDAsIF91cmlqcy5kZWZhdWx0KShyZXNwb25zZS5jb25maWcudXJsKS5ob3N0bmFtZSgpO1xuICB2YXIgc2VydmVyVGltZSA9IHRvU2Vjb25kcyhEYXRlLnBhcnNlKHJlc3BvbnNlLmhlYWRlcnMuZGF0ZSkpO1xuICB2YXIgbG9jYWxUaW1lUmVjb3JkZWQgPSB0b1NlY29uZHMobmV3IERhdGUoKS5nZXRUaW1lKCkpO1xuICBpZiAoIU51bWJlci5pc05hTihzZXJ2ZXJUaW1lKSkge1xuICAgIFNFUlZFUl9USU1FX01BUFtob3N0bmFtZV0gPSB7XG4gICAgICBzZXJ2ZXJUaW1lOiBzZXJ2ZXJUaW1lLFxuICAgICAgbG9jYWxUaW1lUmVjb3JkZWQ6IGxvY2FsVGltZVJlY29yZGVkXG4gICAgfTtcbiAgfVxuICByZXR1cm4gcmVzcG9uc2U7XG59KTtcbnZhciBfZGVmYXVsdCA9IGV4cG9ydHMuZGVmYXVsdCA9IEF4aW9zQ2xpZW50O1xuZnVuY3Rpb24gZ2V0Q3VycmVudFNlcnZlclRpbWUoaG9zdG5hbWUpIHtcbiAgdmFyIGVudHJ5ID0gU0VSVkVSX1RJTUVfTUFQW2hvc3RuYW1lXTtcbiAgaWYgKCFlbnRyeSB8fCAhZW50cnkubG9jYWxUaW1lUmVjb3JkZWQgfHwgIWVudHJ5LnNlcnZlclRpbWUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2YXIgc2VydmVyVGltZSA9IGVudHJ5LnNlcnZlclRpbWUsXG4gICAgbG9jYWxUaW1lUmVjb3JkZWQgPSBlbnRyeS5sb2NhbFRpbWVSZWNvcmRlZDtcbiAgdmFyIGN1cnJlbnRUaW1lID0gdG9TZWNvbmRzKG5ldyBEYXRlKCkuZ2V0VGltZSgpKTtcbiAgaWYgKGN1cnJlbnRUaW1lIC0gbG9jYWxUaW1lUmVjb3JkZWQgPiA2MCAqIDUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gY3VycmVudFRpbWUgLSBsb2NhbFRpbWVSZWNvcmRlZCArIHNlcnZlclRpbWU7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/index.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Server: true,\n  AxiosClient: true,\n  SERVER_TIME_MAP: true,\n  getCurrentServerTime: true\n};\nObject.defineProperty(exports, \"AxiosClient\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.default;\n  }\n}));\nObject.defineProperty(exports, \"SERVER_TIME_MAP\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.SERVER_TIME_MAP;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.Server;\n  }\n}));\nexports[\"default\"] = void 0;\nObject.defineProperty(exports, \"getCurrentServerTime\", ({\n  enumerable: true,\n  get: function get() {\n    return _horizon_axios_client.getCurrentServerTime;\n  }\n}));\nvar _horizon_api = __webpack_require__(/*! ./horizon_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\");\nObject.keys(_horizon_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _horizon_api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _horizon_api[key];\n    }\n  });\n});\nvar _server_api = __webpack_require__(/*! ./server_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js\");\nObject.keys(_server_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _server_api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _server_api[key];\n    }\n  });\n});\nvar _account_response = __webpack_require__(/*! ./account_response */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\");\nObject.keys(_account_response).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _account_response[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _account_response[key];\n    }\n  });\n});\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js\");\nvar _horizon_axios_client = _interopRequireWildcard(__webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsbURBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMENBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZix3REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELGtCQUFrQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Qsd0JBQXdCLG1CQUFPLENBQUMsNEZBQW9CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHdFQUFVO0FBQ2hDLG9EQUFvRCxtQkFBTyxDQUFDLG9HQUF3QjtBQUNwRix1Q0FBdUMsK0NBQStDLDBDQUEwQywwRUFBMEUsbUJBQW1CO0FBQzdOLHlDQUF5Qyx1Q0FBdUMsNkVBQTZFLGNBQWMscUNBQXFDLG9DQUFvQyxVQUFVLGlCQUFpQixnRUFBZ0UsMENBQTBDLDhCQUE4QiwwREFBMEQsd0VBQXdFO0FBQ3poQixlQUFlLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2luZGV4LmpzP2VhMGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX2V4cG9ydE5hbWVzID0ge1xuICBTZXJ2ZXI6IHRydWUsXG4gIEF4aW9zQ2xpZW50OiB0cnVlLFxuICBTRVJWRVJfVElNRV9NQVA6IHRydWUsXG4gIGdldEN1cnJlbnRTZXJ2ZXJUaW1lOiB0cnVlXG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXhpb3NDbGllbnRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2hvcml6b25fYXhpb3NfY2xpZW50LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU0VSVkVSX1RJTUVfTUFQXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9ob3Jpem9uX2F4aW9zX2NsaWVudC5TRVJWRVJfVElNRV9NQVA7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9zZXJ2ZXIuU2VydmVyO1xuICB9XG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEN1cnJlbnRTZXJ2ZXJUaW1lXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9ob3Jpem9uX2F4aW9zX2NsaWVudC5nZXRDdXJyZW50U2VydmVyVGltZTtcbiAgfVxufSk7XG52YXIgX2hvcml6b25fYXBpID0gcmVxdWlyZShcIi4vaG9yaXpvbl9hcGlcIik7XG5PYmplY3Qua2V5cyhfaG9yaXpvbl9hcGkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9ob3Jpem9uX2FwaVtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9ob3Jpem9uX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyX2FwaSA9IHJlcXVpcmUoXCIuL3NlcnZlcl9hcGlcIik7XG5PYmplY3Qua2V5cyhfc2VydmVyX2FwaSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3NlcnZlcl9hcGlba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfc2VydmVyX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfYWNjb3VudF9yZXNwb25zZSA9IHJlcXVpcmUoXCIuL2FjY291bnRfcmVzcG9uc2VcIik7XG5PYmplY3Qua2V5cyhfYWNjb3VudF9yZXNwb25zZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX2FjY291bnRfcmVzcG9uc2Vba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfYWNjb3VudF9yZXNwb25zZVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyID0gcmVxdWlyZShcIi4vc2VydmVyXCIpO1xudmFyIF9ob3Jpem9uX2F4aW9zX2NsaWVudCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2hvcml6b25fYXhpb3NfY2xpZW50XCIpKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIFdlYWtNYXApIHJldHVybiBudWxsOyB2YXIgciA9IG5ldyBXZWFrTWFwKCksIHQgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IHJldHVybiBlID8gdCA6IHI7IH0pKGUpOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChlLCByKSB7IGlmICghciAmJiBlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7IGlmIChudWxsID09PSBlIHx8IFwib2JqZWN0XCIgIT0gX3R5cGVvZihlKSAmJiBcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUpIHJldHVybiB7IGRlZmF1bHQ6IGUgfTsgdmFyIHQgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUocik7IGlmICh0ICYmIHQuaGFzKGUpKSByZXR1cm4gdC5nZXQoZSk7IHZhciBuID0geyBfX3Byb3RvX186IG51bGwgfSwgYSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciB1IGluIGUpIGlmIChcImRlZmF1bHRcIiAhPT0gdSAmJiB7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsIHUpKSB7IHZhciBpID0gYSA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgdSkgOiBudWxsOyBpICYmIChpLmdldCB8fCBpLnNldCkgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkobiwgdSwgaSkgOiBuW3VdID0gZVt1XTsgfSByZXR1cm4gbi5kZWZhdWx0ID0gZSwgdCAmJiB0LnNldChlLCBuKSwgbjsgfVxudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.LedgerCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar LedgerCallBuilder = exports.LedgerCallBuilder = function (_CallBuilder) {\n  function LedgerCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, LedgerCallBuilder);\n    _this = _callSuper(this, LedgerCallBuilder, [serverUrl]);\n    _this.url.segment(\"ledgers\");\n    return _this;\n  }\n  _inherits(LedgerCallBuilder, _CallBuilder);\n  return _createClass(LedgerCallBuilder, [{\n    key: \"ledger\",\n    value: function ledger(sequence) {\n      this.filter.push([\"ledgers\", sequence.toString()]);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vbGVkZ2VyX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2xlZGdlcl9jYWxsX2J1aWxkZXIuanM/MjJkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuTGVkZ2VyQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIExlZGdlckNhbGxCdWlsZGVyID0gZXhwb3J0cy5MZWRnZXJDYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gTGVkZ2VyQ2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMZWRnZXJDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIExlZGdlckNhbGxCdWlsZGVyLCBbc2VydmVyVXJsXSk7XG4gICAgX3RoaXMudXJsLnNlZ21lbnQoXCJsZWRnZXJzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoTGVkZ2VyQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoTGVkZ2VyQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImxlZGdlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsZWRnZXIoc2VxdWVuY2UpIHtcbiAgICAgIHRoaXMuZmlsdGVyLnB1c2goW1wibGVkZ2Vyc1wiLCBzZXF1ZW5jZS50b1N0cmluZygpXSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.LiquidityPoolCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar LiquidityPoolCallBuilder = exports.LiquidityPoolCallBuilder = function (_CallBuilder) {\n  function LiquidityPoolCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, LiquidityPoolCallBuilder);\n    _this = _callSuper(this, LiquidityPoolCallBuilder, [serverUrl]);\n    _this.url.segment(\"liquidity_pools\");\n    return _this;\n  }\n  _inherits(LiquidityPoolCallBuilder, _CallBuilder);\n  return _createClass(LiquidityPoolCallBuilder, [{\n    key: \"forAssets\",\n    value: function forAssets() {\n      for (var _len = arguments.length, assets = new Array(_len), _key = 0; _key < _len; _key++) {\n        assets[_key] = arguments[_key];\n      }\n      var assetList = assets.map(function (asset) {\n        return asset.toString();\n      }).join(\",\");\n      this.url.setQuery(\"reserves\", assetList);\n      return this;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(id) {\n      this.url.setQuery(\"account\", id);\n      return this;\n    }\n  }, {\n    key: \"liquidityPoolId\",\n    value: function liquidityPoolId(id) {\n      if (!id.match(/[a-fA-F0-9]{64}/)) {\n        throw new TypeError(\"\".concat(id, \" does not look like a liquidity pool ID\"));\n      }\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([id.toLowerCase()]);\n      return builder;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vbGlxdWlkaXR5X3Bvb2xfY2FsbF9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGdDQUFnQztBQUNoQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDNUMsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLCtCQUErQjtBQUMvQiw0Q0FBNEMsdUVBQXVFLG1HQUFtRztBQUN0TixxQ0FBcUMseUdBQXlHO0FBQzlJLHVDQUF1QyxNQUFNLHFGQUFxRixNQUFNLGFBQWEsMkVBQTJFLGFBQWE7QUFDN08sOEJBQThCLCtGQUErRixpREFBaUQ7QUFDOUssMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsaUNBQWlDLGtHQUFrRyw0QkFBNEI7QUFDL0osK0JBQStCLGdDQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLGFBQWE7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGlDQUFpQyxHQUFHO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL2xpcXVpZGl0eV9wb29sX2NhbGxfYnVpbGRlci5qcz9mYjNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5MaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhhLCBuKSB7IGlmICghKGEgaW5zdGFuY2VvZiBuKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSwgcikgeyBmb3IgKHZhciB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0KyspIHsgdmFyIG8gPSByW3RdOyBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTsgfSB9XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSwgciwgdCkgeyByZXR1cm4gciAmJiBfZGVmaW5lUHJvcGVydGllcyhlLnByb3RvdHlwZSwgciksIHQgJiYgX2RlZmluZVByb3BlcnRpZXMoZSwgdCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiAhMSB9KSwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlciA9IGV4cG9ydHMuTGlxdWlkaXR5UG9vbENhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBMaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIoc2VydmVyVXJsKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBMaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcImxpcXVpZGl0eV9wb29sc1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKExpcXVpZGl0eVBvb2xDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhMaXF1aWRpdHlQb29sQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImZvckFzc2V0c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBc3NldHMoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXNzZXRzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhc3NldHNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG4gICAgICB2YXIgYXNzZXRMaXN0ID0gYXNzZXRzLm1hcChmdW5jdGlvbiAoYXNzZXQpIHtcbiAgICAgICAgcmV0dXJuIGFzc2V0LnRvU3RyaW5nKCk7XG4gICAgICB9KS5qb2luKFwiLFwiKTtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwicmVzZXJ2ZXNcIiwgYXNzZXRMaXN0KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JBY2NvdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFjY291bnQoaWQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiYWNjb3VudFwiLCBpZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibGlxdWlkaXR5UG9vbElkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpcXVpZGl0eVBvb2xJZChpZCkge1xuICAgICAgaWYgKCFpZC5tYXRjaCgvW2EtZkEtRjAtOV17NjR9LykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlwiLmNvbmNhdChpZCwgXCIgZG9lcyBub3QgbG9vayBsaWtlIGEgbGlxdWlkaXR5IHBvb2wgSURcIikpO1xuICAgICAgfVxuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcih0aGlzLnVybC5jbG9uZSgpKTtcbiAgICAgIGJ1aWxkZXIuZmlsdGVyLnB1c2goW2lkLnRvTG93ZXJDYXNlKCldKTtcbiAgICAgIHJldHVybiBidWlsZGVyO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OfferCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OfferCallBuilder = exports.OfferCallBuilder = function (_CallBuilder) {\n  function OfferCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, OfferCallBuilder);\n    _this = _callSuper(this, OfferCallBuilder, [serverUrl, \"offers\"]);\n    _this.url.segment(\"offers\");\n    return _this;\n  }\n  _inherits(OfferCallBuilder, _CallBuilder);\n  return _createClass(OfferCallBuilder, [{\n    key: \"offer\",\n    value: function offer(offerId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([offerId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(id) {\n      return this.forEndpoint(\"accounts\", id);\n    }\n  }, {\n    key: \"buying\",\n    value: function buying(asset) {\n      if (!asset.isNative()) {\n        this.url.setQuery(\"buying_asset_type\", asset.getAssetType());\n        this.url.setQuery(\"buying_asset_code\", asset.getCode());\n        this.url.setQuery(\"buying_asset_issuer\", asset.getIssuer());\n      } else {\n        this.url.setQuery(\"buying_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"selling\",\n    value: function selling(asset) {\n      if (!asset.isNative()) {\n        this.url.setQuery(\"selling_asset_type\", asset.getAssetType());\n        this.url.setQuery(\"selling_asset_code\", asset.getCode());\n        this.url.setQuery(\"selling_asset_issuer\", asset.getIssuer());\n      } else {\n        this.url.setQuery(\"selling_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"sponsor\",\n    value: function sponsor(id) {\n      this.url.setQuery(\"sponsor\", id);\n      return this;\n    }\n  }, {\n    key: \"seller\",\n    value: function seller(_seller) {\n      this.url.setQuery(\"seller\", _seller);\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OperationCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OperationCallBuilder = exports.OperationCallBuilder = function (_CallBuilder) {\n  function OperationCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, OperationCallBuilder);\n    _this = _callSuper(this, OperationCallBuilder, [serverUrl, \"operations\"]);\n    _this.url.segment(\"operations\");\n    return _this;\n  }\n  _inherits(OperationCallBuilder, _CallBuilder);\n  return _createClass(OperationCallBuilder, [{\n    key: \"operation\",\n    value: function operation(operationId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([operationId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forClaimableBalance\",\n    value: function forClaimableBalance(claimableBalanceId) {\n      return this.forEndpoint(\"claimable_balances\", claimableBalanceId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }, {\n    key: \"includeFailed\",\n    value: function includeFailed(value) {\n      this.url.setQuery(\"include_failed\", value.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vb3BlcmF0aW9uX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw0QkFBNEI7QUFDNUIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLDJCQUEyQiw0QkFBNEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9vcGVyYXRpb25fY2FsbF9idWlsZGVyLmpzPzE4YzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk9wZXJhdGlvbkNhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBPcGVyYXRpb25DYWxsQnVpbGRlciA9IGV4cG9ydHMuT3BlcmF0aW9uQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIE9wZXJhdGlvbkNhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgT3BlcmF0aW9uQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBPcGVyYXRpb25DYWxsQnVpbGRlciwgW3NlcnZlclVybCwgXCJvcGVyYXRpb25zXCJdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcIm9wZXJhdGlvbnNcIik7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhPcGVyYXRpb25DYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhPcGVyYXRpb25DYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwib3BlcmF0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZXJhdGlvbihvcGVyYXRpb25JZCkge1xuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcih0aGlzLnVybC5jbG9uZSgpKTtcbiAgICAgIGJ1aWxkZXIuZmlsdGVyLnB1c2goW29wZXJhdGlvbklkXSk7XG4gICAgICByZXR1cm4gYnVpbGRlcjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yQWNjb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJhY2NvdW50c1wiLCBhY2NvdW50SWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JDbGFpbWFibGVCYWxhbmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckNsYWltYWJsZUJhbGFuY2UoY2xhaW1hYmxlQmFsYW5jZUlkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImNsYWltYWJsZV9iYWxhbmNlc1wiLCBjbGFpbWFibGVCYWxhbmNlSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMZWRnZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGVkZ2VyKHNlcXVlbmNlKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxlZGdlcnNcIiwgc2VxdWVuY2UudG9TdHJpbmcoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvclRyYW5zYWN0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvclRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwidHJhbnNhY3Rpb25zXCIsIHRyYW5zYWN0aW9uSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMaXF1aWRpdHlQb29sXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxpcXVpZGl0eVBvb2wocG9vbElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxpcXVpZGl0eV9wb29sc1wiLCBwb29sSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpbmNsdWRlRmFpbGVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluY2x1ZGVGYWlsZWQodmFsdWUpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiaW5jbHVkZV9mYWlsZWRcIiwgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js":
/*!************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OrderbookCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar OrderbookCallBuilder = exports.OrderbookCallBuilder = function (_CallBuilder) {\n  function OrderbookCallBuilder(serverUrl, selling, buying) {\n    var _this;\n    _classCallCheck(this, OrderbookCallBuilder);\n    _this = _callSuper(this, OrderbookCallBuilder, [serverUrl]);\n    _this.url.segment(\"order_book\");\n    if (!selling.isNative()) {\n      _this.url.setQuery(\"selling_asset_type\", selling.getAssetType());\n      _this.url.setQuery(\"selling_asset_code\", selling.getCode());\n      _this.url.setQuery(\"selling_asset_issuer\", selling.getIssuer());\n    } else {\n      _this.url.setQuery(\"selling_asset_type\", \"native\");\n    }\n    if (!buying.isNative()) {\n      _this.url.setQuery(\"buying_asset_type\", buying.getAssetType());\n      _this.url.setQuery(\"buying_asset_code\", buying.getCode());\n      _this.url.setQuery(\"buying_asset_issuer\", buying.getIssuer());\n    } else {\n      _this.url.setQuery(\"buying_asset_type\", \"native\");\n    }\n    return _this;\n  }\n  _inherits(OrderbookCallBuilder, _CallBuilder);\n  return _createClass(OrderbookCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vb3JkZXJib29rX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw0QkFBNEI7QUFDNUIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLGlDQUFpQztBQUNqQywrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLDJCQUEyQiw0QkFBNEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL29yZGVyYm9va19jYWxsX2J1aWxkZXIuanM/ZWNkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuT3JkZXJib29rQ2FsbEJ1aWxkZXIgPSB2b2lkIDA7XG52YXIgX2NhbGxfYnVpbGRlciA9IHJlcXVpcmUoXCIuL2NhbGxfYnVpbGRlclwiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH1cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZih0KSB7IHJldHVybiBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZih0KTsgfSwgX2dldFByb3RvdHlwZU9mKHQpOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YodCwgZSkgeyByZXR1cm4gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7IH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxudmFyIE9yZGVyYm9va0NhbGxCdWlsZGVyID0gZXhwb3J0cy5PcmRlcmJvb2tDYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gT3JkZXJib29rQ2FsbEJ1aWxkZXIoc2VydmVyVXJsLCBzZWxsaW5nLCBidXlpbmcpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9yZGVyYm9va0NhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgT3JkZXJib29rQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcIm9yZGVyX2Jvb2tcIik7XG4gICAgaWYgKCFzZWxsaW5nLmlzTmF0aXZlKCkpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNlbGxpbmdfYXNzZXRfdHlwZVwiLCBzZWxsaW5nLmdldEFzc2V0VHlwZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNlbGxpbmdfYXNzZXRfY29kZVwiLCBzZWxsaW5nLmdldENvZGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzZWxsaW5nX2Fzc2V0X2lzc3VlclwiLCBzZWxsaW5nLmdldElzc3VlcigpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic2VsbGluZ19hc3NldF90eXBlXCIsIFwibmF0aXZlXCIpO1xuICAgIH1cbiAgICBpZiAoIWJ1eWluZy5pc05hdGl2ZSgpKSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJidXlpbmdfYXNzZXRfdHlwZVwiLCBidXlpbmcuZ2V0QXNzZXRUeXBlKCkpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiYnV5aW5nX2Fzc2V0X2NvZGVcIiwgYnV5aW5nLmdldENvZGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJidXlpbmdfYXNzZXRfaXNzdWVyXCIsIGJ1eWluZy5nZXRJc3N1ZXIoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImJ1eWluZ19hc3NldF90eXBlXCIsIFwibmF0aXZlXCIpO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKE9yZGVyYm9va0NhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKE9yZGVyYm9va0NhbGxCdWlsZGVyKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PaymentCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar PaymentCallBuilder = exports.PaymentCallBuilder = function (_CallBuilder) {\n  function PaymentCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, PaymentCallBuilder);\n    _this = _callSuper(this, PaymentCallBuilder, [serverUrl, \"payments\"]);\n    _this.url.segment(\"payments\");\n    return _this;\n  }\n  _inherits(PaymentCallBuilder, _CallBuilder);\n  return _createClass(PaymentCallBuilder, [{\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forTransaction\",\n    value: function forTransaction(transactionId) {\n      return this.forEndpoint(\"transactions\", transactionId);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vcGF5bWVudF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMEJBQTBCO0FBQzFCLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSix5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vcGF5bWVudF9jYWxsX2J1aWxkZXIuanM/ZDAwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuUGF5bWVudENhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBQYXltZW50Q2FsbEJ1aWxkZXIgPSBleHBvcnRzLlBheW1lbnRDYWxsQnVpbGRlciA9IGZ1bmN0aW9uIChfQ2FsbEJ1aWxkZXIpIHtcbiAgZnVuY3Rpb24gUGF5bWVudENhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGF5bWVudENhbGxCdWlsZGVyKTtcbiAgICBfdGhpcyA9IF9jYWxsU3VwZXIodGhpcywgUGF5bWVudENhbGxCdWlsZGVyLCBbc2VydmVyVXJsLCBcInBheW1lbnRzXCJdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcInBheW1lbnRzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoUGF5bWVudENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFBheW1lbnRDYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwiZm9yQWNjb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJhY2NvdW50c1wiLCBhY2NvdW50SWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMZWRnZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yTGVkZ2VyKHNlcXVlbmNlKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxlZGdlcnNcIiwgc2VxdWVuY2UudG9TdHJpbmcoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvclRyYW5zYWN0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvclRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwidHJhbnNhY3Rpb25zXCIsIHRyYW5zYWN0aW9uSWQpO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/server.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Server = exports.SUBMIT_TRANSACTION_TIMEOUT = void 0;\nvar _bignumber = _interopRequireDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors.js\");\nvar _account_call_builder = __webpack_require__(/*! ./account_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_call_builder.js\");\nvar _account_response = __webpack_require__(/*! ./account_response */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/account_response.js\");\nvar _assets_call_builder = __webpack_require__(/*! ./assets_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/assets_call_builder.js\");\nvar _claimable_balances_call_builder = __webpack_require__(/*! ./claimable_balances_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/claimable_balances_call_builder.js\");\nvar _effect_call_builder = __webpack_require__(/*! ./effect_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/effect_call_builder.js\");\nvar _friendbot_builder = __webpack_require__(/*! ./friendbot_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/friendbot_builder.js\");\nvar _ledger_call_builder = __webpack_require__(/*! ./ledger_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/ledger_call_builder.js\");\nvar _liquidity_pool_call_builder = __webpack_require__(/*! ./liquidity_pool_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/liquidity_pool_call_builder.js\");\nvar _offer_call_builder = __webpack_require__(/*! ./offer_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/offer_call_builder.js\");\nvar _operation_call_builder = __webpack_require__(/*! ./operation_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/operation_call_builder.js\");\nvar _orderbook_call_builder = __webpack_require__(/*! ./orderbook_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/orderbook_call_builder.js\");\nvar _payment_call_builder = __webpack_require__(/*! ./payment_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/payment_call_builder.js\");\nvar _strict_receive_path_call_builder = __webpack_require__(/*! ./strict_receive_path_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js\");\nvar _strict_send_path_call_builder = __webpack_require__(/*! ./strict_send_path_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js\");\nvar _trade_aggregation_call_builder = __webpack_require__(/*! ./trade_aggregation_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js\");\nvar _trades_call_builder = __webpack_require__(/*! ./trades_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js\");\nvar _transaction_call_builder = __webpack_require__(/*! ./transaction_call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js\");\nvar _horizon_axios_client = _interopRequireWildcard(__webpack_require__(/*! ./horizon_axios_client */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_axios_client.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;\nvar STROOPS_IN_LUMEN = 10000000;\nvar ACCOUNT_REQUIRES_MEMO = \"MQ==\";\nfunction getAmountInLumens(amt) {\n  return new _bignumber.default(amt).div(STROOPS_IN_LUMEN).toString();\n}\nvar Server = exports.Server = function () {\n  function Server(serverURL) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Server);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    var allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n    var customHeaders = {};\n    if (opts.appName) {\n      customHeaders[\"X-App-Name\"] = opts.appName;\n    }\n    if (opts.appVersion) {\n      customHeaders[\"X-App-Version\"] = opts.appVersion;\n    }\n    if (opts.authToken) {\n      customHeaders[\"X-Auth-Token\"] = opts.authToken;\n    }\n    if (opts.headers) {\n      Object.assign(customHeaders, opts.headers);\n    }\n    if (Object.keys(customHeaders).length > 0) {\n      _horizon_axios_client.default.interceptors.request.use(function (config) {\n        config.headers = Object.assign(config.headers, customHeaders);\n        return config;\n      });\n    }\n    if (this.serverURL.protocol() !== \"https\" && !allowHttp) {\n      throw new Error(\"Cannot connect to insecure horizon server\");\n    }\n  }\n  return _createClass(Server, [{\n    key: \"fetchTimebounds\",\n    value: (function () {\n      var _fetchTimebounds = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(seconds) {\n        var _isRetry,\n          currentTime,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _isRetry = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              currentTime = (0, _horizon_axios_client.getCurrentServerTime)(this.serverURL.hostname());\n              if (!currentTime) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                minTime: 0,\n                maxTime: currentTime + seconds\n              });\n            case 4:\n              if (!_isRetry) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                minTime: 0,\n                maxTime: Math.floor(new Date().getTime() / 1000) + seconds\n              });\n            case 6:\n              _context.next = 8;\n              return _horizon_axios_client.default.get((0, _urijs.default)(this.serverURL).toString());\n            case 8:\n              return _context.abrupt(\"return\", this.fetchTimebounds(seconds, true));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function fetchTimebounds(_x) {\n        return _fetchTimebounds.apply(this, arguments);\n      }\n      return fetchTimebounds;\n    }())\n  }, {\n    key: \"fetchBaseFee\",\n    value: (function () {\n      var _fetchBaseFee = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.feeStats();\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", parseInt(response.last_ledger_base_fee, 10) || 100);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function fetchBaseFee() {\n        return _fetchBaseFee.apply(this, arguments);\n      }\n      return fetchBaseFee;\n    }())\n  }, {\n    key: \"feeStats\",\n    value: (function () {\n      var _feeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {\n        var cb;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              cb = new _call_builder.CallBuilder((0, _urijs.default)(this.serverURL));\n              cb.filter.push([\"fee_stats\"]);\n              return _context3.abrupt(\"return\", cb.call());\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function feeStats() {\n        return _feeStats.apply(this, arguments);\n      }\n      return feeStats;\n    }())\n  }, {\n    key: \"submitTransaction\",\n    value: (function () {\n      var _submitTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(transaction) {\n        var opts,\n          tx,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              opts = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {\n                skipMemoRequiredCheck: false\n              };\n              if (opts.skipMemoRequiredCheck) {\n                _context4.next = 4;\n                break;\n              }\n              _context4.next = 4;\n              return this.checkMemoRequired(transaction);\n            case 4:\n              tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString(\"base64\"));\n              return _context4.abrupt(\"return\", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment(\"transactions\").toString(), \"tx=\".concat(tx), {\n                timeout: SUBMIT_TRANSACTION_TIMEOUT\n              }).then(function (response) {\n                if (!response.data.result_xdr) {\n                  return response.data;\n                }\n                var responseXDR = _stellarBase.xdr.TransactionResult.fromXDR(response.data.result_xdr, \"base64\");\n                var results = responseXDR.result().value();\n                var offerResults;\n                var hasManageOffer;\n                if (results.length) {\n                  offerResults = results.map(function (result, i) {\n                    if (result.value().switch().name !== \"manageBuyOffer\" && result.value().switch().name !== \"manageSellOffer\") {\n                      return null;\n                    }\n                    hasManageOffer = true;\n                    var amountBought = new _bignumber.default(0);\n                    var amountSold = new _bignumber.default(0);\n                    var offerSuccess = result.value().value().success();\n                    var offersClaimed = offerSuccess.offersClaimed().map(function (offerClaimedAtom) {\n                      var offerClaimed = offerClaimedAtom.value();\n                      var sellerId = \"\";\n                      switch (offerClaimedAtom.switch()) {\n                        case _stellarBase.xdr.ClaimAtomType.claimAtomTypeV0():\n                          sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerEd25519());\n                          break;\n                        case _stellarBase.xdr.ClaimAtomType.claimAtomTypeOrderBook():\n                          sellerId = _stellarBase.StrKey.encodeEd25519PublicKey(offerClaimed.sellerId().ed25519());\n                          break;\n                        default:\n                          throw new Error(\"Invalid offer result type: \".concat(offerClaimedAtom.switch()));\n                      }\n                      var claimedOfferAmountBought = new _bignumber.default(offerClaimed.amountBought().toString());\n                      var claimedOfferAmountSold = new _bignumber.default(offerClaimed.amountSold().toString());\n                      amountBought = amountBought.plus(claimedOfferAmountSold);\n                      amountSold = amountSold.plus(claimedOfferAmountBought);\n                      var sold = _stellarBase.Asset.fromOperation(offerClaimed.assetSold());\n                      var bought = _stellarBase.Asset.fromOperation(offerClaimed.assetBought());\n                      var assetSold = {\n                        type: sold.getAssetType(),\n                        assetCode: sold.getCode(),\n                        issuer: sold.getIssuer()\n                      };\n                      var assetBought = {\n                        type: bought.getAssetType(),\n                        assetCode: bought.getCode(),\n                        issuer: bought.getIssuer()\n                      };\n                      return {\n                        sellerId: sellerId,\n                        offerId: offerClaimed.offerId().toString(),\n                        assetSold: assetSold,\n                        amountSold: getAmountInLumens(claimedOfferAmountSold),\n                        assetBought: assetBought,\n                        amountBought: getAmountInLumens(claimedOfferAmountBought)\n                      };\n                    });\n                    var effect = offerSuccess.offer().switch().name;\n                    var currentOffer;\n                    if (typeof offerSuccess.offer().value === \"function\" && offerSuccess.offer().value()) {\n                      var offerXDR = offerSuccess.offer().value();\n                      currentOffer = {\n                        offerId: offerXDR.offerId().toString(),\n                        selling: {},\n                        buying: {},\n                        amount: getAmountInLumens(offerXDR.amount().toString()),\n                        price: {\n                          n: offerXDR.price().n(),\n                          d: offerXDR.price().d()\n                        }\n                      };\n                      var selling = _stellarBase.Asset.fromOperation(offerXDR.selling());\n                      currentOffer.selling = {\n                        type: selling.getAssetType(),\n                        assetCode: selling.getCode(),\n                        issuer: selling.getIssuer()\n                      };\n                      var buying = _stellarBase.Asset.fromOperation(offerXDR.buying());\n                      currentOffer.buying = {\n                        type: buying.getAssetType(),\n                        assetCode: buying.getCode(),\n                        issuer: buying.getIssuer()\n                      };\n                    }\n                    return {\n                      offersClaimed: offersClaimed,\n                      effect: effect,\n                      operationIndex: i,\n                      currentOffer: currentOffer,\n                      amountBought: getAmountInLumens(amountBought),\n                      amountSold: getAmountInLumens(amountSold),\n                      isFullyOpen: !offersClaimed.length && effect !== \"manageOfferDeleted\",\n                      wasPartiallyFilled: !!offersClaimed.length && effect !== \"manageOfferDeleted\",\n                      wasImmediatelyFilled: !!offersClaimed.length && effect === \"manageOfferDeleted\",\n                      wasImmediatelyDeleted: !offersClaimed.length && effect === \"manageOfferDeleted\"\n                    };\n                  }).filter(function (result) {\n                    return !!result;\n                  });\n                }\n                return _objectSpread(_objectSpread({}, response.data), {}, {\n                  offerResults: hasManageOffer ? offerResults : undefined\n                });\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  return Promise.reject(response);\n                }\n                return Promise.reject(new _errors.BadResponseError(\"Transaction submission failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n              }));\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function submitTransaction(_x2) {\n        return _submitTransaction.apply(this, arguments);\n      }\n      return submitTransaction;\n    }())\n  }, {\n    key: \"submitAsyncTransaction\",\n    value: (function () {\n      var _submitAsyncTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(transaction) {\n        var opts,\n          tx,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              opts = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {\n                skipMemoRequiredCheck: false\n              };\n              if (opts.skipMemoRequiredCheck) {\n                _context5.next = 4;\n                break;\n              }\n              _context5.next = 4;\n              return this.checkMemoRequired(transaction);\n            case 4:\n              tx = encodeURIComponent(transaction.toEnvelope().toXDR().toString(\"base64\"));\n              return _context5.abrupt(\"return\", _horizon_axios_client.default.post((0, _urijs.default)(this.serverURL).segment(\"transactions_async\").toString(), \"tx=\".concat(tx)).then(function (response) {\n                return response.data;\n              }).catch(function (response) {\n                if (response instanceof Error) {\n                  return Promise.reject(response);\n                }\n                return Promise.reject(new _errors.BadResponseError(\"Transaction submission failed. Server responded: \".concat(response.status, \" \").concat(response.statusText), response.data));\n              }));\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function submitAsyncTransaction(_x3) {\n        return _submitAsyncTransaction.apply(this, arguments);\n      }\n      return submitAsyncTransaction;\n    }())\n  }, {\n    key: \"accounts\",\n    value: function accounts() {\n      return new _account_call_builder.AccountCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"claimableBalances\",\n    value: function claimableBalances() {\n      return new _claimable_balances_call_builder.ClaimableBalanceCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"ledgers\",\n    value: function ledgers() {\n      return new _ledger_call_builder.LedgerCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"transactions\",\n    value: function transactions() {\n      return new _transaction_call_builder.TransactionCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"offers\",\n    value: function offers() {\n      return new _offer_call_builder.OfferCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"orderbook\",\n    value: function orderbook(selling, buying) {\n      return new _orderbook_call_builder.OrderbookCallBuilder((0, _urijs.default)(this.serverURL), selling, buying);\n    }\n  }, {\n    key: \"trades\",\n    value: function trades() {\n      return new _trades_call_builder.TradesCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"operations\",\n    value: function operations() {\n      return new _operation_call_builder.OperationCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"liquidityPools\",\n    value: function liquidityPools() {\n      return new _liquidity_pool_call_builder.LiquidityPoolCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"strictReceivePaths\",\n    value: function strictReceivePaths(source, destinationAsset, destinationAmount) {\n      return new _strict_receive_path_call_builder.StrictReceivePathCallBuilder((0, _urijs.default)(this.serverURL), source, destinationAsset, destinationAmount);\n    }\n  }, {\n    key: \"strictSendPaths\",\n    value: function strictSendPaths(sourceAsset, sourceAmount, destination) {\n      return new _strict_send_path_call_builder.StrictSendPathCallBuilder((0, _urijs.default)(this.serverURL), sourceAsset, sourceAmount, destination);\n    }\n  }, {\n    key: \"payments\",\n    value: function payments() {\n      return new _payment_call_builder.PaymentCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"effects\",\n    value: function effects() {\n      return new _effect_call_builder.EffectCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"friendbot\",\n    value: function friendbot(address) {\n      return new _friendbot_builder.FriendbotBuilder((0, _urijs.default)(this.serverURL), address);\n    }\n  }, {\n    key: \"assets\",\n    value: function assets() {\n      return new _assets_call_builder.AssetsCallBuilder((0, _urijs.default)(this.serverURL));\n    }\n  }, {\n    key: \"loadAccount\",\n    value: (function () {\n      var _loadAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6(accountId) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.accounts().accountId(accountId).call();\n            case 2:\n              res = _context6.sent;\n              return _context6.abrupt(\"return\", new _account_response.AccountResponse(res));\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function loadAccount(_x4) {\n        return _loadAccount.apply(this, arguments);\n      }\n      return loadAccount;\n    }())\n  }, {\n    key: \"tradeAggregation\",\n    value: function tradeAggregation(base, counter, start_time, end_time, resolution, offset) {\n      return new _trade_aggregation_call_builder.TradeAggregationCallBuilder((0, _urijs.default)(this.serverURL), base, counter, start_time, end_time, resolution, offset);\n    }\n  }, {\n    key: \"checkMemoRequired\",\n    value: (function () {\n      var _checkMemoRequired = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7(transaction) {\n        var destinations, i, operation, destination, account;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (transaction instanceof _stellarBase.FeeBumpTransaction) {\n                transaction = transaction.innerTransaction;\n              }\n              if (!(transaction.memo.type !== \"none\")) {\n                _context7.next = 3;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 3:\n              destinations = new Set();\n              i = 0;\n            case 5:\n              if (!(i < transaction.operations.length)) {\n                _context7.next = 36;\n                break;\n              }\n              operation = transaction.operations[i];\n              _context7.t0 = operation.type;\n              _context7.next = _context7.t0 === \"payment\" ? 10 : _context7.t0 === \"pathPaymentStrictReceive\" ? 10 : _context7.t0 === \"pathPaymentStrictSend\" ? 10 : _context7.t0 === \"accountMerge\" ? 10 : 11;\n              break;\n            case 10:\n              return _context7.abrupt(\"break\", 12);\n            case 11:\n              return _context7.abrupt(\"continue\", 33);\n            case 12:\n              destination = operation.destination;\n              if (!destinations.has(destination)) {\n                _context7.next = 15;\n                break;\n              }\n              return _context7.abrupt(\"continue\", 33);\n            case 15:\n              destinations.add(destination);\n              if (!destination.startsWith(\"M\")) {\n                _context7.next = 18;\n                break;\n              }\n              return _context7.abrupt(\"continue\", 33);\n            case 18:\n              _context7.prev = 18;\n              _context7.next = 21;\n              return this.loadAccount(destination);\n            case 21:\n              account = _context7.sent;\n              if (!(account.data_attr[\"config.memo_required\"] === ACCOUNT_REQUIRES_MEMO)) {\n                _context7.next = 24;\n                break;\n              }\n              throw new _errors.AccountRequiresMemoError(\"account requires memo\", destination, i);\n            case 24:\n              _context7.next = 33;\n              break;\n            case 26:\n              _context7.prev = 26;\n              _context7.t1 = _context7[\"catch\"](18);\n              if (!(_context7.t1 instanceof _errors.AccountRequiresMemoError)) {\n                _context7.next = 30;\n                break;\n              }\n              throw _context7.t1;\n            case 30:\n              if (_context7.t1 instanceof _errors.NotFoundError) {\n                _context7.next = 32;\n                break;\n              }\n              throw _context7.t1;\n            case 32:\n              return _context7.abrupt(\"continue\", 33);\n            case 33:\n              i += 1;\n              _context7.next = 5;\n              break;\n            case 36:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[18, 26]]);\n      }));\n      function checkMemoRequired(_x5) {\n        return _checkMemoRequired.apply(this, arguments);\n      }\n      return checkMemoRequired;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js":
/*!************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/server_api.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ServerApi = void 0;\nvar _horizon_api = __webpack_require__(/*! ./horizon_api */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/horizon_api.js\");\nvar ServerApi;\n(function (_ServerApi) {\n  var TradeType = function (TradeType) {\n    TradeType[\"all\"] = \"all\";\n    TradeType[\"liquidityPools\"] = \"liquidity_pool\";\n    TradeType[\"orderbook\"] = \"orderbook\";\n    return TradeType;\n  }({});\n  _ServerApi.TradeType = TradeType;\n  var OperationResponseType = _horizon_api.HorizonApi.OperationResponseType;\n  var OperationResponseTypeI = _horizon_api.HorizonApi.OperationResponseTypeI;\n})(ServerApi || (exports.ServerApi = ServerApi = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc2VydmVyX2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixpQkFBaUI7QUFDakIsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7QUFDTjtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQixpQkFBaUIsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL3NlcnZlcl9hcGkuanM/NDEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuU2VydmVyQXBpID0gdm9pZCAwO1xudmFyIF9ob3Jpem9uX2FwaSA9IHJlcXVpcmUoXCIuL2hvcml6b25fYXBpXCIpO1xudmFyIFNlcnZlckFwaTtcbihmdW5jdGlvbiAoX1NlcnZlckFwaSkge1xuICB2YXIgVHJhZGVUeXBlID0gZnVuY3Rpb24gKFRyYWRlVHlwZSkge1xuICAgIFRyYWRlVHlwZVtcImFsbFwiXSA9IFwiYWxsXCI7XG4gICAgVHJhZGVUeXBlW1wibGlxdWlkaXR5UG9vbHNcIl0gPSBcImxpcXVpZGl0eV9wb29sXCI7XG4gICAgVHJhZGVUeXBlW1wib3JkZXJib29rXCJdID0gXCJvcmRlcmJvb2tcIjtcbiAgICByZXR1cm4gVHJhZGVUeXBlO1xuICB9KHt9KTtcbiAgX1NlcnZlckFwaS5UcmFkZVR5cGUgPSBUcmFkZVR5cGU7XG4gIHZhciBPcGVyYXRpb25SZXNwb25zZVR5cGUgPSBfaG9yaXpvbl9hcGkuSG9yaXpvbkFwaS5PcGVyYXRpb25SZXNwb25zZVR5cGU7XG4gIHZhciBPcGVyYXRpb25SZXNwb25zZVR5cGVJID0gX2hvcml6b25fYXBpLkhvcml6b25BcGkuT3BlcmF0aW9uUmVzcG9uc2VUeXBlSTtcbn0pKFNlcnZlckFwaSB8fCAoZXhwb3J0cy5TZXJ2ZXJBcGkgPSBTZXJ2ZXJBcGkgPSB7fSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/server_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StrictReceivePathCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar StrictReceivePathCallBuilder = exports.StrictReceivePathCallBuilder = function (_CallBuilder) {\n  function StrictReceivePathCallBuilder(serverUrl, source, destinationAsset, destinationAmount) {\n    var _this;\n    _classCallCheck(this, StrictReceivePathCallBuilder);\n    _this = _callSuper(this, StrictReceivePathCallBuilder, [serverUrl]);\n    _this.url.segment(\"paths/strict-receive\");\n    if (typeof source === \"string\") {\n      _this.url.setQuery(\"source_account\", source);\n    } else {\n      var assets = source.map(function (asset) {\n        if (asset.isNative()) {\n          return \"native\";\n        }\n        return \"\".concat(asset.getCode(), \":\").concat(asset.getIssuer());\n      }).join(\",\");\n      _this.url.setQuery(\"source_assets\", assets);\n    }\n    _this.url.setQuery(\"destination_amount\", destinationAmount);\n    if (!destinationAsset.isNative()) {\n      _this.url.setQuery(\"destination_asset_type\", destinationAsset.getAssetType());\n      _this.url.setQuery(\"destination_asset_code\", destinationAsset.getCode());\n      _this.url.setQuery(\"destination_asset_issuer\", destinationAsset.getIssuer());\n    } else {\n      _this.url.setQuery(\"destination_asset_type\", \"native\");\n    }\n    return _this;\n  }\n  _inherits(StrictReceivePathCallBuilder, _CallBuilder);\n  return _createClass(StrictReceivePathCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3JlY2VpdmVfcGF0aF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysb0NBQW9DO0FBQ3BDLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSixtQ0FBbUMsb0NBQW9DO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9zdHJpY3RfcmVjZWl2ZV9wYXRoX2NhbGxfYnVpbGRlci5qcz8wMjgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBTdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyID0gZXhwb3J0cy5TdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBTdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyKHNlcnZlclVybCwgc291cmNlLCBkZXN0aW5hdGlvbkFzc2V0LCBkZXN0aW5hdGlvbkFtb3VudCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RyaWN0UmVjZWl2ZVBhdGhDYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIFN0cmljdFJlY2VpdmVQYXRoQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmxdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcInBhdGhzL3N0cmljdC1yZWNlaXZlXCIpO1xuICAgIGlmICh0eXBlb2Ygc291cmNlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzb3VyY2VfYWNjb3VudFwiLCBzb3VyY2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXNzZXRzID0gc291cmNlLm1hcChmdW5jdGlvbiAoYXNzZXQpIHtcbiAgICAgICAgaWYgKGFzc2V0LmlzTmF0aXZlKCkpIHtcbiAgICAgICAgICByZXR1cm4gXCJuYXRpdmVcIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQoYXNzZXQuZ2V0Q29kZSgpLCBcIjpcIikuY29uY2F0KGFzc2V0LmdldElzc3VlcigpKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic291cmNlX2Fzc2V0c1wiLCBhc3NldHMpO1xuICAgIH1cbiAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJkZXN0aW5hdGlvbl9hbW91bnRcIiwgZGVzdGluYXRpb25BbW91bnQpO1xuICAgIGlmICghZGVzdGluYXRpb25Bc3NldC5pc05hdGl2ZSgpKSB7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJkZXN0aW5hdGlvbl9hc3NldF90eXBlXCIsIGRlc3RpbmF0aW9uQXNzZXQuZ2V0QXNzZXRUeXBlKCkpO1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwiZGVzdGluYXRpb25fYXNzZXRfY29kZVwiLCBkZXN0aW5hdGlvbkFzc2V0LmdldENvZGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJkZXN0aW5hdGlvbl9hc3NldF9pc3N1ZXJcIiwgZGVzdGluYXRpb25Bc3NldC5nZXRJc3N1ZXIoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2Fzc2V0X3R5cGVcIiwgXCJuYXRpdmVcIik7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoU3RyaWN0UmVjZWl2ZVBhdGhDYWxsQnVpbGRlciwgX0NhbGxCdWlsZGVyKTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhTdHJpY3RSZWNlaXZlUGF0aENhbGxCdWlsZGVyKTtcbn0oX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcik7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_receive_path_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StrictSendPathCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar StrictSendPathCallBuilder = exports.StrictSendPathCallBuilder = function (_CallBuilder) {\n  function StrictSendPathCallBuilder(serverUrl, sourceAsset, sourceAmount, destination) {\n    var _this;\n    _classCallCheck(this, StrictSendPathCallBuilder);\n    _this = _callSuper(this, StrictSendPathCallBuilder, [serverUrl]);\n    _this.url.segment(\"paths/strict-send\");\n    if (sourceAsset.isNative()) {\n      _this.url.setQuery(\"source_asset_type\", \"native\");\n    } else {\n      _this.url.setQuery(\"source_asset_type\", sourceAsset.getAssetType());\n      _this.url.setQuery(\"source_asset_code\", sourceAsset.getCode());\n      _this.url.setQuery(\"source_asset_issuer\", sourceAsset.getIssuer());\n    }\n    _this.url.setQuery(\"source_amount\", sourceAmount);\n    if (typeof destination === \"string\") {\n      _this.url.setQuery(\"destination_account\", destination);\n    } else {\n      var assets = destination.map(function (asset) {\n        if (asset.isNative()) {\n          return \"native\";\n        }\n        return \"\".concat(asset.getCode(), \":\").concat(asset.getIssuer());\n      }).join(\",\");\n      _this.url.setQuery(\"destination_assets\", assets);\n    }\n    return _this;\n  }\n  _inherits(StrictSendPathCallBuilder, _CallBuilder);\n  return _createClass(StrictSendPathCallBuilder);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vc3RyaWN0X3NlbmRfcGF0aF9jYWxsX2J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsc0JBQXNCLDJCQUEyQixvR0FBb0csbUJBQW1CLGlCQUFpQixzSEFBc0g7QUFDL1MsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUNBQWlDO0FBQ2pDLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFnQjtBQUM1QyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3Tyw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5SywyQkFBMkIscUhBQXFILGdEQUFnRCxlQUFlLDRDQUE0QywyQ0FBMkMsY0FBYztBQUNwVCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSixnQ0FBZ0MsaUNBQWlDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi9zdHJpY3Rfc2VuZF9wYXRoX2NhbGxfYnVpbGRlci5qcz9iZGMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBTdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyID0gZXhwb3J0cy5TdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBTdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyKHNlcnZlclVybCwgc291cmNlQXNzZXQsIHNvdXJjZUFtb3VudCwgZGVzdGluYXRpb24pIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBTdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyLCBbc2VydmVyVXJsXSk7XG4gICAgX3RoaXMudXJsLnNlZ21lbnQoXCJwYXRocy9zdHJpY3Qtc2VuZFwiKTtcbiAgICBpZiAoc291cmNlQXNzZXQuaXNOYXRpdmUoKSkge1xuICAgICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic291cmNlX2Fzc2V0X3R5cGVcIiwgXCJuYXRpdmVcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNvdXJjZV9hc3NldF90eXBlXCIsIHNvdXJjZUFzc2V0LmdldEFzc2V0VHlwZSgpKTtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcInNvdXJjZV9hc3NldF9jb2RlXCIsIHNvdXJjZUFzc2V0LmdldENvZGUoKSk7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJzb3VyY2VfYXNzZXRfaXNzdWVyXCIsIHNvdXJjZUFzc2V0LmdldElzc3VlcigpKTtcbiAgICB9XG4gICAgX3RoaXMudXJsLnNldFF1ZXJ5KFwic291cmNlX2Ftb3VudFwiLCBzb3VyY2VBbW91bnQpO1xuICAgIGlmICh0eXBlb2YgZGVzdGluYXRpb24gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIF90aGlzLnVybC5zZXRRdWVyeShcImRlc3RpbmF0aW9uX2FjY291bnRcIiwgZGVzdGluYXRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXNzZXRzID0gZGVzdGluYXRpb24ubWFwKGZ1bmN0aW9uIChhc3NldCkge1xuICAgICAgICBpZiAoYXNzZXQuaXNOYXRpdmUoKSkge1xuICAgICAgICAgIHJldHVybiBcIm5hdGl2ZVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChhc3NldC5nZXRDb2RlKCksIFwiOlwiKS5jb25jYXQoYXNzZXQuZ2V0SXNzdWVyKCkpO1xuICAgICAgfSkuam9pbihcIixcIik7XG4gICAgICBfdGhpcy51cmwuc2V0UXVlcnkoXCJkZXN0aW5hdGlvbl9hc3NldHNcIiwgYXNzZXRzKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhTdHJpY3RTZW5kUGF0aENhbGxCdWlsZGVyLCBfQ2FsbEJ1aWxkZXIpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFN0cmljdFNlbmRQYXRoQ2FsbEJ1aWxkZXIpO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/strict_send_path_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TradeAggregationCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nvar _errors = __webpack_require__(/*! ../errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar allowedResolutions = [60000, 300000, 900000, 3600000, 86400000, 604800000];\nvar TradeAggregationCallBuilder = exports.TradeAggregationCallBuilder = function (_CallBuilder) {\n  function TradeAggregationCallBuilder(serverUrl, base, counter, start_time, end_time, resolution, offset) {\n    var _this;\n    _classCallCheck(this, TradeAggregationCallBuilder);\n    _this = _callSuper(this, TradeAggregationCallBuilder, [serverUrl]);\n    _this.url.segment(\"trade_aggregations\");\n    if (!base.isNative()) {\n      _this.url.setQuery(\"base_asset_type\", base.getAssetType());\n      _this.url.setQuery(\"base_asset_code\", base.getCode());\n      _this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n    } else {\n      _this.url.setQuery(\"base_asset_type\", \"native\");\n    }\n    if (!counter.isNative()) {\n      _this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n      _this.url.setQuery(\"counter_asset_code\", counter.getCode());\n      _this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n    } else {\n      _this.url.setQuery(\"counter_asset_type\", \"native\");\n    }\n    if (typeof start_time !== \"number\" || typeof end_time !== \"number\") {\n      throw new _errors.BadRequestError(\"Invalid time bounds\", [start_time, end_time]);\n    } else {\n      _this.url.setQuery(\"start_time\", start_time.toString());\n      _this.url.setQuery(\"end_time\", end_time.toString());\n    }\n    if (!_this.isValidResolution(resolution)) {\n      throw new _errors.BadRequestError(\"Invalid resolution\", resolution);\n    } else {\n      _this.url.setQuery(\"resolution\", resolution.toString());\n    }\n    if (!_this.isValidOffset(offset, resolution)) {\n      throw new _errors.BadRequestError(\"Invalid offset\", offset);\n    } else {\n      _this.url.setQuery(\"offset\", offset.toString());\n    }\n    return _this;\n  }\n  _inherits(TradeAggregationCallBuilder, _CallBuilder);\n  return _createClass(TradeAggregationCallBuilder, [{\n    key: \"isValidResolution\",\n    value: function isValidResolution(resolution) {\n      return allowedResolutions.some(function (allowed) {\n        return allowed === resolution;\n      });\n    }\n  }, {\n    key: \"isValidOffset\",\n    value: function isValidOffset(offset, resolution) {\n      var hour = 3600000;\n      return !(offset > resolution || offset >= 24 * hour || offset % hour !== 0);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/trade_aggregation_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TradesCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar TradesCallBuilder = exports.TradesCallBuilder = function (_CallBuilder) {\n  function TradesCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, TradesCallBuilder);\n    _this = _callSuper(this, TradesCallBuilder, [serverUrl, \"trades\"]);\n    _this.url.segment(\"trades\");\n    return _this;\n  }\n  _inherits(TradesCallBuilder, _CallBuilder);\n  return _createClass(TradesCallBuilder, [{\n    key: \"forAssetPair\",\n    value: function forAssetPair(base, counter) {\n      if (!base.isNative()) {\n        this.url.setQuery(\"base_asset_type\", base.getAssetType());\n        this.url.setQuery(\"base_asset_code\", base.getCode());\n        this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n      } else {\n        this.url.setQuery(\"base_asset_type\", \"native\");\n      }\n      if (!counter.isNative()) {\n        this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n        this.url.setQuery(\"counter_asset_code\", counter.getCode());\n        this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n      } else {\n        this.url.setQuery(\"counter_asset_type\", \"native\");\n      }\n      return this;\n    }\n  }, {\n    key: \"forOffer\",\n    value: function forOffer(offerId) {\n      this.url.setQuery(\"offer_id\", offerId);\n      return this;\n    }\n  }, {\n    key: \"forType\",\n    value: function forType(tradeType) {\n      this.url.setQuery(\"trade_type\", tradeType);\n      return this;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(liquidityPoolId) {\n      return this.forEndpoint(\"liquidity_pools\", liquidityPoolId);\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vdHJhZGVzX2NhbGxfYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5QkFBeUI7QUFDekIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQWdCO0FBQzVDLGlDQUFpQztBQUNqQyxtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USwrQkFBK0I7QUFDL0IsNENBQTRDLHVFQUF1RSxtR0FBbUc7QUFDdE4scUNBQXFDLHlHQUF5RztBQUM5SSx1Q0FBdUMsTUFBTSxxRkFBcUYsTUFBTSxhQUFhLDJFQUEyRSxhQUFhO0FBQzdPLDhCQUE4QiwrRkFBK0YsaURBQWlEO0FBQzlLLDJCQUEyQixxSEFBcUgsZ0RBQWdELGVBQWUsNENBQTRDLDJDQUEyQyxjQUFjO0FBQ3BULGlDQUFpQyxrR0FBa0csNEJBQTRCO0FBQy9KLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvaG9yaXpvbi90cmFkZXNfY2FsbF9idWlsZGVyLmpzPzJhY2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlRyYWRlc0NhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBUcmFkZXNDYWxsQnVpbGRlciA9IGV4cG9ydHMuVHJhZGVzQ2FsbEJ1aWxkZXIgPSBmdW5jdGlvbiAoX0NhbGxCdWlsZGVyKSB7XG4gIGZ1bmN0aW9uIFRyYWRlc0NhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhZGVzQ2FsbEJ1aWxkZXIpO1xuICAgIF90aGlzID0gX2NhbGxTdXBlcih0aGlzLCBUcmFkZXNDYWxsQnVpbGRlciwgW3NlcnZlclVybCwgXCJ0cmFkZXNcIl0pO1xuICAgIF90aGlzLnVybC5zZWdtZW50KFwidHJhZGVzXCIpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfaW5oZXJpdHMoVHJhZGVzQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoVHJhZGVzQ2FsbEJ1aWxkZXIsIFt7XG4gICAga2V5OiBcImZvckFzc2V0UGFpclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBc3NldFBhaXIoYmFzZSwgY291bnRlcikge1xuICAgICAgaWYgKCFiYXNlLmlzTmF0aXZlKCkpIHtcbiAgICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJiYXNlX2Fzc2V0X3R5cGVcIiwgYmFzZS5nZXRBc3NldFR5cGUoKSk7XG4gICAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiYmFzZV9hc3NldF9jb2RlXCIsIGJhc2UuZ2V0Q29kZSgpKTtcbiAgICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJiYXNlX2Fzc2V0X2lzc3VlclwiLCBiYXNlLmdldElzc3VlcigpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiYmFzZV9hc3NldF90eXBlXCIsIFwibmF0aXZlXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCFjb3VudGVyLmlzTmF0aXZlKCkpIHtcbiAgICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJjb3VudGVyX2Fzc2V0X3R5cGVcIiwgY291bnRlci5nZXRBc3NldFR5cGUoKSk7XG4gICAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiY291bnRlcl9hc3NldF9jb2RlXCIsIGNvdW50ZXIuZ2V0Q29kZSgpKTtcbiAgICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJjb3VudGVyX2Fzc2V0X2lzc3VlclwiLCBjb3VudGVyLmdldElzc3VlcigpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwiY291bnRlcl9hc3NldF90eXBlXCIsIFwibmF0aXZlXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvck9mZmVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvck9mZmVyKG9mZmVySWQpIHtcbiAgICAgIHRoaXMudXJsLnNldFF1ZXJ5KFwib2ZmZXJfaWRcIiwgb2ZmZXJJZCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yVHlwZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JUeXBlKHRyYWRlVHlwZSkge1xuICAgICAgdGhpcy51cmwuc2V0UXVlcnkoXCJ0cmFkZV90eXBlXCIsIHRyYWRlVHlwZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yQWNjb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JBY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJhY2NvdW50c1wiLCBhY2NvdW50SWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JMaXF1aWRpdHlQb29sXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckxpcXVpZGl0eVBvb2wobGlxdWlkaXR5UG9vbElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImxpcXVpZGl0eV9wb29sc1wiLCBsaXF1aWRpdHlQb29sSWQpO1xuICAgIH1cbiAgfV0pO1xufShfY2FsbF9idWlsZGVyLkNhbGxCdWlsZGVyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/trades_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TransactionCallBuilder = void 0;\nvar _call_builder = __webpack_require__(/*! ./call_builder */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/call_builder.js\");\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nvar TransactionCallBuilder = exports.TransactionCallBuilder = function (_CallBuilder) {\n  function TransactionCallBuilder(serverUrl) {\n    var _this;\n    _classCallCheck(this, TransactionCallBuilder);\n    _this = _callSuper(this, TransactionCallBuilder, [serverUrl, \"transactions\"]);\n    _this.url.segment(\"transactions\");\n    return _this;\n  }\n  _inherits(TransactionCallBuilder, _CallBuilder);\n  return _createClass(TransactionCallBuilder, [{\n    key: \"transaction\",\n    value: function transaction(transactionId) {\n      var builder = new _call_builder.CallBuilder(this.url.clone());\n      builder.filter.push([transactionId]);\n      return builder;\n    }\n  }, {\n    key: \"forAccount\",\n    value: function forAccount(accountId) {\n      return this.forEndpoint(\"accounts\", accountId);\n    }\n  }, {\n    key: \"forClaimableBalance\",\n    value: function forClaimableBalance(claimableBalanceId) {\n      return this.forEndpoint(\"claimable_balances\", claimableBalanceId);\n    }\n  }, {\n    key: \"forLedger\",\n    value: function forLedger(sequence) {\n      return this.forEndpoint(\"ledgers\", sequence.toString());\n    }\n  }, {\n    key: \"forLiquidityPool\",\n    value: function forLiquidityPool(poolId) {\n      return this.forEndpoint(\"liquidity_pools\", poolId);\n    }\n  }, {\n    key: \"includeFailed\",\n    value: function includeFailed(value) {\n      this.url.setQuery(\"include_failed\", value.toString());\n      return this;\n    }\n  }]);\n}(_call_builder.CallBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2hvcml6b24vdHJhbnNhY3Rpb25fY2FsbF9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDhCQUE4QjtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDNUMsaUNBQWlDO0FBQ2pDLG1DQUFtQyxnQkFBZ0IsY0FBYyxPQUFPLGNBQWM7QUFDdEYsaUNBQWlDLHFIQUFxSCxjQUFjO0FBQ3BLLDZCQUE2QixtQ0FBbUM7QUFDaEUsOEJBQThCLDRDQUE0QywrQkFBK0Isb0JBQW9CLG1DQUFtQyxzQ0FBc0MsdUVBQXVFO0FBQzdRLCtCQUErQjtBQUMvQiw0Q0FBNEMsdUVBQXVFLG1HQUFtRztBQUN0TixxQ0FBcUMseUdBQXlHO0FBQzlJLHVDQUF1QyxNQUFNLHFGQUFxRixNQUFNLGFBQWEsMkVBQTJFLGFBQWE7QUFDN08sOEJBQThCLCtGQUErRixpREFBaUQ7QUFDOUssMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsaUNBQWlDLGtHQUFrRyw0QkFBNEI7QUFDL0osNkJBQTZCLDhCQUE4QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9ob3Jpem9uL3RyYW5zYWN0aW9uX2NhbGxfYnVpbGRlci5qcz9lYmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5UcmFuc2FjdGlvbkNhbGxCdWlsZGVyID0gdm9pZCAwO1xudmFyIF9jYWxsX2J1aWxkZXIgPSByZXF1aXJlKFwiLi9jYWxsX2J1aWxkZXJcIik7XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkgeyBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlOyBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHQpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKGUpIHsgaWYgKHZvaWQgMCA9PT0gZSkgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiB0LCB3cml0YWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSB9KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlICYmIF9zZXRQcm90b3R5cGVPZih0LCBlKTsgfVxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0OyB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7IH1cbnZhciBUcmFuc2FjdGlvbkNhbGxCdWlsZGVyID0gZXhwb3J0cy5UcmFuc2FjdGlvbkNhbGxCdWlsZGVyID0gZnVuY3Rpb24gKF9DYWxsQnVpbGRlcikge1xuICBmdW5jdGlvbiBUcmFuc2FjdGlvbkNhbGxCdWlsZGVyKHNlcnZlclVybCkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhbnNhY3Rpb25DYWxsQnVpbGRlcik7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIFRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIsIFtzZXJ2ZXJVcmwsIFwidHJhbnNhY3Rpb25zXCJdKTtcbiAgICBfdGhpcy51cmwuc2VnbWVudChcInRyYW5zYWN0aW9uc1wiKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzKFRyYW5zYWN0aW9uQ2FsbEJ1aWxkZXIsIF9DYWxsQnVpbGRlcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoVHJhbnNhY3Rpb25DYWxsQnVpbGRlciwgW3tcbiAgICBrZXk6IFwidHJhbnNhY3Rpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdHJhbnNhY3Rpb24odHJhbnNhY3Rpb25JZCkge1xuICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgX2NhbGxfYnVpbGRlci5DYWxsQnVpbGRlcih0aGlzLnVybC5jbG9uZSgpKTtcbiAgICAgIGJ1aWxkZXIuZmlsdGVyLnB1c2goW3RyYW5zYWN0aW9uSWRdKTtcbiAgICAgIHJldHVybiBidWlsZGVyO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JBY2NvdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvckFjY291bnQoYWNjb3VudElkKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb3JFbmRwb2ludChcImFjY291bnRzXCIsIGFjY291bnRJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckNsYWltYWJsZUJhbGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yQ2xhaW1hYmxlQmFsYW5jZShjbGFpbWFibGVCYWxhbmNlSWQpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwiY2xhaW1hYmxlX2JhbGFuY2VzXCIsIGNsYWltYWJsZUJhbGFuY2VJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvckxlZGdlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JMZWRnZXIoc2VxdWVuY2UpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvckVuZHBvaW50KFwibGVkZ2Vyc1wiLCBzZXF1ZW5jZS50b1N0cmluZygpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yTGlxdWlkaXR5UG9vbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JMaXF1aWRpdHlQb29sKHBvb2xJZCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9yRW5kcG9pbnQoXCJsaXF1aWRpdHlfcG9vbHNcIiwgcG9vbElkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaW5jbHVkZUZhaWxlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbmNsdWRlRmFpbGVkKHZhbHVlKSB7XG4gICAgICB0aGlzLnVybC5zZXRRdWVyeShcImluY2x1ZGVfZmFpbGVkXCIsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG59KF9jYWxsX2J1aWxkZXIuQ2FsbEJ1aWxkZXIpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/horizon/transaction_call_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/stellar-sdk/lib/index.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Config: true,\n  Utils: true,\n  StellarToml: true,\n  Federation: true,\n  WebAuth: true,\n  Friendbot: true,\n  Horizon: true,\n  rpc: true,\n  SorobanRpc: true,\n  contract: true\n};\nObject.defineProperty(exports, \"Config\", ({\n  enumerable: true,\n  get: function get() {\n    return _config.Config;\n  }\n}));\nexports.StellarToml = exports.SorobanRpc = exports.Horizon = exports.Friendbot = exports.Federation = void 0;\nObject.defineProperty(exports, \"Utils\", ({\n  enumerable: true,\n  get: function get() {\n    return _utils.Utils;\n  }\n}));\nexports.rpc = exports[\"default\"] = exports.contract = exports.WebAuth = void 0;\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/errors.js\");\nObject.keys(_errors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _errors[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _errors[key];\n    }\n  });\n});\nvar _config = __webpack_require__(/*! ./config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/utils.js\");\nvar _StellarToml = _interopRequireWildcard(__webpack_require__(/*! ./stellartoml */ \"(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\"));\nexports.StellarToml = _StellarToml;\nvar _Federation = _interopRequireWildcard(__webpack_require__(/*! ./federation */ \"(ssr)/./node_modules/stellar-sdk/lib/federation/index.js\"));\nexports.Federation = _Federation;\nvar _WebAuth = _interopRequireWildcard(__webpack_require__(/*! ./webauth */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js\"));\nexports.WebAuth = _WebAuth;\nvar _Friendbot = _interopRequireWildcard(__webpack_require__(/*! ./friendbot */ \"(ssr)/./node_modules/stellar-sdk/lib/friendbot/index.js\"));\nexports.Friendbot = _Friendbot;\nvar _Horizon = _interopRequireWildcard(__webpack_require__(/*! ./horizon */ \"(ssr)/./node_modules/stellar-sdk/lib/horizon/index.js\"));\nexports.Horizon = _Horizon;\nvar _rpc = _interopRequireWildcard(__webpack_require__(/*! ./rpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\"));\nvar _SorobanRpc = _rpc;\nexports.rpc = _rpc;\nexports.SorobanRpc = _rpc;\nvar _contract = _interopRequireWildcard(__webpack_require__(/*! ./contract */ \"(ssr)/./node_modules/stellar-sdk/lib/contract/index.js\"));\nexports.contract = _contract;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nObject.keys(_stellarBase).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _stellarBase[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stellarBase[key];\n    }\n  });\n});\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLG1CQUFtQixHQUFHLGtCQUFrQixHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxrQkFBa0I7QUFDbkcseUNBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsV0FBVyxHQUFHLGtCQUFlLEdBQUcsZ0JBQWdCLEdBQUcsZUFBZTtBQUNsRSxjQUFjLG1CQUFPLENBQUMsZ0VBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCxjQUFjLG1CQUFPLENBQUMsZ0VBQVU7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDhEQUFTO0FBQzlCLDJDQUEyQyxtQkFBTyxDQUFDLGdGQUFlO0FBQ2xFLG1CQUFtQjtBQUNuQiwwQ0FBMEMsbUJBQU8sQ0FBQyw4RUFBYztBQUNoRSxrQkFBa0I7QUFDbEIsdUNBQXVDLG1CQUFPLENBQUMsd0VBQVc7QUFDMUQsZUFBZTtBQUNmLHlDQUF5QyxtQkFBTyxDQUFDLDRFQUFhO0FBQzlELGlCQUFpQjtBQUNqQix1Q0FBdUMsbUJBQU8sQ0FBQyx3RUFBVztBQUMxRCxlQUFlO0FBQ2YsbUNBQW1DLG1CQUFPLENBQUMsZ0VBQU87QUFDbEQ7QUFDQSxXQUFXO0FBQ1gsa0JBQWtCO0FBQ2xCLHdDQUF3QyxtQkFBTyxDQUFDLDBFQUFZO0FBQzVELGdCQUFnQjtBQUNoQixtQkFBbUIsbUJBQU8sQ0FBQyxzRkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRCx1Q0FBdUMsK0NBQStDLDBDQUEwQywwRUFBMEUsbUJBQW1CO0FBQzdOLHlDQUF5Qyx1Q0FBdUMsNkVBQTZFLGNBQWMscUNBQXFDLG9DQUFvQyxVQUFVLGlCQUFpQixnRUFBZ0UsMENBQTBDLDhCQUE4QiwwREFBMEQsd0VBQXdFO0FBQ3poQixlQUFlLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi9pbmRleC5qcz81ODE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIF9leHBvcnROYW1lcyA9IHtcbiAgQ29uZmlnOiB0cnVlLFxuICBVdGlsczogdHJ1ZSxcbiAgU3RlbGxhclRvbWw6IHRydWUsXG4gIEZlZGVyYXRpb246IHRydWUsXG4gIFdlYkF1dGg6IHRydWUsXG4gIEZyaWVuZGJvdDogdHJ1ZSxcbiAgSG9yaXpvbjogdHJ1ZSxcbiAgcnBjOiB0cnVlLFxuICBTb3JvYmFuUnBjOiB0cnVlLFxuICBjb250cmFjdDogdHJ1ZVxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbmZpZ1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfY29uZmlnLkNvbmZpZztcbiAgfVxufSk7XG5leHBvcnRzLlN0ZWxsYXJUb21sID0gZXhwb3J0cy5Tb3JvYmFuUnBjID0gZXhwb3J0cy5Ib3Jpem9uID0gZXhwb3J0cy5GcmllbmRib3QgPSBleHBvcnRzLkZlZGVyYXRpb24gPSB2b2lkIDA7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVdGlsc1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfdXRpbHMuVXRpbHM7XG4gIH1cbn0pO1xuZXhwb3J0cy5ycGMgPSBleHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmNvbnRyYWN0ID0gZXhwb3J0cy5XZWJBdXRoID0gdm9pZCAwO1xudmFyIF9lcnJvcnMgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5PYmplY3Qua2V5cyhfZXJyb3JzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfZXJyb3JzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2Vycm9yc1trZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfY29uZmlnID0gcmVxdWlyZShcIi4vY29uZmlnXCIpO1xudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xudmFyIF9TdGVsbGFyVG9tbCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL3N0ZWxsYXJ0b21sXCIpKTtcbmV4cG9ydHMuU3RlbGxhclRvbWwgPSBfU3RlbGxhclRvbWw7XG52YXIgX0ZlZGVyYXRpb24gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9mZWRlcmF0aW9uXCIpKTtcbmV4cG9ydHMuRmVkZXJhdGlvbiA9IF9GZWRlcmF0aW9uO1xudmFyIF9XZWJBdXRoID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vd2ViYXV0aFwiKSk7XG5leHBvcnRzLldlYkF1dGggPSBfV2ViQXV0aDtcbnZhciBfRnJpZW5kYm90ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vZnJpZW5kYm90XCIpKTtcbmV4cG9ydHMuRnJpZW5kYm90ID0gX0ZyaWVuZGJvdDtcbnZhciBfSG9yaXpvbiA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL2hvcml6b25cIikpO1xuZXhwb3J0cy5Ib3Jpem9uID0gX0hvcml6b247XG52YXIgX3JwYyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCIuL3JwY1wiKSk7XG52YXIgX1Nvcm9iYW5ScGMgPSBfcnBjO1xuZXhwb3J0cy5ycGMgPSBfcnBjO1xuZXhwb3J0cy5Tb3JvYmFuUnBjID0gX3JwYztcbnZhciBfY29udHJhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9jb250cmFjdFwiKSk7XG5leHBvcnRzLmNvbnRyYWN0ID0gX2NvbnRyYWN0O1xudmFyIF9zdGVsbGFyQmFzZSA9IHJlcXVpcmUoXCJAc3RlbGxhci9zdGVsbGFyLWJhc2VcIik7XG5PYmplY3Qua2V5cyhfc3RlbGxhckJhc2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9zdGVsbGFyQmFzZVtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9zdGVsbGFyQmFzZVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIFdlYWtNYXApIHJldHVybiBudWxsOyB2YXIgciA9IG5ldyBXZWFrTWFwKCksIHQgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IHJldHVybiBlID8gdCA6IHI7IH0pKGUpOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChlLCByKSB7IGlmICghciAmJiBlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7IGlmIChudWxsID09PSBlIHx8IFwib2JqZWN0XCIgIT0gX3R5cGVvZihlKSAmJiBcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGUpIHJldHVybiB7IGRlZmF1bHQ6IGUgfTsgdmFyIHQgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUocik7IGlmICh0ICYmIHQuaGFzKGUpKSByZXR1cm4gdC5nZXQoZSk7IHZhciBuID0geyBfX3Byb3RvX186IG51bGwgfSwgYSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciB1IGluIGUpIGlmIChcImRlZmF1bHRcIiAhPT0gdSAmJiB7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsIHUpKSB7IHZhciBpID0gYSA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgdSkgOiBudWxsOyBpICYmIChpLmdldCB8fCBpLnNldCkgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkobiwgdSwgaSkgOiBuW3VdID0gZVt1XTsgfSByZXR1cm4gbi5kZWZhdWx0ID0gZSwgdCAmJiB0LnNldChlLCBuKSwgbjsgfVxudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js":
/*!*************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/api.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nvar Api;\n(function (_Api) {\n  var GetTransactionStatus = function (GetTransactionStatus) {\n    GetTransactionStatus[\"SUCCESS\"] = \"SUCCESS\";\n    GetTransactionStatus[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    GetTransactionStatus[\"FAILED\"] = \"FAILED\";\n    return GetTransactionStatus;\n  }({});\n  _Api.GetTransactionStatus = GetTransactionStatus;\n  function isSimulationError(sim) {\n    return 'error' in sim;\n  }\n  _Api.isSimulationError = isSimulationError;\n  function isSimulationSuccess(sim) {\n    return 'transactionData' in sim;\n  }\n  _Api.isSimulationSuccess = isSimulationSuccess;\n  function isSimulationRestore(sim) {\n    return isSimulationSuccess(sim) && 'restorePreamble' in sim && !!sim.restorePreamble.transactionData;\n  }\n  _Api.isSimulationRestore = isSimulationRestore;\n  function isSimulationRaw(sim) {\n    return !sim._parsed;\n  }\n  _Api.isSimulationRaw = isSimulationRaw;\n})(Api || (exports.Api = Api = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsVUFBVSxXQUFXLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9hcGkuanM/Y2ViZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQXBpID0gdm9pZCAwO1xudmFyIEFwaTtcbihmdW5jdGlvbiAoX0FwaSkge1xuICB2YXIgR2V0VHJhbnNhY3Rpb25TdGF0dXMgPSBmdW5jdGlvbiAoR2V0VHJhbnNhY3Rpb25TdGF0dXMpIHtcbiAgICBHZXRUcmFuc2FjdGlvblN0YXR1c1tcIlNVQ0NFU1NcIl0gPSBcIlNVQ0NFU1NcIjtcbiAgICBHZXRUcmFuc2FjdGlvblN0YXR1c1tcIk5PVF9GT1VORFwiXSA9IFwiTk9UX0ZPVU5EXCI7XG4gICAgR2V0VHJhbnNhY3Rpb25TdGF0dXNbXCJGQUlMRURcIl0gPSBcIkZBSUxFRFwiO1xuICAgIHJldHVybiBHZXRUcmFuc2FjdGlvblN0YXR1cztcbiAgfSh7fSk7XG4gIF9BcGkuR2V0VHJhbnNhY3Rpb25TdGF0dXMgPSBHZXRUcmFuc2FjdGlvblN0YXR1cztcbiAgZnVuY3Rpb24gaXNTaW11bGF0aW9uRXJyb3Ioc2ltKSB7XG4gICAgcmV0dXJuICdlcnJvcicgaW4gc2ltO1xuICB9XG4gIF9BcGkuaXNTaW11bGF0aW9uRXJyb3IgPSBpc1NpbXVsYXRpb25FcnJvcjtcbiAgZnVuY3Rpb24gaXNTaW11bGF0aW9uU3VjY2VzcyhzaW0pIHtcbiAgICByZXR1cm4gJ3RyYW5zYWN0aW9uRGF0YScgaW4gc2ltO1xuICB9XG4gIF9BcGkuaXNTaW11bGF0aW9uU3VjY2VzcyA9IGlzU2ltdWxhdGlvblN1Y2Nlc3M7XG4gIGZ1bmN0aW9uIGlzU2ltdWxhdGlvblJlc3RvcmUoc2ltKSB7XG4gICAgcmV0dXJuIGlzU2ltdWxhdGlvblN1Y2Nlc3Moc2ltKSAmJiAncmVzdG9yZVByZWFtYmxlJyBpbiBzaW0gJiYgISFzaW0ucmVzdG9yZVByZWFtYmxlLnRyYW5zYWN0aW9uRGF0YTtcbiAgfVxuICBfQXBpLmlzU2ltdWxhdGlvblJlc3RvcmUgPSBpc1NpbXVsYXRpb25SZXN0b3JlO1xuICBmdW5jdGlvbiBpc1NpbXVsYXRpb25SYXcoc2ltKSB7XG4gICAgcmV0dXJuICFzaW0uX3BhcnNlZDtcbiAgfVxuICBfQXBpLmlzU2ltdWxhdGlvblJhdyA9IGlzU2ltdWxhdGlvblJhdztcbn0pKEFwaSB8fCAoZXhwb3J0cy5BcGkgPSBBcGkgPSB7fSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js":
/*!***************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/axios.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.version = exports[\"default\"] = exports.AxiosClient = void 0;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar version = exports.version = __webpack_require__(/*! ../../package.json */ \"(ssr)/./node_modules/stellar-sdk/package.json\").version;\nvar AxiosClient = exports.AxiosClient = _axios.default.create({\n  headers: {\n    'X-Client-Name': 'js-soroban-client',\n    'X-Client-Version': version\n  }\n});\nvar _default = exports[\"default\"] = AxiosClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9heGlvcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixlQUFlLEdBQUcsa0JBQWUsR0FBRyxtQkFBbUI7QUFDdkQsb0NBQW9DLG1CQUFPLENBQUMsNkRBQU87QUFDbkQscUNBQXFDLGlDQUFpQztBQUN0RSxjQUFjLHdIQUF1RDtBQUNyRSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWUsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9heGlvcy5qcz9jYTA2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy52ZXJzaW9uID0gZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5BeGlvc0NsaWVudCA9IHZvaWQgMDtcbnZhciBfYXhpb3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJheGlvc1wiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGUpIHsgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHsgZGVmYXVsdDogZSB9OyB9XG52YXIgdmVyc2lvbiA9IGV4cG9ydHMudmVyc2lvbiA9IHJlcXVpcmUoJy4uLy4uL3BhY2thZ2UuanNvbicpLnZlcnNpb247XG52YXIgQXhpb3NDbGllbnQgPSBleHBvcnRzLkF4aW9zQ2xpZW50ID0gX2F4aW9zLmRlZmF1bHQuY3JlYXRlKHtcbiAgaGVhZGVyczoge1xuICAgICdYLUNsaWVudC1OYW1lJzogJ2pzLXNvcm9iYW4tY2xpZW50JyxcbiAgICAnWC1DbGllbnQtVmVyc2lvbic6IHZlcnNpb25cbiAgfVxufSk7XG52YXIgX2RlZmF1bHQgPSBleHBvcnRzLmRlZmF1bHQgPSBBeGlvc0NsaWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js":
/*!***************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  Server: true,\n  Durability: true,\n  AxiosClient: true,\n  parseRawSimulation: true,\n  parseRawEvents: true\n};\nObject.defineProperty(exports, \"AxiosClient\", ({\n  enumerable: true,\n  get: function get() {\n    return _axios.default;\n  }\n}));\nObject.defineProperty(exports, \"Durability\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.Durability;\n  }\n}));\nObject.defineProperty(exports, \"Server\", ({\n  enumerable: true,\n  get: function get() {\n    return _server.Server;\n  }\n}));\nexports[\"default\"] = void 0;\nObject.defineProperty(exports, \"parseRawEvents\", ({\n  enumerable: true,\n  get: function get() {\n    return _parsers.parseRawEvents;\n  }\n}));\nObject.defineProperty(exports, \"parseRawSimulation\", ({\n  enumerable: true,\n  get: function get() {\n    return _parsers.parseRawSimulation;\n  }\n}));\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nObject.keys(_api).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _api[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _api[key];\n    }\n  });\n});\nvar _server = __webpack_require__(/*! ./server */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\");\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nvar _transaction = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nObject.keys(_transaction).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _transaction[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _transaction[key];\n    }\n  });\n});\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar _default = exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLDhDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLDBDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysa0RBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysc0RBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsV0FBVyxtQkFBTyxDQUFDLDhEQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLG9FQUFVO0FBQ2hDLG9DQUFvQyxtQkFBTyxDQUFDLGtFQUFTO0FBQ3JELGVBQWUsbUJBQU8sQ0FBQyxzRUFBVztBQUNsQyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELHFDQUFxQyxpQ0FBaUM7QUFDdEUsZUFBZSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9zdGVsbGFyLXNkay9saWIvcnBjL2luZGV4LmpzPzc5OTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX2V4cG9ydE5hbWVzID0ge1xuICBTZXJ2ZXI6IHRydWUsXG4gIER1cmFiaWxpdHk6IHRydWUsXG4gIEF4aW9zQ2xpZW50OiB0cnVlLFxuICBwYXJzZVJhd1NpbXVsYXRpb246IHRydWUsXG4gIHBhcnNlUmF3RXZlbnRzOiB0cnVlXG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXhpb3NDbGllbnRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2F4aW9zLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRHVyYWJpbGl0eVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfc2VydmVyLkR1cmFiaWxpdHk7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9zZXJ2ZXIuU2VydmVyO1xuICB9XG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmF3RXZlbnRzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9wYXJzZXJzLnBhcnNlUmF3RXZlbnRzO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmF3U2ltdWxhdGlvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfcGFyc2Vycy5wYXJzZVJhd1NpbXVsYXRpb247XG4gIH1cbn0pO1xudmFyIF9hcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG5PYmplY3Qua2V5cyhfYXBpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfYXBpW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX2FwaVtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbnZhciBfc2VydmVyID0gcmVxdWlyZShcIi4vc2VydmVyXCIpO1xudmFyIF9heGlvcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYXhpb3NcIikpO1xudmFyIF9wYXJzZXJzID0gcmVxdWlyZShcIi4vcGFyc2Vyc1wiKTtcbnZhciBfdHJhbnNhY3Rpb24gPSByZXF1aXJlKFwiLi90cmFuc2FjdGlvblwiKTtcbk9iamVjdC5rZXlzKF90cmFuc2FjdGlvbikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3RyYW5zYWN0aW9uW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX3RyYW5zYWN0aW9uW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChlKSB7IHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsgfVxudmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/jsonrpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.postObject = postObject;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction hasOwnProperty(obj, prop) {\n  return obj.hasOwnProperty(prop);\n}\nfunction postObject(_x, _x2) {\n  return _postObject.apply(this, arguments);\n}\nfunction _postObject() {\n  _postObject = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(url, method) {\n    var param,\n      response,\n      _response$data,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          param = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n          _context.next = 3;\n          return _axios.default.post(url, {\n            jsonrpc: \"2.0\",\n            id: 1,\n            method: method,\n            params: param\n          });\n        case 3:\n          response = _context.sent;\n          if (!hasOwnProperty(response.data, \"error\")) {\n            _context.next = 8;\n            break;\n          }\n          throw response.data.error;\n        case 8:\n          return _context.abrupt(\"return\", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _postObject.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js":
/*!*****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/parsers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.parseRawEvents = parseRawEvents;\nexports.parseRawLedgerEntries = parseRawLedgerEntries;\nexports.parseRawSendTransaction = parseRawSendTransaction;\nexports.parseRawSimulation = parseRawSimulation;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction parseRawSendTransaction(r) {\n  var errorResultXdr = r.errorResultXdr,\n    diagnosticEventsXdr = r.diagnosticEventsXdr;\n  delete r.errorResultXdr;\n  delete r.diagnosticEventsXdr;\n  if (errorResultXdr) {\n    return _objectSpread(_objectSpread(_objectSpread({}, r), diagnosticEventsXdr !== undefined && diagnosticEventsXdr.length > 0 && {\n      diagnosticEvents: diagnosticEventsXdr.map(function (evt) {\n        return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');\n      })\n    }), {}, {\n      errorResult: _stellarBase.xdr.TransactionResult.fromXDR(errorResultXdr, 'base64')\n    });\n  }\n  return _objectSpread({}, r);\n}\nfunction parseRawEvents(r) {\n  var _r$events;\n  return {\n    latestLedger: r.latestLedger,\n    events: ((_r$events = r.events) !== null && _r$events !== void 0 ? _r$events : []).map(function (evt) {\n      var clone = _objectSpread({}, evt);\n      delete clone.contractId;\n      return _objectSpread(_objectSpread(_objectSpread({}, clone), evt.contractId !== '' && {\n        contractId: new _stellarBase.Contract(evt.contractId)\n      }), {}, {\n        topic: evt.topic.map(function (topic) {\n          return _stellarBase.xdr.ScVal.fromXDR(topic, 'base64');\n        }),\n        value: _stellarBase.xdr.ScVal.fromXDR(evt.value, 'base64')\n      });\n    })\n  };\n}\nfunction parseRawLedgerEntries(raw) {\n  var _raw$entries;\n  return {\n    latestLedger: raw.latestLedger,\n    entries: ((_raw$entries = raw.entries) !== null && _raw$entries !== void 0 ? _raw$entries : []).map(function (rawEntry) {\n      if (!rawEntry.key || !rawEntry.xdr) {\n        throw new TypeError(\"invalid ledger entry: \".concat(JSON.stringify(rawEntry)));\n      }\n      return _objectSpread({\n        lastModifiedLedgerSeq: rawEntry.lastModifiedLedgerSeq,\n        key: _stellarBase.xdr.LedgerKey.fromXDR(rawEntry.key, 'base64'),\n        val: _stellarBase.xdr.LedgerEntryData.fromXDR(rawEntry.xdr, 'base64')\n      }, rawEntry.liveUntilLedgerSeq !== undefined && {\n        liveUntilLedgerSeq: rawEntry.liveUntilLedgerSeq\n      });\n    })\n  };\n}\nfunction parseSuccessful(sim, partial) {\n  var _sim$results$length, _sim$results, _sim$stateChanges$len, _sim$stateChanges, _sim$stateChanges2;\n  var success = _objectSpread(_objectSpread(_objectSpread({}, partial), {}, {\n    transactionData: new _stellarBase.SorobanDataBuilder(sim.transactionData),\n    minResourceFee: sim.minResourceFee,\n    cost: sim.cost\n  }, ((_sim$results$length = (_sim$results = sim.results) === null || _sim$results === void 0 ? void 0 : _sim$results.length) !== null && _sim$results$length !== void 0 ? _sim$results$length : 0 > 0) && {\n    result: sim.results.map(function (row) {\n      var _row$auth;\n      return {\n        auth: ((_row$auth = row.auth) !== null && _row$auth !== void 0 ? _row$auth : []).map(function (entry) {\n          return _stellarBase.xdr.SorobanAuthorizationEntry.fromXDR(entry, 'base64');\n        }),\n        retval: row.xdr ? _stellarBase.xdr.ScVal.fromXDR(row.xdr, 'base64') : _stellarBase.xdr.ScVal.scvVoid()\n      };\n    })[0]\n  }), ((_sim$stateChanges$len = (_sim$stateChanges = sim.stateChanges) === null || _sim$stateChanges === void 0 ? void 0 : _sim$stateChanges.length) !== null && _sim$stateChanges$len !== void 0 ? _sim$stateChanges$len : 0 > 0) && {\n    stateChanges: (_sim$stateChanges2 = sim.stateChanges) === null || _sim$stateChanges2 === void 0 ? void 0 : _sim$stateChanges2.map(function (entryChange) {\n      return {\n        type: entryChange.type,\n        key: _stellarBase.xdr.LedgerKey.fromXDR(entryChange.key, 'base64'),\n        before: entryChange.before ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.before, 'base64') : null,\n        after: entryChange.after ? _stellarBase.xdr.LedgerEntry.fromXDR(entryChange.after, 'base64') : null\n      };\n    })\n  });\n  if (!sim.restorePreamble || sim.restorePreamble.transactionData === '') {\n    return success;\n  }\n  return _objectSpread(_objectSpread({}, success), {}, {\n    restorePreamble: {\n      minResourceFee: sim.restorePreamble.minResourceFee,\n      transactionData: new _stellarBase.SorobanDataBuilder(sim.restorePreamble.transactionData)\n    }\n  });\n}\nfunction parseRawSimulation(sim) {\n  var _sim$events$map, _sim$events;\n  var looksRaw = _api.Api.isSimulationRaw(sim);\n  if (!looksRaw) {\n    return sim;\n  }\n  var base = {\n    _parsed: true,\n    id: sim.id,\n    latestLedger: sim.latestLedger,\n    events: (_sim$events$map = (_sim$events = sim.events) === null || _sim$events === void 0 ? void 0 : _sim$events.map(function (evt) {\n      return _stellarBase.xdr.DiagnosticEvent.fromXDR(evt, 'base64');\n    })) !== null && _sim$events$map !== void 0 ? _sim$events$map : []\n  };\n  if (typeof sim.error === 'string') {\n    return _objectSpread(_objectSpread({}, base), {}, {\n      error: sim.error\n    });\n  }\n  return parseSuccessful(sim, base);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js":
/*!****************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/server.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Server = exports.SUBMIT_TRANSACTION_TIMEOUT = exports.Durability = void 0;\nvar _urijs = _interopRequireDefault(__webpack_require__(/*! urijs */ \"(ssr)/./node_modules/urijs/src/URI.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _axios = _interopRequireDefault(__webpack_require__(/*! ./axios */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/axios.js\"));\nvar jsonrpc = _interopRequireWildcard(__webpack_require__(/*! ./jsonrpc */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/jsonrpc.js\"));\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _transaction = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\");\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar SUBMIT_TRANSACTION_TIMEOUT = exports.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1000;\nvar Durability = exports.Durability = function (Durability) {\n  Durability[\"Temporary\"] = \"temporary\";\n  Durability[\"Persistent\"] = \"persistent\";\n  return Durability;\n}({});\nfunction findCreatedAccountSequenceInTransactionMeta(meta) {\n  var _operations$flatMap$f;\n  var operations = [];\n  switch (meta.switch()) {\n    case 0:\n      operations = meta.operations();\n      break;\n    case 1:\n    case 2:\n    case 3:\n      operations = meta.value().operations();\n      break;\n    default:\n      throw new Error('Unexpected transaction meta switch value');\n  }\n  var sequenceNumber = (_operations$flatMap$f = operations.flatMap(function (op) {\n    return op.changes();\n  }).find(function (c) {\n    return c.switch() === _stellarBase.xdr.LedgerEntryChangeType.ledgerEntryCreated() && c.created().data().switch() === _stellarBase.xdr.LedgerEntryType.account();\n  })) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.created()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.data()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.account()) === null || _operations$flatMap$f === void 0 || (_operations$flatMap$f = _operations$flatMap$f.seqNum()) === null || _operations$flatMap$f === void 0 ? void 0 : _operations$flatMap$f.toString();\n  if (sequenceNumber) {\n    return sequenceNumber;\n  }\n  throw new Error('No account created in transaction');\n}\nvar Server = exports.Server = function () {\n  function Server(serverURL) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Server);\n    this.serverURL = (0, _urijs.default)(serverURL);\n    if (opts.headers && Object.keys(opts.headers).length !== 0) {\n      _axios.default.interceptors.request.use(function (config) {\n        config.headers = Object.assign(config.headers, opts.headers);\n        return config;\n      });\n    }\n    if (this.serverURL.protocol() !== 'https' && !opts.allowHttp) {\n      throw new Error(\"Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set\");\n    }\n  }\n  return _createClass(Server, [{\n    key: \"getAccount\",\n    value: (function () {\n      var _getAccount = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(address) {\n        var ledgerKey, resp, accountEntry;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              ledgerKey = _stellarBase.xdr.LedgerKey.account(new _stellarBase.xdr.LedgerKeyAccount({\n                accountId: _stellarBase.Keypair.fromPublicKey(address).xdrPublicKey()\n              }));\n              _context.next = 3;\n              return this.getLedgerEntries(ledgerKey);\n            case 3:\n              resp = _context.sent;\n              if (!(resp.entries.length === 0)) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Account not found: \".concat(address)\n              }));\n            case 6:\n              accountEntry = resp.entries[0].val.account();\n              return _context.abrupt(\"return\", new _stellarBase.Account(address, accountEntry.seqNum().toString()));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getAccount(_x) {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }())\n  }, {\n    key: \"getHealth\",\n    value: (function () {\n      var _getHealth = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getHealth'));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getHealth() {\n        return _getHealth.apply(this, arguments);\n      }\n      return getHealth;\n    }())\n  }, {\n    key: \"getContractData\",\n    value: (function () {\n      var _getContractData = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(contract, key) {\n        var durability,\n          scAddress,\n          xdrDurability,\n          contractKey,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              durability = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : Durability.Persistent;\n              if (!(typeof contract === 'string')) {\n                _context3.next = 5;\n                break;\n              }\n              scAddress = new _stellarBase.Contract(contract).address().toScAddress();\n              _context3.next = 14;\n              break;\n            case 5:\n              if (!(contract instanceof _stellarBase.Address)) {\n                _context3.next = 9;\n                break;\n              }\n              scAddress = contract.toScAddress();\n              _context3.next = 14;\n              break;\n            case 9:\n              if (!(contract instanceof _stellarBase.Contract)) {\n                _context3.next = 13;\n                break;\n              }\n              scAddress = contract.address().toScAddress();\n              _context3.next = 14;\n              break;\n            case 13:\n              throw new TypeError(\"unknown contract type: \".concat(contract));\n            case 14:\n              _context3.t0 = durability;\n              _context3.next = _context3.t0 === Durability.Temporary ? 17 : _context3.t0 === Durability.Persistent ? 19 : 21;\n              break;\n            case 17:\n              xdrDurability = _stellarBase.xdr.ContractDataDurability.temporary();\n              return _context3.abrupt(\"break\", 22);\n            case 19:\n              xdrDurability = _stellarBase.xdr.ContractDataDurability.persistent();\n              return _context3.abrupt(\"break\", 22);\n            case 21:\n              throw new TypeError(\"invalid durability: \".concat(durability));\n            case 22:\n              contractKey = _stellarBase.xdr.LedgerKey.contractData(new _stellarBase.xdr.LedgerKeyContractData({\n                key: key,\n                contract: scAddress,\n                durability: xdrDurability\n              }));\n              return _context3.abrupt(\"return\", this.getLedgerEntries(contractKey).then(function (r) {\n                if (r.entries.length === 0) {\n                  return Promise.reject({\n                    code: 404,\n                    message: \"Contract data not found. Contract: \".concat(_stellarBase.Address.fromScAddress(scAddress).toString(), \", Key: \").concat(key.toXDR('base64'), \", Durability: \").concat(durability)\n                  });\n                }\n                return r.entries[0];\n              }));\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getContractData(_x2, _x3) {\n        return _getContractData.apply(this, arguments);\n      }\n      return getContractData;\n    }())\n  }, {\n    key: \"getContractWasmByContractId\",\n    value: (function () {\n      var _getContractWasmByContractId = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(contractId) {\n        var _response$entries$;\n        var contractLedgerKey, response, wasmHash;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              contractLedgerKey = new _stellarBase.Contract(contractId).getFootprint();\n              _context4.next = 3;\n              return this.getLedgerEntries(contractLedgerKey);\n            case 3:\n              response = _context4.sent;\n              if (!(!response.entries.length || !((_response$entries$ = response.entries[0]) !== null && _response$entries$ !== void 0 && _response$entries$.val))) {\n                _context4.next = 6;\n                break;\n              }\n              return _context4.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Could not obtain contract hash from server\"\n              }));\n            case 6:\n              wasmHash = response.entries[0].val.contractData().val().instance().executable().wasmHash();\n              return _context4.abrupt(\"return\", this.getContractWasmByHash(wasmHash));\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getContractWasmByContractId(_x4) {\n        return _getContractWasmByContractId.apply(this, arguments);\n      }\n      return getContractWasmByContractId;\n    }())\n  }, {\n    key: \"getContractWasmByHash\",\n    value: (function () {\n      var _getContractWasmByHash = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(wasmHash) {\n        var _responseWasm$entries;\n        var format,\n          wasmHashBuffer,\n          ledgerKeyWasmHash,\n          responseWasm,\n          wasmBuffer,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              format = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : undefined;\n              wasmHashBuffer = typeof wasmHash === \"string\" ? Buffer.from(wasmHash, format) : wasmHash;\n              ledgerKeyWasmHash = _stellarBase.xdr.LedgerKey.contractCode(new _stellarBase.xdr.LedgerKeyContractCode({\n                hash: wasmHashBuffer\n              }));\n              _context5.next = 5;\n              return this.getLedgerEntries(ledgerKeyWasmHash);\n            case 5:\n              responseWasm = _context5.sent;\n              if (!(!responseWasm.entries.length || !((_responseWasm$entries = responseWasm.entries[0]) !== null && _responseWasm$entries !== void 0 && _responseWasm$entries.val))) {\n                _context5.next = 8;\n                break;\n              }\n              return _context5.abrupt(\"return\", Promise.reject({\n                code: 404,\n                message: \"Could not obtain contract wasm from server\"\n              }));\n            case 8:\n              wasmBuffer = responseWasm.entries[0].val.contractCode().code();\n              return _context5.abrupt(\"return\", wasmBuffer);\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getContractWasmByHash(_x5) {\n        return _getContractWasmByHash.apply(this, arguments);\n      }\n      return getContractWasmByHash;\n    }())\n  }, {\n    key: \"getLedgerEntries\",\n    value: (function () {\n      var _getLedgerEntries2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {\n        var _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", this._getLedgerEntries.apply(this, _args6).then(_parsers.parseRawLedgerEntries));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getLedgerEntries() {\n        return _getLedgerEntries2.apply(this, arguments);\n      }\n      return getLedgerEntries;\n    }())\n  }, {\n    key: \"_getLedgerEntries\",\n    value: function () {\n      var _getLedgerEntries3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {\n        var _len,\n          keys,\n          _key,\n          _args7 = arguments;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              for (_len = _args7.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n                keys[_key] = _args7[_key];\n              }\n              return _context7.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getLedgerEntries', {\n                keys: keys.map(function (k) {\n                  return k.toXDR('base64');\n                })\n              }));\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function _getLedgerEntries() {\n        return _getLedgerEntries3.apply(this, arguments);\n      }\n      return _getLedgerEntries;\n    }()\n  }, {\n    key: \"getTransaction\",\n    value: (function () {\n      var _getTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(hash) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this._getTransaction(hash).then(function (raw) {\n                var foundInfo = {};\n                if (raw.status !== _api.Api.GetTransactionStatus.NOT_FOUND) {\n                  var _meta$v3$sorobanMeta;\n                  var meta = _stellarBase.xdr.TransactionMeta.fromXDR(raw.resultMetaXdr, 'base64');\n                  foundInfo = _objectSpread({\n                    ledger: raw.ledger,\n                    createdAt: raw.createdAt,\n                    applicationOrder: raw.applicationOrder,\n                    feeBump: raw.feeBump,\n                    envelopeXdr: _stellarBase.xdr.TransactionEnvelope.fromXDR(raw.envelopeXdr, 'base64'),\n                    resultXdr: _stellarBase.xdr.TransactionResult.fromXDR(raw.resultXdr, 'base64'),\n                    resultMetaXdr: meta\n                  }, meta.switch() === 3 && meta.v3().sorobanMeta() !== null && raw.status === _api.Api.GetTransactionStatus.SUCCESS && {\n                    returnValue: (_meta$v3$sorobanMeta = meta.v3().sorobanMeta()) === null || _meta$v3$sorobanMeta === void 0 ? void 0 : _meta$v3$sorobanMeta.returnValue()\n                  });\n                }\n                var result = _objectSpread({\n                  status: raw.status,\n                  latestLedger: raw.latestLedger,\n                  latestLedgerCloseTime: raw.latestLedgerCloseTime,\n                  oldestLedger: raw.oldestLedger,\n                  oldestLedgerCloseTime: raw.oldestLedgerCloseTime\n                }, foundInfo);\n                return result;\n              }));\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getTransaction(_x6) {\n        return _getTransaction2.apply(this, arguments);\n      }\n      return getTransaction;\n    }())\n  }, {\n    key: \"_getTransaction\",\n    value: function () {\n      var _getTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(hash) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getTransaction', {\n                hash: hash\n              }));\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _getTransaction(_x7) {\n        return _getTransaction3.apply(this, arguments);\n      }\n      return _getTransaction;\n    }()\n  }, {\n    key: \"getEvents\",\n    value: (function () {\n      var _getEvents2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(request) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", this._getEvents(request).then(_parsers.parseRawEvents));\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getEvents(_x8) {\n        return _getEvents2.apply(this, arguments);\n      }\n      return getEvents;\n    }())\n  }, {\n    key: \"_getEvents\",\n    value: function () {\n      var _getEvents3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(request) {\n        var _request$filters;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getEvents', _objectSpread({\n                filters: (_request$filters = request.filters) !== null && _request$filters !== void 0 ? _request$filters : [],\n                pagination: _objectSpread(_objectSpread({}, request.cursor && {\n                  cursor: request.cursor\n                }), request.limit && {\n                  limit: request.limit\n                })\n              }, request.startLedger && {\n                startLedger: request.startLedger\n              })));\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function _getEvents(_x9) {\n        return _getEvents3.apply(this, arguments);\n      }\n      return _getEvents;\n    }()\n  }, {\n    key: \"getNetwork\",\n    value: (function () {\n      var _getNetwork = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12() {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getNetwork'));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function getNetwork() {\n        return _getNetwork.apply(this, arguments);\n      }\n      return getNetwork;\n    }())\n  }, {\n    key: \"getLatestLedger\",\n    value: (function () {\n      var _getLatestLedger = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getLatestLedger'));\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function getLatestLedger() {\n        return _getLatestLedger.apply(this, arguments);\n      }\n      return getLatestLedger;\n    }())\n  }, {\n    key: \"simulateTransaction\",\n    value: (function () {\n      var _simulateTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14(tx, addlResources) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt(\"return\", this._simulateTransaction(tx, addlResources).then(_parsers.parseRawSimulation));\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function simulateTransaction(_x10, _x11) {\n        return _simulateTransaction2.apply(this, arguments);\n      }\n      return simulateTransaction;\n    }())\n  }, {\n    key: \"_simulateTransaction\",\n    value: function () {\n      var _simulateTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15(transaction, addlResources) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'simulateTransaction', _objectSpread({\n                transaction: transaction.toXDR()\n              }, addlResources !== undefined && {\n                resourceConfig: {\n                  instructionLeeway: addlResources.cpuInstructions\n                }\n              })));\n            case 1:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function _simulateTransaction(_x12, _x13) {\n        return _simulateTransaction3.apply(this, arguments);\n      }\n      return _simulateTransaction;\n    }()\n  }, {\n    key: \"prepareTransaction\",\n    value: (function () {\n      var _prepareTransaction = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16(tx) {\n        var simResponse;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this.simulateTransaction(tx);\n            case 2:\n              simResponse = _context16.sent;\n              if (!_api.Api.isSimulationError(simResponse)) {\n                _context16.next = 5;\n                break;\n              }\n              throw new Error(simResponse.error);\n            case 5:\n              return _context16.abrupt(\"return\", (0, _transaction.assembleTransaction)(tx, simResponse).build());\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function prepareTransaction(_x14) {\n        return _prepareTransaction.apply(this, arguments);\n      }\n      return prepareTransaction;\n    }())\n  }, {\n    key: \"sendTransaction\",\n    value: (function () {\n      var _sendTransaction2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17(transaction) {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              return _context17.abrupt(\"return\", this._sendTransaction(transaction).then(_parsers.parseRawSendTransaction));\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function sendTransaction(_x15) {\n        return _sendTransaction2.apply(this, arguments);\n      }\n      return sendTransaction;\n    }())\n  }, {\n    key: \"_sendTransaction\",\n    value: function () {\n      var _sendTransaction3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18(transaction) {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              return _context18.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'sendTransaction', {\n                transaction: transaction.toXDR()\n              }));\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _sendTransaction(_x16) {\n        return _sendTransaction3.apply(this, arguments);\n      }\n      return _sendTransaction;\n    }()\n  }, {\n    key: \"requestAirdrop\",\n    value: (function () {\n      var _requestAirdrop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19(address, friendbotUrl) {\n        var account, response, meta, sequence, _error$response, _error$response$detai;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              account = typeof address === 'string' ? address : address.accountId();\n              _context19.t0 = friendbotUrl;\n              if (_context19.t0) {\n                _context19.next = 6;\n                break;\n              }\n              _context19.next = 5;\n              return this.getNetwork();\n            case 5:\n              _context19.t0 = _context19.sent.friendbotUrl;\n            case 6:\n              friendbotUrl = _context19.t0;\n              if (friendbotUrl) {\n                _context19.next = 9;\n                break;\n              }\n              throw new Error('No friendbot URL configured for current network');\n            case 9:\n              _context19.prev = 9;\n              _context19.next = 12;\n              return _axios.default.post(\"\".concat(friendbotUrl, \"?addr=\").concat(encodeURIComponent(account)));\n            case 12:\n              response = _context19.sent;\n              meta = _stellarBase.xdr.TransactionMeta.fromXDR(response.data.result_meta_xdr, 'base64');\n              sequence = findCreatedAccountSequenceInTransactionMeta(meta);\n              return _context19.abrupt(\"return\", new _stellarBase.Account(account, sequence));\n            case 18:\n              _context19.prev = 18;\n              _context19.t1 = _context19[\"catch\"](9);\n              if (!(((_error$response = _context19.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400)) {\n                _context19.next = 23;\n                break;\n              }\n              if (!((_error$response$detai = _context19.t1.response.detail) !== null && _error$response$detai !== void 0 && _error$response$detai.includes('createAccountAlreadyExist'))) {\n                _context19.next = 23;\n                break;\n              }\n              return _context19.abrupt(\"return\", this.getAccount(account));\n            case 23:\n              throw _context19.t1;\n            case 24:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this, [[9, 18]]);\n      }));\n      function requestAirdrop(_x17, _x18) {\n        return _requestAirdrop.apply(this, arguments);\n      }\n      return requestAirdrop;\n    }())\n  }, {\n    key: \"getFeeStats\",\n    value: (function () {\n      var _getFeeStats = _asyncToGenerator(_regeneratorRuntime().mark(function _callee20() {\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              return _context20.abrupt(\"return\", jsonrpc.postObject(this.serverURL.toString(), 'getFeeStats'));\n            case 1:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function getFeeStats() {\n        return _getFeeStats.apply(this, arguments);\n      }\n      return getFeeStats;\n    }())\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js":
/*!*********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/rpc/transaction.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.assembleTransaction = assembleTransaction;\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _api = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/api.js\");\nvar _parsers = __webpack_require__(/*! ./parsers */ \"(ssr)/./node_modules/stellar-sdk/lib/rpc/parsers.js\");\nfunction isSorobanTransaction(tx) {\n  if (tx.operations.length !== 1) {\n    return false;\n  }\n  switch (tx.operations[0].type) {\n    case 'invokeHostFunction':\n    case 'extendFootprintTtl':\n    case 'restoreFootprint':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction assembleTransaction(raw, simulation) {\n  if ('innerTransaction' in raw) {\n    return assembleTransaction(raw.innerTransaction, simulation);\n  }\n  if (!isSorobanTransaction(raw)) {\n    throw new TypeError('unsupported transaction: must contain exactly one ' + 'invokeHostFunction, extendFootprintTtl, or restoreFootprint ' + 'operation');\n  }\n  var success = (0, _parsers.parseRawSimulation)(simulation);\n  if (!_api.Api.isSimulationSuccess(success)) {\n    throw new Error(\"simulation incorrect: \".concat(JSON.stringify(success)));\n  }\n  var classicFeeNum = parseInt(raw.fee) || 0;\n  var minResourceFeeNum = parseInt(success.minResourceFee) || 0;\n  var txnBuilder = _stellarBase.TransactionBuilder.cloneFrom(raw, {\n    fee: (classicFeeNum + minResourceFeeNum).toString(),\n    sorobanData: success.transactionData.build(),\n    networkPassphrase: raw.networkPassphrase\n  });\n  if (raw.operations[0].type === 'invokeHostFunction') {\n    var _invokeOp$auth;\n    txnBuilder.clearOperations();\n    var invokeOp = raw.operations[0];\n    var existingAuth = (_invokeOp$auth = invokeOp.auth) !== null && _invokeOp$auth !== void 0 ? _invokeOp$auth : [];\n    txnBuilder.addOperation(_stellarBase.Operation.invokeHostFunction({\n      source: invokeOp.source,\n      func: invokeOp.func,\n      auth: existingAuth.length > 0 ? existingAuth : success.result.auth\n    }));\n  }\n  return txnBuilder;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy90cmFuc2FjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsc0ZBQXVCO0FBQ2xELFdBQVcsbUJBQU8sQ0FBQyw4REFBTztBQUMxQixlQUFlLG1CQUFPLENBQUMsc0VBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3JwYy90cmFuc2FjdGlvbi5qcz9jODNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hc3NlbWJsZVRyYW5zYWN0aW9uID0gYXNzZW1ibGVUcmFuc2FjdGlvbjtcbnZhciBfc3RlbGxhckJhc2UgPSByZXF1aXJlKFwiQHN0ZWxsYXIvc3RlbGxhci1iYXNlXCIpO1xudmFyIF9hcGkgPSByZXF1aXJlKFwiLi9hcGlcIik7XG52YXIgX3BhcnNlcnMgPSByZXF1aXJlKFwiLi9wYXJzZXJzXCIpO1xuZnVuY3Rpb24gaXNTb3JvYmFuVHJhbnNhY3Rpb24odHgpIHtcbiAgaWYgKHR4Lm9wZXJhdGlvbnMubGVuZ3RoICE9PSAxKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN3aXRjaCAodHgub3BlcmF0aW9uc1swXS50eXBlKSB7XG4gICAgY2FzZSAnaW52b2tlSG9zdEZ1bmN0aW9uJzpcbiAgICBjYXNlICdleHRlbmRGb290cHJpbnRUdGwnOlxuICAgIGNhc2UgJ3Jlc3RvcmVGb290cHJpbnQnOlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZnVuY3Rpb24gYXNzZW1ibGVUcmFuc2FjdGlvbihyYXcsIHNpbXVsYXRpb24pIHtcbiAgaWYgKCdpbm5lclRyYW5zYWN0aW9uJyBpbiByYXcpIHtcbiAgICByZXR1cm4gYXNzZW1ibGVUcmFuc2FjdGlvbihyYXcuaW5uZXJUcmFuc2FjdGlvbiwgc2ltdWxhdGlvbik7XG4gIH1cbiAgaWYgKCFpc1Nvcm9iYW5UcmFuc2FjdGlvbihyYXcpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5zdXBwb3J0ZWQgdHJhbnNhY3Rpb246IG11c3QgY29udGFpbiBleGFjdGx5IG9uZSAnICsgJ2ludm9rZUhvc3RGdW5jdGlvbiwgZXh0ZW5kRm9vdHByaW50VHRsLCBvciByZXN0b3JlRm9vdHByaW50ICcgKyAnb3BlcmF0aW9uJyk7XG4gIH1cbiAgdmFyIHN1Y2Nlc3MgPSAoMCwgX3BhcnNlcnMucGFyc2VSYXdTaW11bGF0aW9uKShzaW11bGF0aW9uKTtcbiAgaWYgKCFfYXBpLkFwaS5pc1NpbXVsYXRpb25TdWNjZXNzKHN1Y2Nlc3MpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwic2ltdWxhdGlvbiBpbmNvcnJlY3Q6IFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeShzdWNjZXNzKSkpO1xuICB9XG4gIHZhciBjbGFzc2ljRmVlTnVtID0gcGFyc2VJbnQocmF3LmZlZSkgfHwgMDtcbiAgdmFyIG1pblJlc291cmNlRmVlTnVtID0gcGFyc2VJbnQoc3VjY2Vzcy5taW5SZXNvdXJjZUZlZSkgfHwgMDtcbiAgdmFyIHR4bkJ1aWxkZXIgPSBfc3RlbGxhckJhc2UuVHJhbnNhY3Rpb25CdWlsZGVyLmNsb25lRnJvbShyYXcsIHtcbiAgICBmZWU6IChjbGFzc2ljRmVlTnVtICsgbWluUmVzb3VyY2VGZWVOdW0pLnRvU3RyaW5nKCksXG4gICAgc29yb2JhbkRhdGE6IHN1Y2Nlc3MudHJhbnNhY3Rpb25EYXRhLmJ1aWxkKCksXG4gICAgbmV0d29ya1Bhc3NwaHJhc2U6IHJhdy5uZXR3b3JrUGFzc3BocmFzZVxuICB9KTtcbiAgaWYgKHJhdy5vcGVyYXRpb25zWzBdLnR5cGUgPT09ICdpbnZva2VIb3N0RnVuY3Rpb24nKSB7XG4gICAgdmFyIF9pbnZva2VPcCRhdXRoO1xuICAgIHR4bkJ1aWxkZXIuY2xlYXJPcGVyYXRpb25zKCk7XG4gICAgdmFyIGludm9rZU9wID0gcmF3Lm9wZXJhdGlvbnNbMF07XG4gICAgdmFyIGV4aXN0aW5nQXV0aCA9IChfaW52b2tlT3AkYXV0aCA9IGludm9rZU9wLmF1dGgpICE9PSBudWxsICYmIF9pbnZva2VPcCRhdXRoICE9PSB2b2lkIDAgPyBfaW52b2tlT3AkYXV0aCA6IFtdO1xuICAgIHR4bkJ1aWxkZXIuYWRkT3BlcmF0aW9uKF9zdGVsbGFyQmFzZS5PcGVyYXRpb24uaW52b2tlSG9zdEZ1bmN0aW9uKHtcbiAgICAgIHNvdXJjZTogaW52b2tlT3Auc291cmNlLFxuICAgICAgZnVuYzogaW52b2tlT3AuZnVuYyxcbiAgICAgIGF1dGg6IGV4aXN0aW5nQXV0aC5sZW5ndGggPiAwID8gZXhpc3RpbmdBdXRoIDogc3VjY2Vzcy5yZXN1bHQuYXV0aFxuICAgIH0pKTtcbiAgfVxuICByZXR1cm4gdHhuQnVpbGRlcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/rpc/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/stellartoml/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.STELLAR_TOML_MAX_SIZE = exports.Resolver = exports.Api = void 0;\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nvar _toml = _interopRequireDefault(__webpack_require__(/*! toml */ \"(ssr)/./node_modules/toml/index.js\"));\nvar _config = __webpack_require__(/*! ../config */ \"(ssr)/./node_modules/stellar-sdk/lib/config.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar STELLAR_TOML_MAX_SIZE = exports.STELLAR_TOML_MAX_SIZE = 100 * 1024;\nvar CancelToken = _axios.default.CancelToken;\nvar Resolver = exports.Resolver = function () {\n  function Resolver() {\n    _classCallCheck(this, Resolver);\n  }\n  return _createClass(Resolver, null, [{\n    key: \"resolve\",\n    value: (function () {\n      var _resolve = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(domain) {\n        var opts,\n          allowHttp,\n          timeout,\n          protocol,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              allowHttp = typeof opts.allowHttp === \"undefined\" ? _config.Config.isAllowHttp() : opts.allowHttp;\n              timeout = typeof opts.timeout === \"undefined\" ? _config.Config.getTimeout() : opts.timeout;\n              protocol = allowHttp ? \"http\" : \"https\";\n              return _context.abrupt(\"return\", _axios.default.get(\"\".concat(protocol, \"://\").concat(domain, \"/.well-known/stellar.toml\"), {\n                maxContentLength: STELLAR_TOML_MAX_SIZE,\n                cancelToken: timeout ? new CancelToken(function (cancel) {\n                  return setTimeout(function () {\n                    return cancel(\"timeout of \".concat(timeout, \"ms exceeded\"));\n                  }, timeout);\n                }) : undefined,\n                timeout: timeout\n              }).then(function (response) {\n                try {\n                  var tomlObject = _toml.default.parse(response.data);\n                  return Promise.resolve(tomlObject);\n                } catch (e) {\n                  return Promise.reject(new Error(\"stellar.toml is invalid - Parsing error on line \".concat(e.line, \", column \").concat(e.column, \": \").concat(e.message)));\n                }\n              }).catch(function (err) {\n                if (err.message.match(/^maxContentLength size/)) {\n                  throw new Error(\"stellar.toml file exceeds allowed size of \".concat(STELLAR_TOML_MAX_SIZE));\n                } else {\n                  throw err;\n                }\n              }));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function resolve(_x) {\n        return _resolve.apply(this, arguments);\n      }\n      return resolve;\n    }())\n  }]);\n}();\nvar Api;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/stellartoml/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/stellar-sdk/lib/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Utils = void 0;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Utils = exports.Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n  return _createClass(Utils, null, [{\n    key: \"validateTimebounds\",\n    value: function validateTimebounds(transaction) {\n      var gracePeriod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (!transaction.timeBounds) {\n        return false;\n      }\n      var now = Math.floor(Date.now() / 1000);\n      var _transaction$timeBoun = transaction.timeBounds,\n        minTime = _transaction$timeBoun.minTime,\n        maxTime = _transaction$timeBoun.maxTime;\n      return now >= Number.parseInt(minTime, 10) - gracePeriod && now <= Number.parseInt(maxTime, 10) + gracePeriod;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGFBQWE7QUFDYixzQkFBc0IsMkJBQTJCLG9HQUFvRyxtQkFBbUIsaUJBQWlCLHNIQUFzSDtBQUMvUyxpQ0FBaUM7QUFDakMsbUNBQW1DLGdCQUFnQixjQUFjLE9BQU8sY0FBYztBQUN0RixpQ0FBaUMscUhBQXFILGNBQWM7QUFDcEssNkJBQTZCLG1DQUFtQztBQUNoRSw4QkFBOEIsNENBQTRDLCtCQUErQixvQkFBb0IsbUNBQW1DLHNDQUFzQyx1RUFBdUU7QUFDN1EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3V0aWxzLmpzP2QwMWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlV0aWxzID0gdm9pZCAwO1xuZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGEsIG4pIHsgaWYgKCEoYSBpbnN0YW5jZW9mIG4pKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7IGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykgeyB2YXIgbyA9IHJbdF07IG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBfdG9Qcm9wZXJ0eUtleShvLmtleSksIG8pOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7IHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6ICExIH0pLCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxudmFyIFV0aWxzID0gZXhwb3J0cy5VdGlscyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gVXRpbHMoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFV0aWxzKTtcbiAgfVxuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFV0aWxzLCBudWxsLCBbe1xuICAgIGtleTogXCJ2YWxpZGF0ZVRpbWVib3VuZHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGVUaW1lYm91bmRzKHRyYW5zYWN0aW9uKSB7XG4gICAgICB2YXIgZ3JhY2VQZXJpb2QgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gICAgICBpZiAoIXRyYW5zYWN0aW9uLnRpbWVCb3VuZHMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgdmFyIG5vdyA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xuICAgICAgdmFyIF90cmFuc2FjdGlvbiR0aW1lQm91biA9IHRyYW5zYWN0aW9uLnRpbWVCb3VuZHMsXG4gICAgICAgIG1pblRpbWUgPSBfdHJhbnNhY3Rpb24kdGltZUJvdW4ubWluVGltZSxcbiAgICAgICAgbWF4VGltZSA9IF90cmFuc2FjdGlvbiR0aW1lQm91bi5tYXhUaW1lO1xuICAgICAgcmV0dXJuIG5vdyA+PSBOdW1iZXIucGFyc2VJbnQobWluVGltZSwgMTApIC0gZ3JhY2VQZXJpb2QgJiYgbm93IDw9IE51bWJlci5wYXJzZUludChtYXhUaW1lLCAxMCkgKyBncmFjZVBlcmlvZDtcbiAgICB9XG4gIH1dKTtcbn0oKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.InvalidChallengeError = void 0;\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _wrapNativeSuper(t) { var r = \"function\" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf(\"[native code]\"); } catch (n) { return \"function\" == typeof t; } }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nvar InvalidChallengeError = exports.InvalidChallengeError = function (_Error) {\n  function InvalidChallengeError(message) {\n    var _this;\n    _classCallCheck(this, InvalidChallengeError);\n    var trueProto = (this instanceof InvalidChallengeError ? this.constructor : void 0).prototype;\n    _this = _callSuper(this, InvalidChallengeError, [message]);\n    _this.__proto__ = trueProto;\n    _this.constructor = InvalidChallengeError;\n    _this.name = \"InvalidChallengeError\";\n    return _this;\n  }\n  _inherits(InvalidChallengeError, _Error);\n  return _createClass(InvalidChallengeError);\n}(_wrapNativeSuper(Error));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQiwyQkFBMkIsb0dBQW9HLG1CQUFtQixpQkFBaUIsc0hBQXNIO0FBQy9TLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDZCQUE2QjtBQUM3QixtQ0FBbUMsZ0JBQWdCLGNBQWMsT0FBTyxjQUFjO0FBQ3RGLGlDQUFpQyxxSEFBcUgsY0FBYztBQUNwSyw2QkFBNkIsbUNBQW1DO0FBQ2hFLDhCQUE4Qiw0Q0FBNEMsK0JBQStCLG9CQUFvQixtQ0FBbUMsc0NBQXNDLHVFQUF1RTtBQUM3USxpQ0FBaUM7QUFDakMsK0JBQStCO0FBQy9CLDRDQUE0Qyx1RUFBdUUsbUdBQW1HO0FBQ3ROLHFDQUFxQyx5R0FBeUc7QUFDOUksMkJBQTJCLHFIQUFxSCxnREFBZ0QsZUFBZSw0Q0FBNEMsMkNBQTJDLGNBQWM7QUFDcFQsK0JBQStCLHVEQUF1RCx5REFBeUQsbURBQW1ELHVHQUF1RyxvQkFBb0IsK0JBQStCLHFCQUFxQixxQkFBcUIsc0VBQXNFLHdEQUF3RCxlQUFlLGtFQUFrRSxpQ0FBaUM7QUFDdG5CLCtCQUErQixrRkFBa0YsZ0JBQWdCLG9CQUFvQixvQ0FBb0M7QUFDekwsdUNBQXVDLE1BQU0scUZBQXFGLE1BQU0sYUFBYSwyRUFBMkUsYUFBYTtBQUM3TyxnQ0FBZ0MsTUFBTSxvRUFBb0UsWUFBWTtBQUN0SCxpQ0FBaUMsa0dBQWtHLDRCQUE0QjtBQUMvSiw4QkFBOEIsK0ZBQStGLGlEQUFpRDtBQUM5Syw0QkFBNEIsNkJBQTZCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1hcHAvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvZXJyb3JzLmpzPzI3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkludmFsaWRDaGFsbGVuZ2VFcnJvciA9IHZvaWQgMDtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHsgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7IHZhciBvID0gclt0XTsgby5lbnVtZXJhYmxlID0gby5lbnVtZXJhYmxlIHx8ICExLCBvLmNvbmZpZ3VyYWJsZSA9ICEwLCBcInZhbHVlXCIgaW4gbyAmJiAoby53cml0YWJsZSA9ICEwKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIF90b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7IH0gfVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHsgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikgeyBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH1cbmZ1bmN0aW9uIF9jYWxsU3VwZXIodCwgbywgZSkgeyByZXR1cm4gbyA9IF9nZXRQcm90b3R5cGVPZihvKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpID8gUmVmbGVjdC5jb25zdHJ1Y3QobywgZSB8fCBbXSwgX2dldFByb3RvdHlwZU9mKHQpLmNvbnN0cnVjdG9yKSA6IG8uYXBwbHkodCwgZSkpOyB9XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0LCBlKSB7IGlmIChlICYmIChcIm9iamVjdFwiID09IF90eXBlb2YoZSkgfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlKSkgcmV0dXJuIGU7IGlmICh2b2lkIDAgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTsgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7IH1cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoZSkgeyBpZiAodm9pZCAwID09PSBlKSB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfaW5oZXJpdHModCwgZSkgeyBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlICYmIG51bGwgIT09IGUpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGUgJiYgZS5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHQsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogITEgfSksIGUgJiYgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKHQpIHsgdmFyIHIgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIE1hcCA/IG5ldyBNYXAoKSA6IHZvaWQgMDsgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIgPSBmdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKHQpIHsgaWYgKG51bGwgPT09IHQgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKHQpKSByZXR1cm4gdDsgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyBpZiAodm9pZCAwICE9PSByKSB7IGlmIChyLmhhcyh0KSkgcmV0dXJuIHIuZ2V0KHQpOyByLnNldCh0LCBXcmFwcGVyKTsgfSBmdW5jdGlvbiBXcmFwcGVyKCkgeyByZXR1cm4gX2NvbnN0cnVjdCh0LCBhcmd1bWVudHMsIF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7IH0gcmV0dXJuIFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogV3JhcHBlciwgZW51bWVyYWJsZTogITEsIHdyaXRhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9IH0pLCBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgdCk7IH0sIF93cmFwTmF0aXZlU3VwZXIodCk7IH1cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QodCwgZSwgcikgeyBpZiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSByZXR1cm4gUmVmbGVjdC5jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgdmFyIG8gPSBbbnVsbF07IG8ucHVzaC5hcHBseShvLCBlKTsgdmFyIHAgPSBuZXcgKHQuYmluZC5hcHBseSh0LCBvKSkoKTsgcmV0dXJuIHIgJiYgX3NldFByb3RvdHlwZU9mKHAsIHIucHJvdG90eXBlKSwgcDsgfVxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgdHJ5IHsgdmFyIHQgPSAhQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gKF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyByZXR1cm4gISF0OyB9KSgpOyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbih0KSB7IHRyeSB7IHJldHVybiAtMSAhPT0gRnVuY3Rpb24udG9TdHJpbmcuY2FsbCh0KS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKTsgfSBjYXRjaCAobikgeyByZXR1cm4gXCJmdW5jdGlvblwiID09IHR5cGVvZiB0OyB9IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7IHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQuX19wcm90b19fID0gZSwgdDsgfSwgX3NldFByb3RvdHlwZU9mKHQsIGUpOyB9XG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YodCkgeyByZXR1cm4gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7IH0sIF9nZXRQcm90b3R5cGVPZih0KTsgfVxudmFyIEludmFsaWRDaGFsbGVuZ2VFcnJvciA9IGV4cG9ydHMuSW52YWxpZENoYWxsZW5nZUVycm9yID0gZnVuY3Rpb24gKF9FcnJvcikge1xuICBmdW5jdGlvbiBJbnZhbGlkQ2hhbGxlbmdlRXJyb3IobWVzc2FnZSkge1xuICAgIHZhciBfdGhpcztcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW52YWxpZENoYWxsZW5nZUVycm9yKTtcbiAgICB2YXIgdHJ1ZVByb3RvID0gKHRoaXMgaW5zdGFuY2VvZiBJbnZhbGlkQ2hhbGxlbmdlRXJyb3IgPyB0aGlzLmNvbnN0cnVjdG9yIDogdm9pZCAwKS5wcm90b3R5cGU7XG4gICAgX3RoaXMgPSBfY2FsbFN1cGVyKHRoaXMsIEludmFsaWRDaGFsbGVuZ2VFcnJvciwgW21lc3NhZ2VdKTtcbiAgICBfdGhpcy5fX3Byb3RvX18gPSB0cnVlUHJvdG87XG4gICAgX3RoaXMuY29uc3RydWN0b3IgPSBJbnZhbGlkQ2hhbGxlbmdlRXJyb3I7XG4gICAgX3RoaXMubmFtZSA9IFwiSW52YWxpZENoYWxsZW5nZUVycm9yXCI7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0cyhJbnZhbGlkQ2hhbGxlbmdlRXJyb3IsIF9FcnJvcik7XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoSW52YWxpZENoYWxsZW5nZUVycm9yKTtcbn0oX3dyYXBOYXRpdmVTdXBlcihFcnJvcikpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  InvalidChallengeError: true\n};\nObject.defineProperty(exports, \"InvalidChallengeError\", ({\n  enumerable: true,\n  get: function get() {\n    return _errors.InvalidChallengeError;\n  }\n}));\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js\");\nObject.keys(_utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _utils[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _utils[key];\n    }\n  });\n});\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RlbGxhci1zZGsvbGliL3dlYmF1dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EseURBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsYUFBYSxtQkFBTyxDQUFDLHNFQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsY0FBYyxtQkFBTyxDQUFDLHdFQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL3N0ZWxsYXItc2RrL2xpYi93ZWJhdXRoL2luZGV4LmpzP2MwNjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX2V4cG9ydE5hbWVzID0ge1xuICBJbnZhbGlkQ2hhbGxlbmdlRXJyb3I6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbnZhbGlkQ2hhbGxlbmdlRXJyb3JcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2Vycm9ycy5JbnZhbGlkQ2hhbGxlbmdlRXJyb3I7XG4gIH1cbn0pO1xudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmtleXMoX3V0aWxzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdXRpbHNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfdXRpbHNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgX2Vycm9ycyA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/stellar-sdk/lib/webauth/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.buildChallengeTx = buildChallengeTx;\nexports.gatherTxSigners = gatherTxSigners;\nexports.readChallengeTx = readChallengeTx;\nexports.verifyChallengeTxSigners = verifyChallengeTxSigners;\nexports.verifyChallengeTxThreshold = verifyChallengeTxThreshold;\nexports.verifyTxSignedBy = verifyTxSignedBy;\nvar _randombytes = _interopRequireDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nvar _stellarBase = __webpack_require__(/*! @stellar/stellar-base */ \"(ssr)/./node_modules/@stellar/stellar-base/lib/index.js\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/stellar-sdk/lib/utils.js\");\nvar _errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/stellar-sdk/lib/webauth/errors.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toArray(r) { return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction buildChallengeTx(serverKeypair, clientAccountID, homeDomain) {\n  var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;\n  var networkPassphrase = arguments.length > 4 ? arguments[4] : undefined;\n  var webAuthDomain = arguments.length > 5 ? arguments[5] : undefined;\n  var memo = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var clientDomain = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var clientSigningKey = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n  if (clientAccountID.startsWith(\"M\") && memo) {\n    throw Error(\"memo cannot be used if clientAccountID is a muxed account\");\n  }\n  var account = new _stellarBase.Account(serverKeypair.publicKey(), \"-1\");\n  var now = Math.floor(Date.now() / 1000);\n  var value = (0, _randombytes.default)(48).toString(\"base64\");\n  var builder = new _stellarBase.TransactionBuilder(account, {\n    fee: _stellarBase.BASE_FEE,\n    networkPassphrase: networkPassphrase,\n    timebounds: {\n      minTime: now,\n      maxTime: now + timeout\n    }\n  }).addOperation(_stellarBase.Operation.manageData({\n    name: \"\".concat(homeDomain, \" auth\"),\n    value: value,\n    source: clientAccountID\n  })).addOperation(_stellarBase.Operation.manageData({\n    name: \"web_auth_domain\",\n    value: webAuthDomain,\n    source: account.accountId()\n  }));\n  if (clientDomain) {\n    if (!clientSigningKey) {\n      throw Error(\"clientSigningKey is required if clientDomain is provided\");\n    }\n    builder.addOperation(_stellarBase.Operation.manageData({\n      name: \"client_domain\",\n      value: clientDomain,\n      source: clientSigningKey\n    }));\n  }\n  if (memo) {\n    builder.addMemo(_stellarBase.Memo.id(memo));\n  }\n  var transaction = builder.build();\n  transaction.sign(serverKeypair);\n  return transaction.toEnvelope().toXDR(\"base64\").toString();\n}\nfunction readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain) {\n  var _transaction$timeBoun;\n  if (serverAccountID.startsWith(\"M\")) {\n    throw Error(\"Invalid serverAccountID: multiplexed accounts are not supported.\");\n  }\n  var transaction;\n  try {\n    transaction = new _stellarBase.Transaction(challengeTx, networkPassphrase);\n  } catch (_unused) {\n    try {\n      transaction = new _stellarBase.FeeBumpTransaction(challengeTx, networkPassphrase);\n    } catch (_unused2) {\n      throw new _errors.InvalidChallengeError(\"Invalid challenge: unable to deserialize challengeTx transaction string\");\n    }\n    throw new _errors.InvalidChallengeError(\"Invalid challenge: expected a Transaction but received a FeeBumpTransaction\");\n  }\n  var sequence = Number.parseInt(transaction.sequence, 10);\n  if (sequence !== 0) {\n    throw new _errors.InvalidChallengeError(\"The transaction sequence number should be zero\");\n  }\n  if (transaction.source !== serverAccountID) {\n    throw new _errors.InvalidChallengeError(\"The transaction source account is not equal to the server's account\");\n  }\n  if (transaction.operations.length < 1) {\n    throw new _errors.InvalidChallengeError(\"The transaction should contain at least one operation\");\n  }\n  var _transaction$operatio = _toArray(transaction.operations),\n    operation = _transaction$operatio[0],\n    subsequentOperations = _transaction$operatio.slice(1);\n  if (!operation.source) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation should contain a source account\");\n  }\n  var clientAccountID = operation.source;\n  var memo = null;\n  if (transaction.memo.type !== _stellarBase.MemoNone) {\n    if (clientAccountID.startsWith(\"M\")) {\n      throw new _errors.InvalidChallengeError(\"The transaction has a memo but the client account ID is a muxed account\");\n    }\n    if (transaction.memo.type !== _stellarBase.MemoID) {\n      throw new _errors.InvalidChallengeError(\"The transaction's memo must be of type `id`\");\n    }\n    memo = transaction.memo.value;\n  }\n  if (operation.type !== \"manageData\") {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation type should be 'manageData'\");\n  }\n  if (transaction.timeBounds && Number.parseInt((_transaction$timeBoun = transaction.timeBounds) === null || _transaction$timeBoun === void 0 ? void 0 : _transaction$timeBoun.maxTime, 10) === _stellarBase.TimeoutInfinite) {\n    throw new _errors.InvalidChallengeError(\"The transaction requires non-infinite timebounds\");\n  }\n  if (!_utils.Utils.validateTimebounds(transaction, 60 * 5)) {\n    throw new _errors.InvalidChallengeError(\"The transaction has expired\");\n  }\n  if (operation.value === undefined) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation values should not be null\");\n  }\n  if (!operation.value) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation value should not be null\");\n  }\n  if (Buffer.from(operation.value.toString(), \"base64\").length !== 48) {\n    throw new _errors.InvalidChallengeError(\"The transaction's operation value should be a 64 bytes base64 random string\");\n  }\n  if (!homeDomains) {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: a home domain must be provided for verification\");\n  }\n  var matchedHomeDomain;\n  if (typeof homeDomains === \"string\") {\n    if (\"\".concat(homeDomains, \" auth\") === operation.name) {\n      matchedHomeDomain = homeDomains;\n    }\n  } else if (Array.isArray(homeDomains)) {\n    matchedHomeDomain = homeDomains.find(function (domain) {\n      return \"\".concat(domain, \" auth\") === operation.name;\n    });\n  } else {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: homeDomains type is \".concat(_typeof(homeDomains), \" but should be a string or an array\"));\n  }\n  if (!matchedHomeDomain) {\n    throw new _errors.InvalidChallengeError(\"Invalid homeDomains: the transaction's operation key name does not match the expected home domain\");\n  }\n  var _iterator = _createForOfIteratorHelper(subsequentOperations),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var op = _step.value;\n      if (op.type !== \"manageData\") {\n        throw new _errors.InvalidChallengeError(\"The transaction has operations that are not of type 'manageData'\");\n      }\n      if (op.source !== serverAccountID && op.name !== \"client_domain\") {\n        throw new _errors.InvalidChallengeError(\"The transaction has operations that are unrecognized\");\n      }\n      if (op.name === \"web_auth_domain\") {\n        if (op.value === undefined) {\n          throw new _errors.InvalidChallengeError(\"'web_auth_domain' operation value should not be null\");\n        }\n        if (op.value.compare(Buffer.from(webAuthDomain))) {\n          throw new _errors.InvalidChallengeError(\"'web_auth_domain' operation value does not match \".concat(webAuthDomain));\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (!verifyTxSignedBy(transaction, serverAccountID)) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by server: '\".concat(serverAccountID, \"'\"));\n  }\n  return {\n    tx: transaction,\n    clientAccountID: clientAccountID,\n    matchedHomeDomain: matchedHomeDomain,\n    memo: memo\n  };\n}\nfunction verifyChallengeTxThreshold(challengeTx, serverAccountID, networkPassphrase, threshold, signerSummary, homeDomains, webAuthDomain) {\n  var signers = signerSummary.map(function (signer) {\n    return signer.key;\n  });\n  var signersFound = verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain);\n  var weight = 0;\n  var _loop = function _loop() {\n    var _signerSummary$find;\n    var signer = _signersFound[_i];\n    var sigWeight = ((_signerSummary$find = signerSummary.find(function (s) {\n      return s.key === signer;\n    })) === null || _signerSummary$find === void 0 ? void 0 : _signerSummary$find.weight) || 0;\n    weight += sigWeight;\n  };\n  for (var _i = 0, _signersFound = signersFound; _i < _signersFound.length; _i++) {\n    _loop();\n  }\n  if (weight < threshold) {\n    throw new _errors.InvalidChallengeError(\"signers with weight \".concat(weight, \" do not meet threshold \").concat(threshold, \"\\\"\"));\n  }\n  return signersFound;\n}\nfunction verifyChallengeTxSigners(challengeTx, serverAccountID, networkPassphrase, signers, homeDomains, webAuthDomain) {\n  var _readChallengeTx = readChallengeTx(challengeTx, serverAccountID, networkPassphrase, homeDomains, webAuthDomain),\n    tx = _readChallengeTx.tx;\n  var serverKP;\n  try {\n    serverKP = _stellarBase.Keypair.fromPublicKey(serverAccountID);\n  } catch (err) {\n    throw new Error(\"Couldn't infer keypair from the provided 'serverAccountID': \".concat(err.message));\n  }\n  var clientSigners = new Set();\n  var _iterator2 = _createForOfIteratorHelper(signers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _signer = _step2.value;\n      if (_signer === serverKP.publicKey()) {\n        continue;\n      }\n      if (_signer.charAt(0) !== \"G\") {\n        continue;\n      }\n      clientSigners.add(_signer);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  if (clientSigners.size === 0) {\n    throw new _errors.InvalidChallengeError(\"No verifiable client signers provided, at least one G... address must be provided\");\n  }\n  var clientSigningKey;\n  var _iterator3 = _createForOfIteratorHelper(tx.operations),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var op = _step3.value;\n      if (op.type === \"manageData\" && op.name === \"client_domain\") {\n        if (clientSigningKey) {\n          throw new _errors.InvalidChallengeError(\"Found more than one client_domain operation\");\n        }\n        clientSigningKey = op.source;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var allSigners = [serverKP.publicKey()].concat(_toConsumableArray(Array.from(clientSigners)));\n  if (clientSigningKey) {\n    allSigners.push(clientSigningKey);\n  }\n  var signersFound = gatherTxSigners(tx, allSigners);\n  var serverSignatureFound = false;\n  var clientSigningKeySignatureFound = false;\n  for (var _i2 = 0, _signersFound2 = signersFound; _i2 < _signersFound2.length; _i2++) {\n    var signer = _signersFound2[_i2];\n    if (signer === serverKP.publicKey()) {\n      serverSignatureFound = true;\n    }\n    if (signer === clientSigningKey) {\n      clientSigningKeySignatureFound = true;\n    }\n  }\n  if (!serverSignatureFound) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by server: '\".concat(serverKP.publicKey(), \"'\"));\n  }\n  if (clientSigningKey && !clientSigningKeySignatureFound) {\n    throw new _errors.InvalidChallengeError(\"Transaction not signed by the source account of the 'client_domain' \" + \"ManageData operation\");\n  }\n  if (signersFound.length === 1) {\n    throw new _errors.InvalidChallengeError(\"None of the given signers match the transaction signatures\");\n  }\n  if (signersFound.length !== tx.signatures.length) {\n    throw new _errors.InvalidChallengeError(\"Transaction has unrecognized signatures\");\n  }\n  signersFound.splice(signersFound.indexOf(serverKP.publicKey()), 1);\n  if (clientSigningKey) {\n    signersFound.splice(signersFound.indexOf(clientSigningKey), 1);\n  }\n  return signersFound;\n}\nfunction verifyTxSignedBy(transaction, accountID) {\n  return gatherTxSigners(transaction, [accountID]).length !== 0;\n}\nfunction gatherTxSigners(transaction, signers) {\n  var hashedSignatureBase = transaction.hash();\n  var txSignatures = _toConsumableArray(transaction.signatures);\n  var signersFound = new Set();\n  var _iterator4 = _createForOfIteratorHelper(signers),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var signer = _step4.value;\n      if (txSignatures.length === 0) {\n        break;\n      }\n      var keypair = void 0;\n      try {\n        keypair = _stellarBase.Keypair.fromPublicKey(signer);\n      } catch (err) {\n        throw new _errors.InvalidChallengeError(\"Signer is not a valid address: \".concat(err.message));\n      }\n      for (var i = 0; i < txSignatures.length; i++) {\n        var decSig = txSignatures[i];\n        if (!decSig.hint().equals(keypair.signatureHint())) {\n          continue;\n        }\n        if (keypair.verify(hashedSignatureBase, decSig.signature())) {\n          signersFound.add(signer);\n          txSignatures.splice(i, 1);\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return Array.from(signersFound);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/stellar-sdk/lib/webauth/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/stellar-sdk/package.json":
/*!***********************************************!*\
  !*** ./node_modules/stellar-sdk/package.json ***!
  \***********************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"name":"stellar-sdk","version":"12.2.0","description":"A library for working with the Stellar network, including communication with the Horizon and Soroban RPC servers.","keywords":["stellar"],"homepage":"https://github.com/stellar/js-stellar-sdk","bugs":{"url":"https://github.com/stellar/js-stellar-sdk/issues"},"repository":{"type":"git","url":"https://github.com/stellar/js-stellar-sdk.git"},"license":"Apache-2.0","author":"Stellar Development Foundation <hello@stellar.org>","main":"./lib/index.js","types":"./lib/index.d.ts","browser":"./dist/stellar-sdk.min.js","files":["/types","/lib","/dist"],"exports":{".":{"browser":"./dist/stellar-sdk.min.js","types":"./lib/index.d.ts","default":"./lib/index.js"},"./contract":{"types":"./lib/contract/index.d.ts","default":"./lib/contract/index.js"},"./rpc":{"types":"./lib/rpc/index.d.ts","default":"./lib/rpc/index.js"}},"scripts":{"build":"cross-env NODE_ENV=development yarn _build","build:prod":"cross-env NODE_ENV=production yarn _build","build:node":"yarn _babel && yarn build:ts","build:ts":"tsc -p ./config/tsconfig.json","build:test":"tsc -p ./test/unit/tsconfig.json","build:browser":"webpack -c config/webpack.config.browser.js","build:docs":"cross-env NODE_ENV=docs yarn _babel","clean":"rm -rf lib/ dist/ coverage/ .nyc_output/ jsdoc/ test/e2e/.soroban","docs":"yarn build:docs && jsdoc -c ./config/.jsdoc.json --verbose","test":"yarn build:test && yarn test:node && yarn test:integration && yarn test:browser","test:e2e":"./test/e2e/initialize.sh && yarn _nyc mocha --recursive \'test/e2e/src/test-*.js\'","test:node":"yarn _nyc mocha --recursive \'test/unit/**/*.js\'","test:integration":"yarn _nyc mocha --recursive \'test/integration/**/*.js\'","test:browser":"karma start config/karma.conf.js","fmt":"yarn eslint -c .eslintrc.js src/ --fix && yarn _prettier","preversion":"yarn clean && yarn _prettier && yarn build:prod && yarn test","prepare":"yarn build:prod","_build":"yarn build:node && yarn build:test && yarn build:browser","_babel":"babel --extensions \'.ts\' --out-dir lib/ src/","_nyc":"nyc --nycrc-path config/.nycrc","_prettier":"prettier --ignore-path config/.prettierignore --write \'./test/**/*.js\'"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"**/*.{js,json,ts}":["yarn fmt"]},"mocha":{"reporter":"spec","require":["@babel/register","test/test-nodejs.js","dotenv/config"],"exclude":["test/test-browser.js"],"sort":true,"recursive":true,"timeout":120000},"nyc":{"instrument":false,"sourceMap":false,"reporter":["text-summary"]},"devDependencies":{"@babel/cli":"^7.24.8","@babel/core":"^7.24.9","@babel/eslint-plugin":"^7.24.7","@babel/preset-env":"^7.24.8","@babel/preset-typescript":"^7.24.7","@babel/register":"^7.24.6","@definitelytyped/dtslint":"^0.2.22","@istanbuljs/nyc-config-babel":"3.0.0","@stellar/tsconfig":"^1.0.2","@types/chai":"^4.3.14","@types/detect-node":"^2.0.0","@types/eventsource":"^1.1.12","@types/json-schema":"^7.0.15","@types/lodash":"^4.17.7","@types/mocha":"^10.0.7","@types/node":"^20.14.11","@types/randombytes":"^2.0.1","@types/sinon":"^17.0.2","@types/urijs":"^1.19.20","@typescript-eslint/parser":"^7.16.1","axios-mock-adapter":"^1.22.0","babel-loader":"^9.1.3","babel-plugin-istanbul":"^6.1.1","buffer":"^6.0.3","chai":"^4.3.10","chai-as-promised":"^7.1.1","chai-http":"^4.3.0","cross-env":"^7.0.3","dotenv":"^16.4.5","eslint":"^8.57.0","eslint-config-airbnb-base":"^15.0.0","eslint-config-airbnb-typescript":"^18.0.0","eslint-config-prettier":"^9.0.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.8.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prefer-import":"^0.0.1","eslint-plugin-prettier":"^5.2.1","eslint-webpack-plugin":"^4.2.0","ghooks":"^2.0.4","husky":"^9.1.1","jsdoc":"^4.0.2","json-schema-faker":"^0.5.6","karma":"^6.4.3","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-coverage":"^2.2.1","karma-firefox-launcher":"^2.1.3","karma-mocha":"^2.0.0","karma-sinon-chai":"^2.0.2","karma-webpack":"^5.0.1","lint-staged":"^15.2.7","lodash":"^4.17.21","minami":"^1.1.1","mocha":"^10.6.0","node-polyfill-webpack-plugin":"^3.0.0","nyc":"^15.1.0","prettier":"^3.3.3","randombytes":"^2.1.0","sinon":"^17.0.1","sinon-chai":"^3.7.0","taffydb":"^2.7.3","terser-webpack-plugin":"^5.3.10","ts-node":"^10.9.2","typescript":"^5.5.3","webpack":"^5.93.0","webpack-cli":"^5.0.1"},"dependencies":{"@stellar/stellar-base":"^12.1.0","axios":"^1.7.2","bignumber.js":"^9.1.2","eventsource":"^2.0.2","randombytes":"^2.1.0","toml":"^3.0.0","urijs":"^1.19.1"}}');

/***/ })

};
;